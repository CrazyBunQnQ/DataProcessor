{
    "Scheduled Task/Job": "预定任务/任务",
    "Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. On Android and iOS, APIs and libraries exist to facilitate scheduling tasks to execute at a specified date, time, or interval.\n\nOn Android, the `WorkManager` API allows asynchronous tasks to be scheduled with the system. `WorkManager` was introduced to unify task scheduling on Android, using `JobScheduler`, `GcmNetworkManager`, and `AlarmManager` internally. `WorkManager` offers a lot of flexibility for scheduling, including periodically, one time, or constraint-based (e.g. only when the device is charging).(Citation: Android WorkManager)\n\nOn iOS, the `NSBackgroundActivityScheduler` API allows asynchronous tasks to be scheduled with the system. The tasks can be scheduled to be repeating or non-repeating, however, the system chooses when the tasks will be executed. The app can choose the interval for repeating tasks, or the delay between scheduling and execution for one-time tasks.(Citation: Apple NSBackgroundActivityScheduler)": "不良者可能滥用任务调度功能,为恶意代码的初始或反复执行提供便利. 在Android和iOS上,存在API和库,以方便在指定的日期,时间,或间隔执行的调度任务.\n\n关于Android, \" 工作管理员 \" API允许与系统同步安排任务. 采用了`WorkManager ' 来统一关于Android的任务时间安排,在内部使用`JobScheduler ' 、`GcmNetworkManager ' 和`AlarmManager ' 。 `WorkManager ' 为排期提供了很大的灵活性,包括定期、一次性或基于约束(例如,仅在装置充电时)。 (点击:Android WorkManager).\n\n在iOS上, \" NSB背景活动定时器 \" API允许与系统同步安排任务. 任务可以被安排为重复或不重复,然而,系统选择何时执行任务. 应用程序可以选择重复任务的间隔,也可以选择一次性任务的调度和执行之间的延迟. (点击: Apple NSBackground Activity Scheduler) (苹果语:苹果 NSBackground Activity Scheduller)",
    "Scheduling tasks/jobs can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversarial behavior.": "时间安排任务/工作可能难以发现,因此,企业在敌对行为的其他阶段可以更好地侧重于发现.",
    "Code Injection": "代码注入",
    "Adversaries may use code injection attacks to implant arbitrary code into the address space of a running application. Code is then executed or interpreted by that application. Adversaries utilizing this technique may exploit capabilities to load code in at runtime through dynamic libraries.\n\nWith root access, `ptrace` can be used to target specific applications and load shared libraries into its process memory.(Citation: Shunix Code Injection Mar 2016)(Citation: Fadeev Code Injection Aug 2018) By injecting code, an adversary may be able to gain access to higher permissions held by the targeted application by executing as the targeted application. In addition, the adversary may be able to evade detection or enable persistent access to a system under the guise of the application’s process.(Citation: Google Triada June 2019)\n": "爱好者可能使用代码注射攻击将任意代码植入运行中的应用程序的地址空间. 然后通过该申请执行或解释守则。 利用这一技术的爱好者可能利用能力,通过动态库在运行时加载代码。\n\n有了根存取,“ptrace”可用于瞄准特定应用程序,并将共享的库装入其进程内存。 (选号: 舒尼克斯代码注入 Mar 2016 (简体中文). Fadeev代码注入 2018年8月. 通过注射代码,对手可以通过执行目标申请获得目标申请所持有的更高权限。 此外,对手也许能够逃避发现,或能够以申请程序的幌子持续进入某一系统。 (选号: Google Triada 2019年6月 (英语).\n",
    "Code injection can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversarial behavior.": "代码注射可能难以检测,因此,企业在敌对行为的其他阶段可以更好地侧重于检测.",
    "Adversary-in-the-Middle": "中场逆流",
    "Adversaries may attempt to position themselves between two or more networked devices to support follow-on behaviors such as [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002) or [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1642).  \n\n \n\n[Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1638) can be achieved through several mechanisms, such as a malicious application registering itself as a VPN client. By doing this, the adversary can effectively redirect device traffic to wherever they want. However, registering as a VPN client requires user consent on both Android and iOS. Additionally, on iOS, the application requires a special entitlement that must be granted by Apple. Alternatively, if an application is able to escalate privileges, it can potentially utilize those privileges to gain access to network traffic.  \n\n \n\nOutside of a mobile device, adversaries may be able to capture traffic by employing a rogue base station or Wi-Fi access point. These devices will allow adversaries to capture network traffic after it has left the device, while it is flowing to its destination. On a local network, enterprise techniques could be used, such as DNS redirection or DNS poisoning.  \n\n \n\nIf applications properly encrypt their network traffic, sensitive data may not be accessible an adversary, depending on the point of capture. ": "逆袭者可能试图在两个或两个以上的网络化设备之间定位,以支持后续行为,例如[传送数据操纵](https://sattack.mitre.org/techniques/T1565/002)或[endpoint Deficial of Service](https://sattack.mitre.org/techniques/T1642).\n\n\n\n[Aversary-in-the-Middle](https://sattack.mitre.org/techniques/T1638)可以通过多种机制实现,例如恶意应用程序注册自己为VPN客户端. 通过这样做,对手可以有效地将设备流量转向他们想要的地方. 然而,注册为VPN客户端需要Android和iOS的用户同意. 此外,在iOS上,应用程序需要获得苹果公司必须给予的特殊权益. 或者,如果一个应用程序能够提升权限,它可能利用这些权限获取网络流量。\n\n\n\n在移动设备之外,对手可能能够通过使用无赖基地站或Wi-Fi接入点来捕捉交通. 这些设备将允许对手在离开该设备后,在它流向其目的地时捕获网络流量. 在局部网络上,可以使用企业技术,如DNS重定向或DNS中毒.\n\n\n\n如果应用程序正确加密其网络流量,敏感数据可能无法访问对手,取决于捕获点.",
    "Application vetting services should look for applications that request VPN access. These applications should be heavily scrutinized since VPN functionality is not very common. Mobile security products can potentially detect rogue Wi-Fi access points if the adversary is attempting to decrypt traffic using an untrusted SSL certificate. \n\n \n\nOn both Android and iOS, users must grant consent to an application to act as a VPN. Both platforms also provide visual context to the user in the top status bar when a VPN connection is active. Users can see registered VPN services in the device settings. ": "申请审核部门应当查找申请VPN访问权限的申请. 由于VPN功能不常见,这些应用程序应严格审查. 移动安全产品如果对手试图使用不信任的SSL证书解密流量,则有可能检测无赖Wi-Fi接入点.\n\n\n\n在Android和iOS上,用户必须同意一个应用程序作为VPN. 两个平台在VPN连接活动时也向顶部状态栏的用户提供视觉上下文. 用户可以在设备设置中看到注册的VPN服务.",
    "Abuse Elevation Control Mechanism": "滥用控制机制",
    "Adversaries may circumvent mechanisms designed to control elevated privileges to gain higher-level permissions. Most modern systems contain native elevation control mechanisms that are intended to limit privileges that a user can gain on a machine. Authorization has to be granted to specific users in order to perform tasks that are designated as higher risk. An adversary can use several methods to take advantage of built-in control mechanisms in order to escalate privileges on a system. ": "爱好者可能绕过旨在控制提升特权的机制,以获得更高水平的许可. 大多数现代系统都包含本土高程控制机制,旨在限制用户在机器上可以获得的特权. 必须授权特定用户执行被定为高风险的任务。 一个对手可以使用几种方法来利用内置的控制机制来提升一个系统中的特权.",
    "When an application requests administrator permission, users are presented with a popup and the option to grant or deny the request. Application vetting services can detect when an application requests administrator permission. Extra scrutiny could be applied to applications that do": "当一个应用程序请求管理员许可时,向用户提供弹出和批准或拒绝请求的选择. 应用程序审查服务可以在应用程序请求管理员许可时发现. 可对实际应用进行额外审查",
    "Remote Access Software": "远程访问软件",
    "Adversaries may use legitimate remote access software, such as `VNC`, `TeamViewer`, `AirDroid`, `AirMirror`, etc., to establish an interactive command and control channel to target mobile devices.  \n\nRemote access applications may be installed and used post-compromise as an alternate communication channel for redundant access or as a way to establish an interactive remote session with the target device. They may also be used as a component of malware to establish a reverse connection to an adversary-controlled system or service. Installation of remote access tools may also include persistence.  ": "爱好者可以使用合法的远程访问软件,如 \" VNC \" 、 \" TeamViewer \" 、 \" AirDroid \" 、 \" AirMiror \" 等,以建立一个交互式的指挥和控制频道,以瞄准移动设备。\n\n远程访问应用程序可以安装,并在妥协后用作冗余访问的替代通信通道,或者作为与目标设备建立交互式远程会话的一种方式. 它们也可能被用作恶意软件的组成部分,与对手控制的系统或服务建立逆向连接. 安装远程访问工具也可能包括持久性.",
    "Malicious SMS Message": "恶意短信 消息",
    "Test": "测试",
    "Obtain Device Cloud Backups": "获取设备云备份",
    "An adversary who is able to obtain unauthorized access to or misuse authorized access to cloud backup services (e.g. Google's Android backup service or Apple's iCloud) could use that access to obtain sensitive data stored in device backups. For example, the Elcomsoft Phone Breaker product advertises the ability to retrieve iOS backup data from Apple's iCloud (Citation: Elcomsoft-EPPB). Elcomsoft also describes (Citation: Elcomsoft-WhatsApp) obtaining WhatsApp communication histories from backups stored in iCloud.": "能够获得未经授权访问或滥用授权访问云备份服务(如Google的Android备份服务或苹果的iCloud)的对手可以利用该访问获取存储在设备备份中的敏感数据. 例如,Elcomsoft Phone Breaker产品广告宣传从苹果公司的iCloud(英语:Elcomsoft-EPB)获取iOS备份数据的能力. Elcomsoft还描述了(Citation:Elcomsoft-WhatsApp)从存储在iCloud的备份中获得WhatsApp通信历史.",
    "Google provides the ability for users to view their account activity. Apple iCloud also provides notifications to users of account activity.": "Google为用户提供了查看其账户活动的能力. 苹果iCloud也向用户提供账户活动的通知.",
    "Uninstall Malicious Application": "未安装恶意应用程序",
    "Adversaries may include functionality in malware that uninstalls the malicious application from the device. This can be achieved by: \n \n* Abusing device owner permissions to perform silent uninstallation using device owner API calls. \n* Abusing root permissions to delete files from the filesystem. \n* Abusing the accessibility service. This requires sending an intent to the system to request uninstallation, and then abusing the accessibility service to click the proper places on the screen to confirm uninstallation.": "不良者可能包括恶意软件中的功能,从设备中解禁恶意应用程序. 可通过下列方式实现这一目标:\n\n* Abusing设备所有者允许使用设备所有者API的电话进行静默的不安装。\n* 滥用根权限从文件系统中删除文件。\n* 滥用无障碍服务。 这需要向系统发送请求解装的意向,然后滥用无障碍服务点击屏幕上的适当位置确认解装.",
    "Users can see a list of applications that can use accessibility services in the device settings. Application vetting services could look for use of the accessibility service or features that typically require root access.": "用户可以看到一个可以在设备设置中使用无障碍服务的应用程序列表. 申请审查服务可以寻找无障碍服务或通常需要根接入的特征.",
    "Indicator Removal on Host": "在主机上删除指标",
    "Adversaries may delete, alter, or hide generated artifacts on a device, including files, jailbreak status, or the malicious application itself. These actions may interfere with event collection, reporting, or other notifications used to detect intrusion activity. This may compromise the integrity of mobile security solutions by causing notable events or information to go unreported.": "爱好者可能删除、更改或隐藏设备上生成的文物,包括文件、越狱状态或恶意应用程序本身。 这些行动可能干扰事件收集、报告或用于检测入侵活动的其他通知。 这可能会使一些值得注意的事件或信息得不到报告,从而损害移动安全解决方案的完整性.",
    "Mobile security products can detect which applications can request device administrator permissions. Users can view applications with administrator access through the device settings, and may also notice if user data is inexplicably missing. Users can see a list of applications that can use accessibility services in the device settings. Application vetting services could look for use of APIs that could indicate the application is trying to hide activity.": "移动安全产品可以检测哪些应用程序可以请求设备管理员权限. 用户可以通过设备设置查看管理员访问的应用程序,如果用户数据无法解释的缺失,还可以注意到. 用户可以看到一个可以在设备设置中使用无障碍服务的应用程序列表. 应用程序审查服务可以寻找使用API,可以表明应用程序试图隐藏活动.",
    "Supply Chain Compromise": "供应链妥协",
    "Adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise.\n\nSupply chain compromise can take place at any stage of the supply chain including:\n\n* Manipulation of development tools\n* Manipulation of a development environment\n* Manipulation of source code repositories (public or private)\n* Manipulation of source code in open-source dependencies\n* Manipulation of software update/distribution mechanisms\n* Compromised/infected system images\n* Replacement of legitimate software with modified versions\n* Sales of modified/counterfeit products to legitimate distributors\n* Shipment interdiction\n\nWhile supply chain compromise can impact any component of hardware or software, attackers looking to gain execution have often focused on malicious additions to legitimate software in software distribution or update channels. Targeting may be specific to a desired victim set or malicious software may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.  Popular open source projects that are used as dependencies in many applications may also be targeted as a means to add malicious code to users of the dependency, specifically with the widespread usage of third-party advertising libraries.(Citation: Grace-Advertisement)(Citation: NowSecure-RemoteCode)": "为了数据或系统妥协的目的,逆客可能在最后消费者收到之前操纵产品或产品交付机制。\n\n供应链妥协可以在供应链的任何阶段进行,包括:\n\n* 操纵发展工具\n* 管理发展环境\n* 操纵源代码存储器(公共或私人)\n* 在开源依赖中操纵源代码\n* 管理软件更新/分发机制\n* 压缩/感染系统图像\n* 以修改的版本取代合法软件\n* 向合法分销商出售经修改/伪造的产品。\n* 阻截运输\n\n虽然供应链妥协会影响到硬件或软件的任何组件,但寻求获得执行的攻击者往往注重在软件发行或更新渠道中恶意添加合法软件. 目标设定可能针对所希望的受害人组合,或者恶意软件可能分发给广大的消费者,但只能转向针对特定受害人的额外策略。 在许多应用中被用作依赖者的流行开源项目也可能成为目标,作为向依赖用户添加恶意代码的手段,具体来说是第三方广告图书馆的广泛使用. (引文:Grace-Adverties) (引文:NowSecure-RemoteCode) (中文(简体) )",
    "Usage of insecure or malicious third-party libraries could be detected by application vetting services. Malicious software development tools could be detected by enterprises that deploy endpoint protection software on computers that are used to develop mobile apps. Application vetting could detect the usage of insecure or malicious third-party libraries.": "对不安全或恶意的第三方图书馆的使用可以通过应用程序审查服务来发现。 恶意软件开发工具可由在用于开发移动应用的计算机上部署端点保护软件的企业发现. 应用程序审查可发现使用不安全或恶意的第三方图书馆.",
    "Impersonate SS7 Nodes": "冒充SS7节点",
    "Adversaries may exploit the lack of authentication in signaling system network nodes to track the to track the location of mobile devices by impersonating a node.(Citation: Engel-SS7)(Citation: Engel-SS7-2008)(Citation: 3GPP-Security)(Citation: Positive-SS7)(Citation: CSRIC5-WG10-FinalReport) \n\n \n\nBy providing the victim’s MSISDN (phone number) and impersonating network internal nodes to query subscriber information from other nodes, adversaries may use data collected from each hop to eventually determine the device’s geographical cell area or nearest cell tower.(Citation: Engel-SS7)": "爱好者可能利用信号系统网络节点缺乏认证,通过冒充节点来跟踪移动设备的位置. (引文:Engel-SS7)(引文:Engel-SS7-2008)(引文:3GPP-安全)(引文:正面-SS7)(引文:CSRIC5-WG10-Final Report)\n\n\n\n通过提供受害人的MSIDN(电话号码)和冒充网络内部节点从其他节点查询用户信息,对手可以使用从每个节点收集的数据最终确定设备的地理细胞面积或最近的细胞塔. (点击:Engel-SS7)",
    "Network carriers may be able to use firewalls, Intrusion Detection Systems (IDS), or Intrusion Prevention Systems (IPS) to detect and/or block SS7 exploitation.(Citation: CSRIC-WG1-FinalReport) The CSRIC also suggests threat information sharing between telecommunications industry members.": "网络载体可能能够使用防火墙,入侵探测系统(IDS)或入侵预防系统(IPS)来探测和/或阻止SS7的开发. (中文(简体) ). 中国证监会还建议电信行业成员之间共享威胁信息.",
    "Match Legitimate Name or Location": "匹配合法名称或位置",
    "Adversaries may match or approximate the name or location of legitimate files or resources when naming/placing them. This is done for the sake of evading defenses and observation. This may be done by giving artifacts the name and icon of a legitimate, trusted application (i.e., Settings), or using a package name that matches legitimate, trusted applications (i.e., `com.google.android.gm`). \n\nAdversaries may also use the same icon of the file or application they are trying to mimic.\n": "爱好者在命名/安置合法文件或资源时,可能与其名称或位置相匹配或相近. 这样做是为了逃避防御和观察. 为此,可以给文物提供合法、可信赖的应用程序的名称和图标(即设置),或者使用符合合法、可信赖的应用程序的软件包名称(即`com.google.android.gm')。\n\n爱好者也可能使用他们试图模仿的文件或应用程序的相同图标.\n.",
    "Insecure Third-Party Libraries": "不安全的第三方图书馆",
    "Protected User Data": "受保护的用户数据",
    "Adversaries may utilize standard operating system APIs to collect data from permission-backed data stores on a device, such as the calendar or contact list. These permissions need to be declared ahead of time. On Android, they must be included in the application’s manifest. On iOS, they must be included in the application’s `Info.plist` file.  \n\n \n\nIn almost all cases, the user is required to grant access to the data store that the application is trying to access. In recent OS versions, vendors have introduced additional privacy controls for users, such as the ability to grant permission to an application only while the application is being actively used by the user. \n\n \n\nIf the device has been jailbroken or rooted, an adversary may be able to access [Protected User Data](https://attack.mitre.org/techniques/T1636) without the user’s knowledge or approval. ": "爱好者可能利用标准操作系统API从一个设备上由许可支撑的数据存储中收集数据,如日历或联系列表. 这些权限需要提前宣布. 在Android上,他们必须被列入申请表。 在iOS中,它们必须包含在应用程序的`Info.plist'文件中。\n\n\n\n几乎在所有情况下,用户都必须允许访问应用程序试图访问的数据库。 在近期的OS版本中,销售商为用户引入了额外的隐私控制,比如在用户积极使用该应用程序时只能对一个应用程序给予许可.\n\n\n\n如果该装置已经断裂或根植,则敌方可以在用户不知情或未经用户批准的情况下访问[保护用户数据](https://sattack.mitre.org/techniques/T1636).",
    "Users can view permissions granted to an application in device settings. Application vetting services typically flag permissions requested by an application, which can be reviewed by an administrator. Certain dangerous permissions, such as `RECEIVE_SMS`, could receive additional scrutiny.": "用户可以在设备设置中查看给予应用程序的权限. 申请审查服务一般会给申请请求的许可打上旗帜,管理员可以审查. 某些危险许可,例如`RECEIVE_SMS ' ,可以接受更多的审查.",
    "Asymmetric Cryptography": "非对称加密",
    "Adversaries may employ a known asymmetric encryption algorithm to conceal command and control traffic, rather than relying on any inherent protections provided by a communication protocol. Asymmetric cryptography, also known as public key cryptography, uses a keypair per party: one public that can be freely distributed, and one private that should not be distributed. Due to how asymmetric algorithms work, the sender encrypts data with the receiver’s public key and the receiver decrypts the data with their private key. This ensures that only the intended recipient can read the encrypted data. Common public key encryption algorithms include RSA, ElGamal, and ECDSA.\n\nFor efficiency, many protocols (including SSL/TLS) use symmetric cryptography once a connection is established, but use asymmetric cryptography to establish or transmit a key. As such, these protocols are classified as [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1521/002).": "爱好者可能使用一种已知的不对称加密算法来隐藏指挥和控制流量,而不是依赖通信协议提供的任何固有保护. 非对称密码学,又称公钥密码学,每方使用一个密钥pair:一个可自由分布的公钥,一个不应分布的私钥. 由于非对称算法的运作,发送者用接收器的公钥加密数据,接收者用私钥解密数据. 这确保了只有预期的接收者才能读取加密数据. 常见的公钥加密算法包括RSA,ElGamal,以及ECDSA.\n\n为了提高效率,许多协议(包括SSL/TLS)在连接建立后使用对称加密法,但使用不对称加密法来建立或传输密钥. 因此,这些协议被归类为[对称加密](https://sattack.mitre.org/techniques/T1521/002).",
    "Since data encryption is a common practice in many legitimate applications and uses standard programming language-specific APIs, encrypting data for command and control communication is regarded as undetectable to the user.": "由于数据加密是许多合法应用中的一种常见做法,并且使用标准编程语言特有的API,所以加密数据用于指挥和控制通信被认为是用户无法察觉的.",
    "Software Discovery": "软件发现",
    "Adversaries may attempt to get a listing of applications that are installed on a device. Adversaries may use the information from [Software Discovery](https://attack.mitre.org/techniques/T1418) during automated discovery to shape follow-on behaviors, including whether or not to fully infect the target and/or attempts specific actions. \n\n \n\nAdversaries may attempt to enumerate applications for a variety of reasons, such as figuring out what security measures are present or to identify the presence of target applications. ": "爱好者可能试图获得一个安装在设备上的应用程序列表. 逆袭者可以在自动发现时使用来自[Software Discovery](https://sattack.mitre.org/techniques/T1418)的信息来塑造后续行为,包括是否完全感染目标以及/或尝试特定行动.\n\n\n\n反常者可能出于各种原因试图列举申请,例如找出存在何种安全措施,或确定是否存在目标申请.",
    "Application vetting services could look for the Android permission `android.permission.QUERY_ALL_PACKAGES`, and apply extra scrutiny to applications that request it. On iOS, application vetting services could look for usage of the private API `LSApplicationWorkspace` and apply extra scrutiny to applications that employ it.": "申请审查服务可查询Android许可`android.permission。 QUERY_ALL_PACKAIES ' ,并对提出要求的应用程序进行额外审查. 在iOS方面,应用程序审查服务可寻找私人API`LSAplicationWorkspace ' 的使用,并对使用该软件的应用程序进行额外审查.",
    "Process Discovery": "进程发现",
    "Adversaries may attempt to get information about running processes on a device. Information obtained could be used to gain an understanding of common software/applications running on devices within a network. Adversaries may use the information from [Process Discovery](https://attack.mitre.org/techniques/T1424) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions. \n\n \n\nRecent Android security enhancements have made it more difficult to obtain a list of running processes. On Android 7 and later, there is no way for an application to obtain the process list without abusing elevated privileges. This is due to the Android kernel utilizing the `hidepid` mount feature. Prior to Android 7, applications could utilize the `ps` command or examine the `/proc` directory on the device.(Citation: Android-SELinuxChanges) \n\n \n\nIn iOS, applications have previously been able to use the `sysctl` command to obtain a list of running processes. This functionality has been removed in later iOS versions. ": "爱好者可能试图获取设备运行过程的信息. 所获得的信息可用于了解一个网络内设备上的通用软件/应用程序。 逆袭者在自动发现时可以使用[Process Discovery](https://sattack.mitre.org/techniques/T1424)的信息来塑造后续行为,包括敌方是否完全感染目标并/或试图采取具体行动.\n\n\n\n最近的Android安全增强使得更难获得运行过程列表. 在Android 7以及后来,申请无法在不滥用提升的特权的情况下获得进程列表. 这是由于Android内核使用了“hidepid”挂载特性。 在Android 7之前,应用程序可以使用 \" ps \" 指令或检查设备上的 \" /proc \" 目录。 (简体中文:Android-SELinux Changes).\n\n\n\n在iOS中,应用程序之前能够使用\"sysctl\"命令来获取运行过程的列表. 这个功能在后来的iOS版本中已被移除.",
    "Mobile security products can typically detect rooted devices, which is an indication that Process Discovery is possible. Application vetting could potentially detect when applications attempt to abuse root access or root the system itself. Further, application vetting services could look for attempted usage of legacy process discovery mechanisms, such as the usage of `ps` or inspection of the `/proc` directory.": "移动安全产品一般可以检测到植根装置,这表明发现过程是可能的. 应用程序审查有可能发现,当应用程序试图滥用根存取或根植系统本身时。 此外,应用审查服务可寻找对遗留过程发现机制的尝试,例如使用`ps ' 或检查`/proc ' 名录.",
    "Call Log": "调用日志",
    "Adversaries may utilize standard operating system APIs to gather call log data. On Android, this can be accomplished using the Call Log Content Provider. iOS provides no standard API to access the call log. \n\n \n\nIf the device has been jailbroken or rooted, an adversary may be able to access the [Call Log](https://attack.mitre.org/techniques/T1636/002) without the user’s knowledge or approval. ": "爱好者可能利用标准操作系统API来收集呼叫日志数据. 在Android上,可以使用调用日志内容提供器完成此任务. iOS没有提供标准API来访问调用日志.\n\n\n\n如果该装置已被监禁或根植,敌方可以在用户不知情或未经其批准的情况下进入[电话日志](https://sattack.mitre.org/techniques/T1636/002).",
    "On Android, the user can manage which applications have permission to access the call log through the device settings screen, revoking the permission if necessary. Application vetting services could look for `android.permission.READ_CALL_LOG` in an Android application’s manifest. Most applications do not need call log access, so extra scrutiny could be applied to those that request it.  ": "在Android上,用户可以管理哪些应用程序有权限通过设备设置屏幕访问呼叫日志,必要时取消权限. 申请审核服务可在Android申请单中查找`android.permission.READ_CALL_LOG ' 。 大多数应用程序不需要调用日志访问,因此可以对请求访问者进行额外审查.",
    "Security Software Discovery": "安全软件发现",
    "Adversaries may attempt to get a listing of security applications and configurations that are installed on a device. This may include things such as mobile security products. Adversaries may use the information from [Security Software Discovery](https://attack.mitre.org/techniques/T1418/001) during automated discovery to shape follow-on behaviors, including whether or not to fully infect the target and/or attempt specific actions. ": "爱好者可能会试图获得安装在设备上的安全应用程序和配置的列表. 这可能包括移动安全产品。 逆袭者在自动发现时可以使用[安全软件发现](https://sattack.mitre.org/techniques/T1418/001)的信息来塑造后续行为,包括是否完全感染目标并/或尝试具体行动.",
    "App Delivered via Email Attachment": "通过电子邮件附件交付的应用程序",
    "Ptrace System Calls": "Ptrace 系统呼叫",
    "Adversaries may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges. Ptrace system call injection is a method of executing arbitrary code in the address space of a separate live process.  \n\nPtrace system call injection involves attaching to and modifying a running process. The ptrace system call enables a debugging process to observe and control another process (and each individual thread), including changing memory and register values.(Citation: PTRACE man) Ptrace system call injection is commonly performed by writing arbitrary code into a running process (e.g., by using `malloc`) then invoking that memory with `PTRACE_SETREGS` to set the register containing the next instruction to execute. Ptrace system call injection can also be done with `PTRACE_POKETEXT`/`PTRACE_POKEDATA`, which copy data to a specific address in the target process's memory (e.g., the current address of the next instruction).(Citation: PTRACE man)(Citation: Medium Ptrace JUL 2018)  \n\nPtrace system call injection may not be possible when targeting processes with high-privileges, and on some systems those that are non-child processes.(Citation: BH Linux Inject)  \n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via ptrace system call injection may also evade detection from security products since the execution is masked under a legitimate process.": "爱好者可能会通过ptrace(进程追踪)系统调用向进程注入恶意代码,以逃避基于进程的防御以及可能提升权限. Ptrace系统调用注射是一种在单独的直播过程的地址空间中执行任意代码的方法.\n\nPtrace系统呼叫注射涉及连接和修改运行过程. ptrace系统调用使调试过程能够观察和控制另一个过程(以及每个单个线程),包括改变内存和注册值. (批注:PTRACE男) Ptrace系统呼叫注射通常通过将任意代码写入运行过程(例如使用`malloc ' ),然后用`PTRACE_SETREGS ' 引用该内存来设定包含下一个执行指令的寄存器。 Ptrace系统呼叫注射也可以使用‘PTRACE_POKETEXT'/‘PTRACE_POKEDATA'进行,后者将数据复制到目标过程内存中的特定地址(如下一个指令的当前地址). (引文:PTRACE man) (中文(简体) ).\n\nPtrace系统调用注射在瞄准高优先度过程时可能是不可能的,在一些系统中,一些是非儿童过程。 (点击: BH Linux 注射)\n\n在另一个进程背景下运行代码可能允许访问进程的内存,系统/网络资源,以及可能提升的特权. 通过跟踪系统呼叫注射执行也可能逃避从安全产品中检测,因为执行是在合法程序下蒙上面具的.",
    "Application vetting services could look for misuse of dynamic libraries.": "应用程序审查服务可以寻找动态图书馆的滥用.",
    "Impair Defenses": "缺陷防御",
    "Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. This not only involves impairing preventative defenses, such as anti-virus, but also detection capabilities that defenders can use to audit activity and identify malicious behavior. This may span both native defenses as well as supplemental capabilities installed by users or mobile endpoint administrators.": "不良分子可能恶意修改受害人环境的组成部分,以阻碍或破坏防御机制。 这不仅涉及破坏预防性防御,如防病毒,而且涉及维权者可用于审计活动和识别恶意行为的侦测能力. 这既包括本土防御,也包括用户或移动端点管理员安装的补充能力.",
    "Mobile security products integrated with Samsung Knox for Mobile Threat Defense can monitor processes to see if security tools are killed or stop running. Application vetting can detect many techniques associated with impairing device defenses.(Citation: Samsung Knox Mobile Threat Defense)": "与三星诺克斯整合用于移动威胁防御的移动安全产品可以监控流程,看安全工具是否被杀死或停止运行. 应用审查可以发现许多与损害装置防御有关的技术. (选号: 三星诺克斯移动威胁防御)",
    "Abuse Accessibility Features": "虐待 无障碍特征",
    "**This technique has been deprecated. Please use [Input Capture](https://attack.mitre.org/techniques/T1417), [Input Injection](https://attack.mitre.org/techniques/T1516), and [Input Prompt](https://attack.mitre.org/techniques/T1411) where appropriate.**\n\nA malicious app could abuse Android's accessibility features to capture sensitive data or perform other malicious actions.(Citation: Skycure-Accessibility)\n\nAdversaries may abuse accessibility features on Android to emulate a user's clicks, for example to steal money from a user's bank account.(Citation: android-trojan-steals-paypal-2fa)(Citation: banking-trojans-google-play)\n\nAdversaries may abuse accessibility features on Android devices to evade defenses by repeatedly clicking the \"Back\" button when a targeted app manager or mobile security app is launched, or when strings suggesting uninstallation are detected in the foreground. This effectively prevents the malicious application from being uninstalled.(Citation: android-trojan-steals-paypal-2fa)": "** 这一技术已经贬值。 请使用[输入捕获](https://sattack.mitre.org/techniques/T1417). [输入注射](https://sattack.mitre.org/techniques/T1516),并酌情[输入提示](https://sattack.mitre.org/techniques/T1411). 页:1\n\n恶意app可能滥用Android的无障碍功能来获取敏感数据或进行其他恶意行动. (简体中文:Skycure-Accessibility).\n\n爱好者可能滥用Android上的无障碍功能来模仿用户的点击,例如从用户的银行账户中偷钱. (Citation: android-trojan-steals-paypal-2fa) (Citation: banking-trojans-google-play).\n\n爱好者可能会在Android设备上滥用无障碍功能逃避防御,在目标应用管理器或移动安全应用启动时,或者在前台检测到提示未安装的字符串时,反复点击\"Back\"按钮. 这有效地防止了恶意应用程序被解禁. (citation: android-trojan-steals-paypal-2fa) (中文(简体) )",
    "Exploitation of Remote Services": "利用远程服务",
    "Adversaries may exploit remote services of enterprise servers, workstations, or other resources to gain unauthorized access to internal systems once inside of a network. Adversaries may exploit remote services by taking advantage of a mobile device’s access to an internal enterprise network through local connectivity or through a Virtual Private Network (VPN). Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system. \n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Scanning](https://attack.mitre.org/techniques/T1423) or other Discovery methods. These look for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities, or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nDepending on the permissions level of the vulnerable remote service, an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1404) as a result of lateral movement exploitation as well. ": "爱好者可能利用企业服务器、工作站或其他资源的远程服务,一旦在网络内部就擅自进入内部系统。 爱好者可能会利用移动设备通过本地连接或通过虚拟私人网络进入内部企业网络的机会,利用远程服务。 当对手利用程序、服务、操作系统软件或内核本身的编程错误来执行对手控制的代码时,就会利用软件的脆弱性。 妥协后利用远程服务的共同目标是横向移动,以便能够进入远程系统。\n\n敌方可能需要确定远程系统是否处于脆弱状态,这可以通过[网络服务扫描](https://sattack.mitre.org/techniques/T1423)或其他发现方法进行. 这些软件是寻找可能部署在网络中的常见、脆弱的软件,缺乏某些可能表明脆弱性的补丁,或可用于探测或遏制远程开发的安全软件。 服务器可能是横向移动开发的高值目标,但端点系统如果提供优势或获取额外资源,也可能面临风险。\n\n视脆弱远程服务的许可程度而定,由于横向运动的剥削,敌方也可能实现[Privilege Escalation](https://sattack.mitre.org/techniques/T1404).",
    "Detecting software exploitation initiated by a mobile device may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash.\n\nNetwork traffic analysis could reveal patterns of compromise if devices attempt to access unusual targets or resources. \n\nApplication vetting may be able to identify applications that perform Discovery or utilize existing connectivity to remotely access hosts within an internal enterprise network. ": "根据可用的工具,可能难以检测移动设备启动的软件开发。 软件开发不一定总能成功,或可能造成被开发过程变得不稳定或崩溃.\n\n如果设备试图进入不寻常的目标或资源,网络流量分析可以揭示妥协模式。\n\n应用程序审查可能能够确定在企业内部网络中进行发现或利用现有连接以远程访问主机的应用程序.",
    "Web Protocols": "网络协议",
    "Adversaries may communicate using application layer protocols associated with web protocols traffic to avoid detection/network filtering by blending in with existing traffic. Commands to remote mobile devices, and often the results of those commands, will be embedded within the protocol traffic between the mobile client and server. \n\nWeb protocols such as HTTP and HTTPS are used for web traffic as well as well as notification services native to mobile messaging services such as Google Cloud Messaging (GCM) and newly, Firebase Cloud Messaging (FCM), (GCM/FCM: two-way communication) and Apple Push Notification Service (APNS; one-way server-to-device).  Such notification services leverage HTTP/S via the respective API and are commonly abused on Android and iOS respectively in order blend in with routine device traffic making it difficult for enterprises to inspect. ": "爱好者可能使用与网络协议流量相关的应用层协议进行通信,以避免通过与现有流量的混合进行检测/网络过滤. 远程移动设备的指令,以及这些指令的结果,将嵌入移动客户端和服务器之间的协议流量.\n\nHTTP和HTTPS等网络协议用于网络流量以及Google Cloud Messaging(GCM)和Firebase Cloud Messaging(FCM),(GCM/FCM:双向通信)和Apple Push通知服务(APNS;单向服务器到设备)等移动消息服务本土的通知服务. 这种通知服务通过各自的API利用HTTP/S,并经常在Android和iOS上分别被滥用,以便与日常设备交通相融合,使企业难以检查.",
    "Abuse of standard application protocols can be difficult to detect as many legitimate mobile applications leverage such protocols for language-specific APIs. Enterprises may be better served focusing on detection at other stages of adversarial behavior. ": "滥用标准应用协议可能难以发现,因为许多合法的移动应用为语言特定API利用了这种协议. 对企业而言,在敌对行为的其他阶段可以更好地侧重于发现.",
    "Steal Application Access Token": "窃取应用程序访问托肯",
    "Adversaries can steal user application access tokens as a means of acquiring credentials to access remote systems and resources. This can occur through social engineering or URI hijacking and typically requires user action to grant access, such as through a system “Open With” dialogue.  \n\nApplication access tokens are used to make authorized API requests on behalf of a user and are commonly used as a way to access resources in cloud-based applications and software-as-a-service (SaaS).(Citation: Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019) OAuth is one commonly implemented framework used to issue tokens to users for access to systems. An application desiring access to cloud-based services or protected APIs can gain entry through OAuth 2.0 using a variety of authorization protocols. An example of a commonly-used sequence is Microsoft's Authorization Code Grant flow.(Citation: Microsoft Identity Platform Protocols May 2019)(Citation: Microsoft - OAuth Code Authorization flow - June 2019) An OAuth access token enables a third-party application to interact with resources containing user data in the ways requested without requiring user credentials.": "爱好者可以偷取用户应用程序访问符作为获取访问远程系统和资源的证书的手段. 这可能通过社会工程或URI劫持发生,通常需要用户采取行动,允许访问,例如通过“开放与”对话系统。\n\n应用程序访问令牌用于代表用户提出授权的API请求,并通常用作在基于云的应用程序和软件-as-service(SaaS)中访问资源的一种方式. (批注: Auth0 - 为什么您应该总是使用访问键来安全 API September 2019). OAuth是一个常用实施的框架,用于向用户发放用于访问系统的令牌. 想要访问基于云的服务或受保护的API的应用程序可以使用各种授权协议通过OAuth 2.0获得进入. 常用序列的一个例子是微软的授权代码Grant流. (点击:微软身份平台协议 2019年5月)(点击:微软 - OAuth代码授权流 - 2019年6月). OAuth访问令牌使第三方应用程序能够以所请求的方式与包含用户数据的资源互动,而不需要用户证书.",
    "On Android, users may be presented with a popup to select the appropriate application to open a URI in. If the user sees an application they do not recognize, they can remove it. When vetting applications for potential security weaknesses, the vetting process could look for insecure use of Intents. Developers should be encouraged to use techniques to ensure that the intent can only be sent to an appropriate destination (e.g., use explicit rather than implicit intents, permission checking, checking of the destination app's signing certificate, or utilizing the App Links feature). For mobile applications using OAuth, encourage use of best practice.(Citation: IETF-OAuthNativeApps)(Citation: Android-AppLinks)": "在Android上,可以向用户提供弹出,以选择适当的应用程序来打开一个URI in. 如果用户看到一个他们不承认的应用程序,他们可以删除它. 在审查可能存在安全缺陷的申请时,审查程序可以寻找不可靠地利用意向。 应鼓励开发者使用技术确保意图只能发送到适当的目的地(例如,使用明确而非隐含的意图,权限检查,检查目的地app的签名证书,或者使用App Links功能). 对于使用OAuth的移动应用程序,鼓励采用最佳做法。 (中文(简体) ). IETF-OAuthNativeApps (中文(简体) )",
    "User Evasion": "用户撤离",
    "Adversaries may attempt to avoid detection by hiding malicious behavior from the user. By doing this, an adversary’s modifications would most likely remain installed on the device for longer, allowing the adversary to continue to operate on that device. \n\nWhile there are many ways this can be accomplished, one method is by using the device’s sensors. By utilizing the various motion sensors on a device, such as accelerometer or gyroscope, an application could detect that the device is being interacted with. That way, the application could continue to run while the device is not in use but cease operating while the user is using the device, hiding anything that would indicate malicious activity was ongoing. Accessing the sensors in this way does not require any permissions from the user, so it would be completely transparent.": "不良者可能试图通过向用户隐瞒恶意行为来逃避检测. 通过这样做,敌方的改装极有可能在装置上维持更长的时间,使敌方能够继续在装置上操作。\n\n虽然有许多方法可以做到这一点,但一种方法是使用设备的传感器。 通过在装置上利用各种运动传感器,如加速计或陀螺仪,应用可以发现该装置正与该装置相互作用。 这样,应用程序就可以在设备未使用时继续运行,但在用户使用设备时停止运行,隐藏显示恶意活动的任何内容都在进行中. 以这种方式访问传感器不需要用户的任何许可,因此将完全透明.",
    "Mobile security products may be able to detect some forms of user evasion. Otherwise, the act of hiding malicious activity could be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversarial behavior.": "移动安全产品可能能够发现某些形式的逃避用户。 否则,隐藏恶意活动的行为可能难以侦测,因此,企业在对抗行为的其他阶段可以更好地被集中侦查.",
    "Virtualization/Sandbox Evasion": "虚拟化/安全箱疏散",
    "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors after checking for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware’s behavior to disengage from the victim or conceal the core functions of the payload. They may also search for VME artifacts before dropping further payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1633) during automated discovery to shape follow-on behaviors. \n\nAdversaries may use several methods to accomplish [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1633) such as checking for system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. ": "爱好者可能采用各种手段来检测和避免虚拟化和分析环境. 这可能包括检查显示虚拟机器环境(VME)或沙盒的文物存在后改变行为. 如果对手发现一个VME,他们可能会改变他们的恶意软件的行为,以脱离受害人或隐藏有效载荷的核心职能。 它们还可能在投下更多有效载荷之前搜寻脆弱海洋生态系统的文物。 逆行者可能在自动发现时使用从[Virtualization/Sandbox Evasion](https://sattack.mitre.org/techniques/T1633)中获取的信息来塑造后续行为.\n\n爱好者可能使用几种方法来实现[Virtualization/Sandbox Evasion](https://sattack.mitre.org/techniques/T1633),例如检查与分析或虚拟化有关的系统文物. 爱好者还可以检查合法的用户活动,以帮助确定是否处于分析环境中.",
    "Application vetting services could look for applications attempting to get `android.os.SystemProperties` or `getprop` with the runtime `exec()` commands. This could indicate some level of sandbox evasion, as Google recommends against using system properties within applications.": "申请审查部门可以寻找试图获得`android.os'的申请。 带有运行时间“执行()”命令的系统Properties 或“getprop”。 这可以表明某种程度的避沙箱,因为Google建议不使用应用程序中的系统属性.",
    "Keychain": "键盘链",
    "Adversaries may collect the keychain storage data from an iOS device to acquire credentials. Keychains are the built-in way for iOS to keep track of users' passwords and credentials for many services and features such as Wi-Fi passwords, websites, secure notes, certificates, private keys, and VPN credentials.\n\nOn the device, the keychain database is stored outside of application sandboxes to prevent unauthorized access to the raw data. Standard iOS APIs allow applications access to their own keychain contained within the database. By utilizing a privilege escalation exploit or existing root access, an adversary can access the entire encrypted database.(Citation: Apple Keychain Services)(Citation: Elcomsoft Decrypt Keychain)": "爱好者可能从iOS设备中收集密钥链存储数据以获取证书. 键链是iOS对Wi-Fi密码,网站,安全笔记,证书,私钥,VPN证书等许多服务和功能进行追踪的内置方式.\n\n在设备上,键链数据库存储在应用程序沙盒之外,以防止未经授权访问原始数据. 标准iOS API允许应用程序访问数据库中包含的自己的密钥链. 通过利用特权升级或现有的根访问,对手可以访问整个加密数据库。 (点击:苹果键链服务) (点击:Elcomsoft 解密键链)",
    "Mobile security products can potentially detect jailbroken devices and perform further actions as necessary.": "移动安全产品可能检测到监狱破损的装置,并在必要时采取进一步行动.",
    "Application Versioning": "应用程序版本",
    "An adversary may push an update to a previously benign application to add malicious code. This can be accomplished by pushing an initially benign, functional application to a trusted application store, such as the Google Play Store or the Apple App Store. This allows the adversary to establish a trusted userbase that may grant permissions to the application prior to the introduction of malicious code. Then, an application update could be pushed to introduce malicious code.(Citation: android_app_breaking_bad)\n\nThis technique could also be accomplished by compromising a developer’s account. This would allow an adversary to take advantage of an existing userbase without having to establish the userbase themselves. ": "对手可能会将更新推向先前的良性应用,以添加恶意代码. 这可以通过将一个最初良性,功能化的应用程序推向一个可信任的应用程序商店来完成,例如Google Play Store或App Store. 这使得对手可以建立一个可信赖的用户库,可以在引入恶意代码之前给应用程序以许可. 然后可以推动应用程序更新以引入恶意代码 。 (Citation: android_app_break_bad)\n\n这一技术也可以通过损害开发商的帐户来实现。 这将使对手能够利用现有的用户库而不必自己建立用户库.",
    "Access Sensitive Data in Device Logs": "在设备日志中访问敏感数据",
    "On versions of Android prior to 4.1, an adversary may use a malicious application that holds the READ_LOGS permission to obtain private keys, passwords, other credentials, or other sensitive data stored in the device's system log. On Android 4.1 and later, an adversary would need to attempt to perform an operating system privilege escalation attack to be able to access the log.": "在4.1前的Android版本上,对手可能使用持有READ_的恶意应用程序. LOGS授权获取设备系统日志中存储的私钥,密码,其他证书,或其他敏感数据. 在Android 4.1以及后来,对手需要尝试执行操作系统特权升级攻击才能访问日志.",
    "Command and Scripting Interpreter": "命令和脚本翻译",
    "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, Android is a UNIX-like OS and includes a basic [Unix Shell](https://attack.mitre.org/techniques/T1623/001) that can be accessed via the Android Debug Bridge (ADB) or Java’s `Runtime` package.\n\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0027) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells. ": "爱好者可能滥用命令和脚本解释器来执行命令,脚本,或二进制. 这些界面和语言提供了与计算机系统互动的方式,是许多不同平台的共同特征. 大多数系统都带有一些内置的指令线接口和脚本能力,例如,Android是一个类似UNIX的OS,包括一个基本的[unix shell](https://sattack.mitre.org/techniques/T1623/001),可以通过Android调试桥(ADB)或Java的‘Runtime'软件包访问.\n\n爱好者可能以各种方式滥用这些技术,作为执行任意命令的手段. 命令和脚本可以嵌入[Initial Access](https://sattack.mitre.org/tactics/TA0027)作为诱导文件或从现有的C2下载的次级有效载荷交付给受害者. 爱好者也可以通过交互式终端/壳执行命令.",
    "Command-line activities can potentially be detected through Mobile Threat Defense integrations with lower-level OS APIs. This could grant the MTD agents access to running processes and their parameters, potentially detecting unwanted or malicious shells.\n\nApplication vetting services could detect the invocations of methods that could be used to execute shell commands.(Citation: Samsung Knox Mobile Threat Defense)": "命令线活动有可能通过移动威胁防御集成与下级OS API进行检测. 这可能使MTD代理能够进入运行的流程及其参数,有可能发现不必要的或恶意的壳体.\n\n应用审查服务可以发现可以用来执行 shell 命令的方法的引用. (选号: 三星诺克斯移动威胁防御)",
    "Disable or Modify Tools": "禁用或修改工具",
    "Adversaries may disable security tools to avoid potential detection of their tools and activities. This can take the form of disabling security software, modifying SELinux configuration, or other methods to interfere with security tools scanning or reporting information. This is typically done by abusing device administrator permissions or using system exploits to gain root access to the device to modify protected system files.": "爱好者可能会使安全工具失效,以避免可能发现其工具和活动。 这可以采取使安全软件失效,修改SELinux配置的形式,也可以采取其他方法干扰安全工具扫描或报告信息. 这通常通过滥用设备管理员权限或利用系统利用获取设备的根访问权限来修改受保护的系统文件来实现.",
    "Users can view a list of active device administrators in the device settings.": "用户可以在设备设置中查看活动设备管理员列表.",
    "Ingress Tool Transfer": "入侵工具传输",
    "Adversaries may transfer tools or other files from an external system onto a compromised device to facilitate follow-on actions. Files may be copied from an external adversary-controlled system through the command and control channel  or through alternate protocols with another tool such as FTP.": "爱好者可能会将工具或其他文件从外部系统转移到一个已损坏的设备上,以便于后续行动. 文件可能通过命令与控制通道或通过其他工具如FTP的替代协议从外部对手控制系统复制.",
    "Application vetting services could look for connections to unknown domains or IP addresses. Application vetting services may indicate precisely what content was requested during application execution.": "应用程序审核服务可以寻找与未知域或IP地址的连接. 申请审查服务可以准确地说明申请执行期间要求的内容.",
    "Dynamic Resolution": "动态分辨率",
    "Adversaries may dynamically establish connections to command and control infrastructure to evade common detections and remediations. This may be achieved by using malware that shares a common algorithm with the infrastructure the adversary uses to receive the malware's communications. This algorithm can be used to dynamically adjust parameters such as the domain name, IP address, or port number the malware uses for command and control.": "逆行者可能动态地建立与指挥和控制基础设施的联系,以逃避常见的探测和补救。 这可以通过使用恶意软件来实现,恶意软件与对手用于接收恶意软件通信的基础设施共享一个共同的算法. 此算法可用于动态调整参数,如域名,IP地址,或用于指挥和控制的恶意软件的端口编号.",
    "Detecting dynamically generated domains can be challenging due to the number of different Domain Generation Algorithms (DGAs), constantly evolving malware families, and the increasing complexity of the algorithms. There are a myriad of approaches for detecting a pseudo-randomly generated domain name, including using frequency analysis, Markov chains, entropy, proportion of dictionary words, ratio of vowels to other characters, and more.(Citation: Data Driven Security DGA) Content delivery network (CDN) domains may trigger these detections due to the format of their domain names. In addition to detecting a DGA domain based on the name, a more general approach for detecting a suspicious domain is to check for recently registered names or rarely visited domains.": "由于不同域生成算法(DGAs)的数量,不断演变的恶意软件家族,以及算法越来越复杂,检测动态生成域可能具有挑战性. 检测伪随机生成的域名的方法多种多样,包括使用频率分析,马尔科夫链, en,字典词的比例,元音与其他字符的比例等等. (点击:数据驱动安全DGA) 内容交付网络(CDN)域因其域名的格式可能触发这些检测. 除了根据名称检测DGA域外,更一般的检测可疑域的方法是检查最近注册或很少访问的域名.",
    "Exploit via Radio Interfaces": "通过无线电接口利用",
    "The mobile device may be targeted for exploitation through its interface to cellular networks or other radio interfaces.\n\n### Baseband Vulnerability Exploitation\n\nA message sent over a radio interface (typically cellular, but potentially Bluetooth, GPS, NFC, Wi-Fi(Citation: ProjectZero-BroadcomWiFi) or other) to the mobile device could exploit a vulnerability in code running on the device(Citation: Register-BaseStation)(Citation: Weinmann-Baseband).\n\n### Malicious SMS Message\n\nAn SMS message could contain content designed to exploit vulnerabilities in the SMS parser on the receiving device(Citation: Forbes-iPhoneSMS). An SMS message could also contain a link to a web site containing malicious content designed to exploit the device web browser. Vulnerable SIM cards may be remotely exploited and reprogrammed via SMS messages(Citation: SRLabs-SIMCard).": "该移动设备可能通过其与蜂窝网络或其他无线电接口的接口被开发。\n\n基带脆弱性开采\n\n通过无线电接口发送的信息(通常为蜂窝,但有可能为蓝牙,GPS,NFC,Wi-Fi(Citation:ProjectZero-Broadcom)) WiFi)或其他)对移动设备来说,可以利用在设备上运行的代码(Citation:Register-BaseStation)(Citation:Weinmann-Baseband)中的脆弱性.\n\n恶性短信 消息\n\n短信可以包含旨在利用接收设备(Citation:Forbes-iPhoneSMS)短信解析器中漏洞的内容。 短信还可以包含一个网站的链接,其中包含旨在利用设备网页浏览器的恶意内容。 脆弱的SIM卡可以通过短信(Citation:SRLabs-SIMCard)远程开发并重新编程.",
    "Network Service Scanning": "网络服务扫描",
    "Adversaries may attempt to get a listing of services running on remote hosts, including those that may be vulnerable to remote software exploitation. Methods to acquire this information include port scans and vulnerability scans from the mobile device. This technique may take advantage of the mobile device's access to an internal enterprise network either through local connectivity or through a Virtual Private Network (VPN).": "爱好者可能试图在远程主机上获得一份服务清单,包括那些可能易受远程软件利用的服务。 获取这些信息的方法包括端口扫描和移动设备中的脆弱性扫描. 这一技术可能利用移动设备通过本地连接或通过虚拟私人网络进入内部企业网络的机会.",
    "Network service scanning can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversarial behavior.": "网络服务扫描可能难以发现,因此,企业在对抗行为的其他阶段可以更好地侧重于检测.",
    "Exfiltration Over C2 Channel": "C2频道的过滤",
    "Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications.": "爱好者可能通过过滤数据到现有的指挥控制通道来窃取数据. 被窃数据被编码为普通通信信道,使用与指挥和控制通信相同的协议.",
    "[Exfiltration Over C2 Channel](https://attack.mitre.org/techniques/T1646) can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversarial behavior.": "[渗透超越C2通道](https://sattack.mitre.org/techniques/T1646)可能难以侦测,因此企业在对抗行为的其他阶段可能会得到更好的关注侦测.",
    "Exploitation for Privilege Escalation": "利用特权升级",
    "Adversaries may exploit software vulnerabilities in order to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in an application, service, within the operating system software, or kernel itself to execute adversary-controlled code. Security constructions, such as permission levels, will often hinder access to information and use of certain techniques. Adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions. \n\nWhen initially gaining access to a device, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and applications running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user- level permission to root permissions depending on the component that is vulnerable. ": "爱好者可能会利用软件的弱点来提升特权. 当对手利用应用程序、服务、操作系统软件内的编程错误或内核本身来执行对手控制的代码时,就会利用软件的脆弱性。 安全构筑,如许可级别,往往会阻碍获取信息和使用某些技术。 对抗者可能需要进行特权升级,包括利用软件来规避这些限制。\n\n在最初获得设备时,对手可能在较低特权的程序中运作,从而无法利用系统中的某些资源。 脆弱性可能存在,通常存在于操作系统组件和以更高权限运行的应用程序中,这些组件和应用程序可以被利用来获得系统更高的访问水平. 这可以使某人从无特权或用户级许可转移到根植许可,这取决于脆弱的组件.",
    "Mobile security products can potentially utilize device APIs to determine if a device has been rooted or jailbroken.  Application vetting services could potentially determine if an application contains code designed to exploit vulnerabilities.": "移动安全产品可能利用设备API来确定一个设备是否已经扎根或断裂。 申请审查服务有可能确定申请是否包含旨在利用脆弱性的代码.",
    "Call Control": "调用控制",
    "Adversaries may make, forward, or block phone calls without user authorization. This could be used for adversary goals such as audio surveillance, blocking or forwarding calls from the device owner, or C2 communication.\n\nSeveral permissions may be used to programmatically control phone calls, including:\n\n* `ANSWER_PHONE_CALLS` - Allows the application to answer incoming phone calls(Citation: Android Permissions)\n* `CALL_PHONE` - Allows the application to initiate a phone call without going through the Dialer interface(Citation: Android Permissions)\n* `PROCESS_OUTGOING_CALLS` - Allows the application to see the number being dialed during an outgoing call with the option to redirect the call to a different number or abort the call altogether(Citation: Android Permissions)\n* `MANAGE_OWN_CALLS` - Allows a calling application which manages its own calls through the self-managed `ConnectionService` APIs(Citation: Android Permissions)\n* `BIND_TELECOM_CONNECTION_SERVICE` - Required permission when using a `ConnectionService`(Citation: Android Permissions)\n* `WRITE_CALL_LOG` - Allows an application to write to the device call log, potentially to hide malicious phone calls(Citation: Android Permissions)\n\nWhen granted some of these permissions, an application can make a phone call without opening the dialer first. However, if an application desires to simply redirect the user to the dialer with a phone number filled in, it can launch an Intent using `Intent.ACTION_DIAL`, which requires no specific permissions. This then requires the user to explicitly initiate the call or use some form of [Input Injection](https://attack.mitre.org/techniques/T1516) to programmatically initiate it.": "流浪者未经用户授权,可拨打、转发或阻断电话。 这可用于对敌目标,如音频监视,屏蔽或转发设备所有者的电话,或C2通信.\n\n可利用若干权限对电话进行程序控制,包括:\n\n*`ANSWER_手机_CALLS ' -允许应用程序接听接收到的电话(点击:Android权限)\n* `CALL_手机 ' - 允许应用程序启动一个电话,而不通过 Dialer 接口(Citation: Android 权限)\n* `PROCESS_OUTGOING_CALLS' - 允许应用程序查看在发出电话时拨打的号码,并选择将电话重定向到不同的号码,或完全中止电话(点击:Android权限)\n* `MANAGE_OWN_CALLS ' - 允许一个调用应用程序,通过自我管理的 ' ConnectionService ' APIS(Citation:Android permits)管理自己的调用\n* `BIND_TELECOM_CONNECTION_SERVICE ' - 使用`连接服务'(Citation:Android permites)时的许可\n* `WRITE_CALL_LOG' - 允许应用程序写入设备呼叫日志,有可能隐藏恶意电话(Citation:Android Centers)\n\n当获得其中一些许可时,一个应用程序可以在不先打开拨号器的情况下打电话. 但是,如果一个应用程序想用填充的电话号码将用户引向拨号器,它可以使用“意向”发动意向。 Action_DIAL ' ,无需具体许可。 这就要求用户明确启动呼叫或使用某种形式的[输入注射](https://sattack.mitre.org/techniques/T1516)程序启动.",
    "Users can view their default phone app in device settings. Users can review available call logs for irregularities, such as missing or unrecognized calls.": "用户可以在设备设置中查看他们的默认手机应用. 用户可以审查可用的调用日志中的违规之处,例如缺失或未识别的调用.",
    "Exfiltration Over Unencrypted Non-C2 Protocol": "未加密的非C2协议",
    "Adversaries may steal data by exfiltrating it over an un-encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.\n\nAdversaries may opt to obfuscate this data, without the use of encryption, within network protocols that are natively unencrypted (such as HTTP, FTP, or DNS). Adversaries may employ custom or publicly available encoding/compression algorithms (such as base64) or embed data within protocol headers and fields.": "爱好者可能通过从一个非加密的网络协议上过滤数据来窃取数据,而该网络协议不是在现有指挥和控制通道上。 数据也可以从主指挥和控制服务器发送到另一个网络位置.\n\n在本地未加密的网络协议(如HTTP,FTP,或DNS)中,爱好者可能选择不使用加密方式来混淆此数据. 爱好者可能采用自定义或公开的编码/压缩算法(如基数64),或将数据嵌入协议头和字段.",
    "[Exfiltration Over Unencrypted Non-C2 Protocol](https://attack.mitre.org/techniques/T1639/001)s can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversarial behavior.": "[渗透超越未加密的非C2协议](https://sattack.mitre.org/techniques/T1639/001)可能难以侦测,因此企业在对抗行为的其他阶段可能会得到更好的关注侦测.",
    "Broadcast Receivers": "广播接收器",
    "Adversaries may establish persistence using system mechanisms that trigger execution based on specific events. Mobile operating systems have means to subscribe to events such as receiving an SMS message, device boot completion, or other device activities. \n\nAn intent is a message passed between Android applications or system components. Applications can register to receive broadcast intents at runtime, which are system-wide intents delivered to each app when certain events happen on the device, such as network changes or the user unlocking the screen. Malicious applications can then trigger certain actions within the app based on which broadcast intent was received. \n\nIn addition to Android system intents, malicious applications can register for intents broadcasted by other applications. This allows the malware to respond based on actions in other applications. This behavior typically indicates a more intimate knowledge, or potentially the targeting of specific devices, users, or applications. \n\nIn Android 8 (API level 26), broadcast intent behavior was changed, limiting the implicit intents that applications can register for in the manifest. In most cases, applications that register through the manifest will no longer receive the broadcasts. Now, applications must register context-specific broadcast receivers while the user is actively using the app.(Citation: Android Changes to System Broadcasts) ": "对抗者可能利用系统机制确定持久性,这种机制根据具体事件触发执行。 移动操作系统拥有订阅事件的手段,如接收短信,设备靴补全,或其他设备活动.\n\n一个意图是Android应用程序或系统组件之间传递的信息. 应用程序可以在运行时间注册接收广播意向,这是当设备上发生某些事件时,如网络改变或用户解锁屏幕时,向每个应用发送的全系统意向. 恶意的应用程序随后可以触发应用程序内的某些行动,而根据这些行动收到了广播意图。\n\n除Android系统意图外,恶意应用程序还可以注册其他应用程序播放的意图. 这使得恶意软件可以根据其他应用程序中的动作进行响应. 这种行为通常表明一种更为亲密的知识,或者可能针对特定设备,用户,或应用程序.\n\n在Android 8(API第26级)中,广播意向行为被改变,限制了应用程序可以在运单中注册的隐含意向. 在大多数情况下,通过清单注册的申请将不再接受广播。 现在,应用程序必须注册特定上下文的广播接收器,同时用户正在积极使用该应用程序. (Citation: Android Change to System Broads)",
    "Application vetting services can detect which broadcast intents an application registers for and which permissions it requests. ": "申请审查服务机构可以发现哪些广播是有意为申请登记机构服务的,以及它要求的许可.",
    "Commonly Used Port": "常用端口",
    "Adversaries may communicate over a commonly used port to bypass firewalls or network detection systems and to blend with normal network activity to avoid more detailed inspection. \n\nThey may use commonly open ports such as\n\n* TCP:80 (HTTP)\n* TCP:443 (HTTPS)\n* TCP:25 (SMTP)\n* TCP/UDP:53 (DNS)\n\nThey may use the protocol associated with the port or a completely different protocol.": "爱好者可能通过一个常用的端口进行沟通,绕过防火墙或网络检测系统,并与正常的网络活动融合,以避免更详细的检查.\n\n它们可能使用通常开放的港口,例如:\n\n* TCP:80 (HTTP) (中文(简体) ).\n* TCP:443(HTTPS)\n* TCP:25(SMTP)\n* TCP/UDP:53(DNS)\n\n他们可能使用与端口相关的协议或完全不同的协议.",
    "Eavesdrop on Insecure Network Communication": "偷听不安全网络通信",
    "If network traffic between the mobile device and remote servers is unencrypted or is encrypted in an insecure manner, then an adversary positioned on the network can eavesdrop on communication.(Citation: mHealth)": "如果移动设备与远程服务器之间的网络流量未加密或加密方式不安全,那么在网络上定位的对手可以窃听通信. (城镇:卫生)",
    "Access Notifications": "访问通知",
    "Adversaries may collect data within notifications sent by the operating system or other applications. Notifications may contain sensitive data such as one-time authentication codes sent over SMS, email, or other mediums. In the case of Credential Access, adversaries may attempt to intercept one-time code sent to the device. Adversaries can also dismiss notifications to prevent the user from noticing that the notification has arrived and can trigger action buttons contained within notifications.(Citation: ESET 2FA Bypass) ": "爱好者可在操作系统或其他应用程序发出的通知中收集数据。 通知可能包含敏感数据,如通过短信、电子邮件或其他媒介发送的一次性认证代码。 在Creditic Access的情况下,对手可能试图拦截发送到设备的一次性代码. 不良者还可以驳回通知,防止用户注意到通知已经到来,并可触发通知中包含的动作按钮. (电话:ESET 2FA Bypass)",
    "Application vetting services can look for applications requesting the `BIND_NOTIFICATION_LISTENER_SERVICE` permission in a service declaration. Users can also inspect and modify the list of applications that have notification access through the device settings (e.g. Apps & notification -> Special app access -> Notification access). ": "申请审查服务机构可在服务申报中查找申请申请,请求获得`BIND_NOTIONization_LISTENER_SERVICE ' 许可。 用户还可以通过设备设置检查和修改具有通知访问权限的应用程序列表(如 Apps & 通知 - > 特殊应用程序访问 - > 通知访问.",
    "Network Traffic Capture or Redirection": "网络交通抓取或重定向",
    "An adversary may capture network traffic to and from the device to obtain credentials or other sensitive data, or redirect network traffic to flow through an adversary-controlled gateway to do the same.\n\nA malicious app could register itself as a VPN client on Android or iOS to gain access to network packets. However, on both platforms, the user must grant consent to the app to act as a VPN client, and on iOS the app requires a special entitlement that must be granted by Apple.\n\nAlternatively, if a malicious app is able to escalate operating system privileges, it may be able to use those privileges to gain access to network traffic.\n\nAn adversary could redirect network traffic to an adversary-controlled gateway by establishing a VPN connection or by manipulating the device's proxy settings. For example, Skycure (Citation: Skycure-Profiles) describes the ability to redirect network traffic by installing a malicious iOS Configuration Profile.\n\nIf applications encrypt their network traffic, sensitive data may not be accessible to an adversary, depending on the point of capture.": "敌方可以捕捉进出设备的网络流量,以获取资信或其他敏感数据,或将网络流量转向通过敌方控制的网关流动,以达到同样目的。\n\n一个恶意的app可以自己注册为Android或iOS上的VPN客户端,以获得网络包的访问权限. 然而,在这两个平台上,用户必须同意该应用作为VPN客户端,在iOS上,该应用需要获得苹果必须给予的特殊权益.\n\n或者,如果恶意app能够升级操作系统权限,它可能能够利用这些权限获取网络流量.\n\n对手可以通过建立VPN连接或操纵设备的代理设置,将网络流量导向对手控制的网关. 例如,Skycure(Citation:Skycure-Profiles)描述了通过安装恶意iOS配置配置配置来引导网络流量的能力.\n\n如果应用程序加密其网络流量,敏感数据可能无法被对手访问,取决于捕获点.",
    "On both Android and iOS the user must grant consent to an app to act as a VPN. Both platforms also provide visual context to the user in the top status bar when a VPN connection is in place.": "在Android和iOS上,用户必须同意一个应用程序作为VPN。 两个平台在VPN连接到位时,也向顶端状态栏中的用户提供视觉上下文.",
    "Input Prompt": "输入提示",
    "The operating system and installed applications often have legitimate needs to prompt the user for sensitive information such as account credentials, bank account information, or Personally Identifiable Information (PII). Adversaries may mimic this functionality to prompt users for sensitive information.\n\nCompared to traditional PCs, the constrained display size of mobile devices may impair the ability to provide users with contextual information, making users more susceptible to this technique’s use.(Citation: Felt-PhishingOnMobileDevices)\n\nSpecific approaches to this technique include:\n\n### Impersonate the identity of a legitimate application\n\nA malicious application could impersonate the identity of a legitimate application (e.g. use the same application name and/or icon) and get installed on the device. The malicious app could then prompt the user for sensitive information.(Citation: eset-finance)\n\n### Display a prompt on top of a running legitimate application\n\nA malicious application could display a prompt on top of a running legitimate application to trick users into entering sensitive information into the malicious application rather than the legitimate application. Typically, the malicious application would need to know when the targeted application (and individual activity within the targeted application) is running in the foreground, so that the malicious application knows when to display its prompt. Android 5.0 and 5.1.1, respectively, increased the difficulty of determining the current foreground application through modifications to the `ActivityManager` API.(Citation: Android-getRunningTasks)(Citation: StackOverflow-getRunningAppProcesses). A malicious application can still abuse Android’s accessibility features to determine which application is currently in the foreground.(Citation: ThreatFabric Cerberus) Approaches to display a prompt include:\n\n* A malicious application could start a new activity on top of a running legitimate application.(Citation: Felt-PhishingOnMobileDevices)(Citation: Hassell-ExploitingAndroid) Android 10 places new restrictions on the ability for an application to start a new activity on top of another application, which may make it more difficult for adversaries to utilize this technique.(Citation: Android Background)\n* A malicious application could create an application overlay window on top of a running legitimate application. Applications must hold the `SYSTEM_ALERT_WINDOW` permission to create overlay windows. This permission is handled differently than typical Android permissions, and at least under certain conditions is automatically granted to applications installed from the Google Play Store.(Citation: Cloak and Dagger)(Citation: NowSecure Android Overlay)(Citation: Skycure-Accessibility) The `SYSTEM_ALERT_WINDOW` permission and its associated ability to create application overlay windows are expected to be deprecated in a future release of Android in favor of a new API.(Citation: XDA Bubbles)\n\n### Fake device notifications\n\nA malicious application could send fake device notifications to the user. Clicking on the device notification could trigger the malicious application to display an input prompt.(Citation: Group IB Gustuff Mar 2019)": "操作系统和安装的应用程序往往有合理的需要来促使用户获得敏感信息,如账户证书,银行账户信息,或个人可识别信息(PII). 逆行者可能会模仿这种功能来促使用户获取敏感信息.\n\n与传统的个人电脑相比,移动设备的有限显示尺寸可能损害向用户提供背景信息的能力,使用户更容易使用这一技术。 (Citation:Felt-Phishingon MobileDevices)\n\n这一技术的具体办法包括:\n\n### 冒充合法申请的身份\n\n恶意应用程序可以冒充合法应用程序的身份(如使用相同的应用程序名称和/或图标),并安装在设备上. 恶意应用随后可以提示用户获取敏感信息. (分类:电子集成金融)\n\n### 在运行的合法应用程序上方显示提示\n\n恶意应用程序可以在运行的合法应用程序之上显示提示,以欺骗用户将敏感信息输入恶意应用程序,而不是合法应用程序. 通常情况下,恶意应用程序需要知道目标应用程序(以及目标应用程序内的个人活动)何时在前方运行,这样恶意应用程序才知道何时显示其及时性. Android 5.0和5.1.1分别通过修改‘ActivityManager' API. (Citation: Android-getRunning Tasks)(Citation: Stack Overflow-getRunningAppProcesses),增加了确定当前前景应用的难度. 恶意应用程序仍然可以滥用Android的可访问性功能来确定当前处于前台的应用程序. (citation: PresidentFabric Cerberus) (中文(简体) ). 显示提示的方法包括:\n\n* 《大会正式记录,第五十八届会议,补编第5号》(A/C.6/61/Rev.1)。 恶意应用程序可以在运行的合法应用程序之外启动新的活动. (中文(简体) ). Felt-Phishing On MobileDevices) (中文(简体) ). Hassell-Expecting Android. Android 10在另一个应用之上对应用程序启动新活动的能力设置了新的限制,这可能会使对手更难使用这一技术. (点击:Android背景).\n*恶意应用程序可以在运行中的合法应用程序之上创建应用程序覆盖窗口. 应用程序必须持有“ SYSTEM_ALERT_WINDOW” 权限以创建覆盖窗口 。 此权限的处理方式与典型的Android权限不同,至少在某些条件下自动授予从Google Play Store安装的应用程序. (简体中文:Cloak and Dagger) (简体中文:现在安全Android Overlay) (简体中文:Skycure-Accessibility) `SYSTEM_ALERT_WINDOW'的许可及其创建应用程序叠加窗口的相关能力预计将在今后Android的发行中被贬值,从而有利于一个新的API。 (点击:XDA泡泡)\n\n### 假设备通知\n\n恶意应用程序可以向用户发送假设备通知. 点击设备通知会触发恶意应用程序显示输入提示. (编号:IB Gustuff Mar 2019)",
    "The user can view and manage which applications hold the SYSTEM_ALERT_WINDOW permission to create overlay windows on top of other apps through the device settings in Apps & notifications -> Special app access -> Display over other apps (the exact menu location may vary between Android versions).": "用户可以查看和管理哪些应用程序持有系统_ ALERT_WINDOW 允许通过 Apps 通知中的设备设置创建覆盖窗口到其它应用程序之上 - > 特殊应用程序访问 - > 显示在其他应用程序上(Android版本之间的精确菜单位置可能有所不同).",
    "Exfiltration Over Alternative Protocol": "渗透超越替代协议",
    "Adversaries may steal data by exfiltrating it over a different protocol than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server. \n\nAlternate protocols include FTP, SMTP, HTTP/S, DNS, SMB, or any other network protocol not being used as the main command and control channel. Different protocol channels could also include Web services such as cloud storage. Adversaries may opt to also encrypt and/or obfuscate these alternate channels. ": "爱好者可能通过过滤数据到一个不同于现有指挥和控制通道的协议上来窃取数据. 数据也可以从主指挥和控制服务器发送到另一个网络位置.\n\n备用协议包括FTP,SMTP,HTTP/S,DNS,SMB,或者任何其他没有作为主指令和控制通道使用的网络协议. 不同的协议渠道也可以包括云存储等Web服务. 旁观者可能还选择加密和/或混淆这些替代渠道.",
    "[Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1639)s can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversarial behavior.": "[渗透超越替代议定书](https://sattack.mitre.org/techniques/T1639)可能难以侦测,因此,企业在对抗行为的其他阶段可能会得到更好的重点侦测服务.",
    "Biometric Spoofing": "生物测量",
    "Boot or Logon Initialization Scripts": "启动或登录初始化脚本",
    "Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence. Initialization scripts are part of the underlying operating system and are not accessible to the user unless the device has been rooted or jailbroken. ": "爱好者可能使用在启动或登录初始化时自动执行的脚本来确定持久性. 初始化脚本是基础操作系统的一部分,除非设备已经扎根或断层,否则用户无法访问.",
    "On Android, Verified Boot can detect unauthorized modifications to the system partition.(Citation: Android-VerifiedBoot) Android's SafetyNet API provides remote attestation capabilities, which could potentially be used to identify and respond to compromise devices. Samsung Knox provides a similar remote attestation capability on supported Samsung devices. ": "在Android上,Verifed Boot可以检测到对系统分区的未经授权的修改. (点击:Android-VerifedBoot) Android的安全 净额 API提供远程验证能力,可用于识别和应对折中装置. 三星诺克斯在支持的三星设备上提供了类似的远程验证能力.",
    "Execution Guardrails": "警卫队",
    "Adversaries may use execution guardrails to constrain execution or actions based on adversary supplied and environment specific conditions that are expected to be present on the target. Guardrails ensure that a payload only executes against an intended target and reduces collateral damage from an adversary’s campaign. Values an adversary can provide about a target system or environment to use as guardrails may include environment information such as location.(Citation: SWB Exodus March 2019)\n\nGuardrails can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within. This use of guardrails is distinct from typical [System Checks](https://attack.mitre.org/techniques/T1633/001). While use of [System Checks](https://attack.mitre.org/techniques/T1633/001) may involve checking for known sandbox values and continuing with execution only if there is no match, the use of guardrails will involve checking for an expected target-specific value and only continuing with execution if there is such a match.": "敌对者可能利用执行护栏限制执行或基于敌方提供的环境特定条件的行动。 护栏确保有效载荷只针对预定目标执行,并减少敌方战役造成的附带损害。 敌方可以提供的关于目标系统或环境的价值,因为护栏可能包括诸如位置等环境信息。 (英文:SWB Exodus March 2019) (中文(简体) ).\n\n护栏可以用来防止在无意损害或操作的环境中暴露能力。 这种对护栏的使用不同于典型的[系统检查](https://sattack.mitre.org/techniques/T1633/001)。 虽然使用[系统检查](https://sattack.mitre.org/techniques/T1633/001)可能涉及检查已知的沙盒值,并在没有匹配的情况下继续执行,但使用护栏将涉及检查预期目标具体值,只有在有匹配时才继续执行.",
    "Detecting the use of guardrails may be difficult depending on the implementation. Users can review which applications have location and sensitive phone information permissions in the operating system’s settings menu. Application vetting services can detect unnecessary and potentially permissions or API calls.": "根据实施情况,可能难以发现使用护栏的情况。 用户可以审查操作系统设置菜单中哪些应用程序有位置和敏感的电话信息权限。 应用程序审查服务可以检测不必要的和潜在的许可或API调用.",
    "GUI Input Capture": "GUI 输入抓取",
    "Adversaries may mimic common operating system GUI components to prompt users for sensitive information with a seemingly legitimate prompt. The operating system and installed applications often have legitimate needs to prompt the user for sensitive information such as account credentials, bank account information, or Personally Identifiable Information (PII). Compared to traditional PCs, the constrained display size of mobile devices may impair the ability to provide users with contextual information, making users more susceptible to this technique’s use.(Citation: Felt-PhishingOnMobileDevices)\n\nThere are several approaches adversaries may use to mimic this functionality. Adversaries may impersonate the identity of a legitimate application (e.g. use the same application name and/or icon) and, when installed on the device, may prompt the user for sensitive information.(Citation: eset-finance) Adversaries may also send fake device notifications to the user that may trigger the display of an input prompt when clicked.(Citation: Group IB Gustuff Mar 2019) \n\nAdditionally, adversaries may display a prompt on top of a running, legitimate application to trick users into entering sensitive information into a malicious application rather than the legitimate application. Typically, adversaries need to know when the targeted application and the individual activity within the targeted application is running in the foreground to display the prompt at the proper time. Adversaries can abuse Android’s accessibility features to determine which application is currently in the foreground.(Citation: ThreatFabric Cerberus) Two known approaches to displaying a prompt include:\n\n* Adversaries start a new activity on top of a running legitimate application.(Citation: Felt-PhishingOnMobileDevices)(Citation: Hassell-ExploitingAndroid) Android 10 places new restrictions on the ability for an application to start a new activity on top of another application, which may make it more difficult for adversaries to utilize this technique.(Citation: Android Background)\n* Adversaries create an application overlay window on top of a running legitimate application. Applications must hold the `SYSTEM_ALERT_WINDOW` permission to create overlay windows. This permission is handled differently than typical Android permissions and, at least under certain conditions, is automatically granted to applications installed from the Google Play Store.(Citation: Cloak and Dagger)(Citation: NowSecure Android Overlay)(Citation: Skycure-Accessibility) The `SYSTEM_ALERT_WINDOW` permission and its associated ability to create application overlay windows are expected to be deprecated in a future release of Android in favor of a new API.(Citation: XDA Bubbles)": "逆差可能模仿通用操作系统GUI组件,以促使用户以看起来合法的快速来获取敏感信息. 操作系统和安装的应用程序往往有合理的需要来促使用户获得敏感信息,如账户证书,银行账户信息,或个人可识别信息(PII). 与传统的个人电脑相比,移动设备的有限显示尺寸可能损害向用户提供背景信息的能力,使用户更容易使用这一技术。 (Citation:Felt-Phishingon MobileDevices)\n\n敌方可能采用几种方法模仿这一功能。 爱好者可能会冒充合法应用程序的身份(例如使用相同的应用程序名称和(或)图标),在设备上安装时可能会促使用户获取敏感信息. (分类:电子集成金融) 爱好者还可以向用户发送假设备通知,在点击时可能会触发输入提示的显示. (编号:IB Gustuff Mar 2019)\n\n此外,对手可以在运行的合法应用程序之上显示提示,以欺骗用户将敏感信息输入恶意应用程序,而不是合法应用程序。 通常情况下,对手需要知道目标应用程序和目标应用程序内的个人活动何时在前台运行,以便在适当的时候显示提示. 爱好者可以滥用Android的可访问性功能来确定目前处于前景中的应用. (citation: PresidentFabric Cerberus) (中文(简体) ). 两种已知的显示提示的方法包括:\n\n* 逆行者在运行的合法应用程序之外开始新的活动。 (中文(简体) ). Felt-Phishing On MobileDevices) (中文(简体) ). Hassell-Expecting Android. Android 10在另一个应用之上对应用程序启动新活动的能力设置了新的限制,这可能会使对手更难使用这一技术. (点击:Android背景).\n* 在运行的合法应用程序上方创建应用程序覆盖窗口。 应用程序必须持有“ SYSTEM_ALERT_WINDOW” 权限以创建覆盖窗口 。 这个权限的处理方式与典型的Android权限不同,至少在某些条件下,自动授予从Google Play Store安装的应用程序. (简体中文:Cloak and Dagger) (简体中文:现在安全Android Overlay) (简体中文:Skycure-Accessibility) `SYSTEM_ALERT_WINDOW'的许可及其创建应用程序叠加窗口的相关能力预计将在今后Android的发行中被贬值,从而有利于一个新的API。 (点击:XDA泡泡)",
    "Android users can view and manage which applications hold the `SYSTEM_ALERT_WINDOW` permission through the device settings in Apps & notifications -> Special app access -> Display over other apps (the exact menu location may vary between Android versions). \n\nApplication vetting services can look for applications requesting the `android.permission.SYSTEM_ALERT_WINDOW` permission in the list of permissions in the app manifest. ": "Android 用户可以通过 Apps 通知中的设备设置查看和管理哪些应用程序持有“ SYSTEM_ALERT_WINDOW” 权限 - > 特殊应用程序访问 - > 显示在其他应用程序上(Android版本之间的精确菜单位置可能有所不同).\n\n应用程序审核服务可以查询应用程序,在应用程序清单中的许可列表中请求“android.permission.SYSTEM_ALERT_WINDOW”许可.",
    "Access Contact List": "访问联系人列表",
    "An adversary could call standard operating system APIs from a malicious application to gather contact list (i.e., address book) data, or with escalated privileges could directly access files containing contact list data.": "一个对手可以从恶意应用程序中调用标准操作系统API来收集联系人列表(即地址簿)数据,或者拥有升级的权限可以直接访问包含联系人列表数据的文件.",
    "On both Android (6.0 and up) and iOS, the user can view which applications have permission to access contact list information through the device settings screen, and the user can choose to revoke the permissions.": "在Android(6.0及上)和iOS上,用户都可以查看哪些应用程序有权限通过设备设置屏幕访问联系列表信息,用户可以选择取消权限.",
    "Compromise Client Software Binary": "压缩客户端软件二进制",
    "Adversaries may modify system software binaries to establish persistent access to devices. System software binaries are used by the underlying operating system and users over adb or terminal emulators. \n\nAdversaries may make modifications to client software binaries to carry out malicious tasks when those binaries are executed. For example, malware may come with a pre-compiled malicious binary intended to overwrite the genuine one on the device. Since these binaries may be routinely executed by the system or user, the adversary can leverage this for persistent access to the device. ": "爱好者可能会修改系统软件二进制,以建立持续访问设备的能力. 系统软件二进制被基础操作系统和用户通过adb或终端仿真器使用.\n\n爱好者可能会对客户端软件二进制进行修改,以便在这些二进制执行时执行恶意任务. 例如,恶意软件可能会带一个预编译的恶意二进制,意在覆盖设备上的真假. 由于这些二进制可能由系统或用户例行执行,对手可以利用它来持续访问设备.",
    "Verified Boot can detect unauthorized modifications to the system partition.(Citation: Android-VerifiedBoot) Android’s SafetyNet API provides remote attestation capabilities, which could potentially be used to identify and respond to compromised devices. Samsung Knox provides a similar remote attestation capability on supported Samsung devices. Application vetting services could detect applications trying to modify files in protected parts of the operating system.": "经验证的靴子可以检测到未经授权对系统分区的修改. Android的安全性 净额 API提供远程证明能力,可用于识别和应对受损设备. 三星诺克斯在支持的三星设备上提供了类似的远程验证能力. 应用程序审核服务可以检测试图修改操作系统受保护部分文件的应用程序.",
    "Software Packing": "软件包装",
    "Adversaries may perform software packing to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. \n\nUtilities used to perform software packing are called packers. An example packer is FTT. A more comprehensive list of known packers is available, but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.": "爱好者可能进行软件包装以隐藏其代码. 软件包装是一种压缩或加密可执行文件的方法. 包装可执行文件会更改文件签名,以试图避免基于签名的检测. 大多数解压技术都会在内存中解压可执行代码.\n\n用于进行软件包装的公用事业称为打包机. 一个例子是FTT。 有一份更全面的已知打包机清单,但对手可能创造出自己的打包技术,不会留下与众所周知的打包机相同的文物来躲避防御.",
    "Application vetting services could look for known software packers or artifacts of packing techniques. Packing is not a definitive indicator of malicious activity, because as legitimate software may use packing techniques to reduce binary size or to protect proprietary code.": "应用程序审查服务可以寻找已知的软件包装器或包装技术的文物。 包装并不是恶意活动的确定指标,因为由于合法的软件可能使用包装技术来缩小二进制大小或保护专有代码.",
    "Abuse of iOS Enterprise App Signing Key": "滥用 iOS 企业应用程序签名密钥",
    "Exploit SS7 to Track Device Location": "利用 SS7 来跟踪设备位置",
    "An adversary could exploit signaling system vulnerabilities to track the location of mobile devices. (Citation: Engel-SS7) (Citation: Engel-SS7-2008) (Citation: 3GPP-Security) (Citation: Positive-SS7) (Citation: CSRIC5-WG10-FinalReport)": "对手可以利用信号系统的脆弱性追踪移动设备的位置。 (英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文)(英文",
    "Native API": "原生 API",
    "Adversaries may use Android’s Native Development Kit (NDK) to write native functions that can achieve execution of binaries or functions. Like system calls on a traditional desktop operating system, native code achieves execution on a lower level than normal Android SDK calls.\n\nThe NDK allows developers to write native code in C or C++ that is compiled directly to machine code, avoiding all intermediate languages and steps in compilation that higher level languages, like Java, typically have. The Java Native Interface (JNI) is the component that allows Java functions in the Android app to call functions in a native library.(Citation: Google NDK Getting Started)\n\nAdversaries may also choose to use native functions to execute malicious code since native actions are typically much more difficult to analyze than standard, non-native behaviors.(Citation: MITRE App Vetting Effectiveness)": "爱好者可能使用Android的原生开发 Kit(NDK)来书写可以实现执行二进制或函数的原生功能. 和系统调用传统的桌面操作系统一样,本土代码在比普通的Android SDK调用更低的级别上实现执行.\n\nNDK允许开发者将直接编译到机器代码的C或C++中本地代码写入,避免了Java等更高层次语言通常拥有的所有中间语言和编译步骤. Java本地界面(JNI)是允许Androidapp中的Java函数在本地库中调用函数的组件. (点击:谷歌NDK开始)\n\n逆行者也可能选择使用本土功能来执行恶意代码,因为本土行动通常比标准,非本土行为更难分析. (批注:MITRE App VATION)",
    "This is abuse of standard OS-level APIs and are therefore typically undetectable to the end user.": "这是对标准OS级API的滥用,因此一般无法被最终用户察觉.",
    "Deliver Malicious App via Other Means": "通过其他手段交付恶意应用程序",
    "Malicious applications are a common attack vector used by adversaries to gain a presence on mobile devices. This technique describes installing a malicious application on targeted mobile devices without involving an authorized app store (e.g., Google Play Store or Apple App Store). Adversaries may wish to avoid placing malicious applications in an authorized app store due to increased potential risk of detection or other reasons. However, mobile devices often are configured to allow application installation only from an authorized app store which would prevent this technique from working.\n\nDelivery methods for the malicious application include:\n\n* [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001) - Including the mobile app package as an attachment to an email message.\n* [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002) - Including a link to the mobile app package within an email, text message (e.g. SMS, iMessage, Hangouts, WhatsApp, etc.), web site, QR code, or other means.\n* Third-Party App Store - Installed from a third-party app store (as opposed to an authorized app store that the device implicitly trusts as part of its default behavior), which may not apply the same level of scrutiny to apps as applied by an authorized app store.(Citation: IBTimes-ThirdParty)(Citation: TrendMicro-RootingMalware)(Citation: TrendMicro-FlappyBird)\n\nSome Android malware comes with functionality to install additional applications, either automatically or when the adversary instructs it to.(Citation: android-trojan-steals-paypal-2fa)": "恶意应用是一种常见的攻击矢量,被对手用来获取移动设备的存在. 这一技术描述了在目标移动设备上安装恶意应用程序而不涉及授权的应用商店(例如Google Play Store或App Store). 由于检测风险增加或其他原因,爱好者可能希望避免将恶意应用程序放置在授权的应用商店. 然而,移动设备的配置往往只允许从经授权的应用商店安装应用程序,从而阻止这种技术发挥作用。\n\n恶意应用的交付方法包括:\n\n* [Spearphishing 附文](https://sattack.mitre.org/techniques/T1566/001) - 包括移动应用程序包作为电子邮件消息的附件.\n* [Spearphishing Link] (https://sattack.mitre.org/techniques/T1566/002) - 包括电子邮件,短信(如短信,iMessage,Hangouts,WhatsApp等),网站,QR码或其他手段中与移动应用程序包的链接.\n* 《大会正式记录,第五十八届会议,补编第5号》(A/C.6/61/Rev.1)。 第三方App Store - 从第三方App商店安装的(而不是设备默认信任的被授权的应用商店作为其默认行为的一部分),它可能不会对被授权的应用商店应用的应用应用进行同样的审查. (评论:IBTimes-第三方) (评论:TrendMicro-RootingMalware) (评论:TrendMicro-Flappy Bird) (评论:英语).\n\n一些Android恶意软件具有安装额外应用程序的功能,或者自动安装,或者当对手指示安装时安装. (citation: android-trojan-steals-paypal-2fa)",
    "* An EMM/MDM or mobile threat defense solution may be able to identify the presence of apps installed from sources other than an authorized app store. \n* An EMM/MDM or mobile threat defense solution may be able to identify Android devices configured to allow apps to be installed from \"Unknown Sources\".\n* Enterprise email security solutions can identify the presence of Android or iOS application packages within email messages.": "* EMM/MDM或移动威胁防御解决方案可能能够识别从授权应用商店以外的来源安装的应用程序的存在.\n* EMM/MDM或移动威胁防御解决方案可能能够识别所配置的Android设备,以便从\"未知源\"安装应用程序.\n*企业电子邮件安全解决方案可以识别Android或iOS应用程序包在电子邮件消息中的存在.",
    "Remotely Wipe Data Without Authorization": "远程擦除 未经授权的数据",
    "An adversary who is able to obtain unauthorized access to or misuse authorized access to cloud services (e.g. Google's Android Device Manager or Apple iCloud's Find my iPhone) or to an EMM console could use that access to wipe enrolled devices (Citation: Honan-Hacking).": "敌方能够获得未经授权的获取或滥用经授权的获取云服务(如Google的Android设备管理器或Apple iCloud的Find my iPhone)或使用EMM控制台可以使用该访问擦拭注册设备(Citation:Honan-Hacking).",
    "Google provides the ability for users to view their general account activity. Apple iCloud also provides notifications to users of account activity.": "Google为用户提供了查看其一般账户活动的能力. 苹果iCloud也向用户提供账户活动的通知.",
    "Exploitation for Client Execution": "利用客户执行",
    "Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to insecure coding practices that can lead to unanticipated behavior. Adversaries may take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility. \n\nAdversaries may use device-based zero-click exploits for code execution. These exploits are powerful because there is no user interaction required for code execution. \n\n### SMS/iMessage Delivery  \n\nSMS and iMessage in iOS are common targets through [Drive-By Compromise](https://attack.mitre.org/techniques/T1456), [Phishing](https://attack.mitre.org/techniques/T1660), etc. Adversaries may use embed malicious links, files, etc. in SMS messages or iMessages. Mobile devices may be compromised through one-click exploits, where the victim must interact with a text message, or zero-click exploits, where no user interaction is required. \n\n### AirDrop \n\nUnique to iOS, AirDrop is a network protocol that allows iOS users to transfer files between iOS devices. Before patches from Apple were released, on iOS 13.4 and earlier, adversaries may force the Apple Wireless Direct Link (AWDL) interface to activate, then exploit a buffer overflow to gain access to the device and run as root without interaction from the user.  ": "爱好者可能会利用客户端应用程序中的软件脆弱性来执行代码. 由于编码方法不安全,可能导致出乎意料的行为,软件中可能存在脆弱性. 敌对者可能利用某些弱点,为任意执行守则的目的进行有针对性的利用。 攻击性工具包最有价值的工具往往是那些可用于在远程系统上获得代码执行的工具,因为这些工具可用于进入该系统。 用户会期望看到与他们通常用于工作的应用程序有关的文件,因此由于它们的高度实用性,它们成为利用研发的有用目标.\n\n爱好者可能会使用基于设备的零点击开发来进行代码执行. 这些利用是强大的,因为代码执行不需要用户交互.\n\n短消息/信息传送\n\niOS中的短消息和iMessage是通过[Drive-By Compromise](https://sattack.mitre.org/techniques/T1456),[Phishing](https://sattack.mitre.org/techniques/T1660)等手段常见的目标. 爱好者可能会在短信或iMessages中使用嵌入恶意链接,文件等. 移动设备可能通过一次点击的利用而失密,在这种利用中,受害人必须与短信互动,或者在不需要用户互动的情况下进行零点击利用。\n\n空降技术\n\niOS的独特性,AirDrop是一种网络协议,允许iOS用户在iOS设备之间传输文件. 在苹果公司的补丁发布之前,在iOS 13.4和之前,对手可能会迫使苹果无线直接链接(AWDL)接口启动,然后利用缓冲溢出来获取设备访问权,并在没有用户互动的情况下作为根运行.",
    "Proxy Through Victim": "通过受害人代理",
    "Adversaries may use a compromised device as a proxy server to the Internet. By utilizing a proxy, adversaries hide the true IP address of their C2 server and associated infrastructure from the destination of the network traffic. This masquerades an adversary’s traffic as legitimate traffic originating from the compromised device, which can evade IP-based restrictions and alerts on certain services, such as bank accounts and social media websites.(Citation: Threat Fabric Exobot)\n\nThe most common type of proxy is a SOCKS proxy. It can typically be implemented using standard OS-level APIs and 3rd party libraries with no indication to the user. On Android, adversaries can use the `Proxy` API to programmatically establish a SOCKS proxy connection, or lower-level APIs to interact directly with raw sockets.": "爱好者可能使用失密的设备作为互联网的代理服务器. 通过使用代理,对手从网络流量的目的地隐藏其C2服务器和相关基础设施的真实IP地址. 这把对手的流量伪装成来自受损设备的合法流量,可以逃避基于IP的限制和对某些服务如银行账户和社交媒体网站的警示. (排泄物威胁)\n\n最常见的代理类型是SOCKS代理. 它一般可以使用标准OS级API和第三党的库执行,没有向用户提示. 在Android上,对手可以使用‘Proxy' API在程序上建立SOCKS代理连接,也可以使用较低级别的API直接与原始套接字交互.",
    "Enterprises may be able to detect anomalous traffic originating from mobile devices, which could indicate compromise.": "企业可能能够检测出源于移动设备的异常流量,这可能表明存在妥协.",
    "Domain Generation Algorithms": "域生成算法",
    "Adversaries may use [Domain Generation Algorithms](https://attack.mitre.org/techniques/T1520) (DGAs) to procedurally generate domain names for command and control communication, and other uses such as malicious application distribution.(Citation: securelist rotexy 2018)\n\nDGAs increase the difficulty for defenders to block, track, or take over the command and control channel, as there potentially could be thousands of domains that malware can check for instructions.": "不良者可能使用[Domain Generation Algorithms](https://sattack.mitre.org/techniques/T1520)(DGAs)程序生成用于指挥和控制通信的域名,以及恶意应用分配等其他用途. (英文:secretist rotexy 2018) (中文(简体) ).\n\nDGAs增加了维权者封锁,跟踪,或接管指挥控制通道的难度,因为可能存在数千个域,恶意软件可以检查指令.",
    "Detecting dynamically generated domains can be challenging due to the number of different DGA algorithms, constantly evolving malware families, and the increasing complexity of the algorithms. There is a myriad of approaches for detecting a pseudo-randomly generated domain name, including using frequency analysis, Markov chains, entropy, proportion of dictionary words, ratio of vowels to other characters, and more.(Citation: Data Driven Security DGA) CDN domains may trigger these detections due to the format of their domain names. In addition to detecting a DGA domain based on the name, another more general approach for detecting a suspicious domain is to check for recently registered names or for rarely visited domains.": "由于DGA算法不同,恶意软件家族不断演变,以及算法日益复杂,检测动态生成的域可能具有挑战性. 检测伪随机生成的域名的方法多种多样,包括使用频率分析,马尔科夫链, en,字典词的比例,元音与其他字符的比例等等. (Citation: Data Driven Security DGA) CDN域因其域名的格式可能触发这些检测. 除了根据名称检测DGA域外,另一个更一般的检测可疑域的方法是检查最近登记的名字或很少访问的域.",
    "Access Calendar Entries": "访问日历条目",
    "An adversary could call standard operating system APIs from a malicious application to gather calendar entry data, or with escalated privileges could directly access files containing calendar data.": "对手可以从恶意应用程序调用标准操作系统API来收集日历条目数据,或者拥有升级的权限可以直接访问包含日历数据的文件.",
    "On both Android (6.0 and up) and iOS, the user can view which applications have permission to access calendar information through the device settings screen, and the user can choose to revoke the permissions.": "在Android(6.0及上)和iOS上,用户可以查看哪些应用程序有权限通过设备设置屏幕访问日历信息,用户可以选择取消权限.",
    "Rogue Wi-Fi Access Points": "Rogue Wi-Fi 访问点",
    "An adversary could set up unauthorized Wi-Fi access points or compromise existing access points and, if the device connects to them, carry out network-based attacks such as eavesdropping on or modifying network communication(Citation: NIST-SP800153)(Citation: Kaspersky-DarkHotel).": "对手可以设置未经授权的Wi-Fi接入点或损害现有的接入点,如果设备与它们连接,则进行基于网络的攻击,如窃听或修改网络通信(Citation:NIST-SP800153)(Citation:Kaspersky-DarkHotel).",
    "Foreground Persistence": "前景持久性",
    "Adversaries may abuse Android's `startForeground()` API method to maintain continuous sensor access. Beginning in Android 9, idle applications running in the background no longer have access to device sensors, such as the camera, microphone, and gyroscope.(Citation: Android-SensorsOverview) Applications can retain sensor access by running in the foreground, using Android’s `startForeground()` API method. This informs the system that the user is actively interacting with the application, and it should not be killed. The only requirement to start a foreground service is showing a persistent notification to the user.(Citation: Android-ForegroundServices)\n\nMalicious applications may abuse the `startForeground()` API method to continue running in the foreground, while presenting a notification to the user pretending to be a genuine application. This would allow unhindered access to the device’s sensors, assuming permission has been previously granted.(Citation: BlackHat Sutter Android Foreground 2019)\n\nMalicious applications may also abuse the `startForeground()` API to inform the Android system that the user is actively interacting with the application, thus preventing it from being killed by the low memory killer.(Citation: TrendMicro-Yellow Camera)": "爱好者可能滥用Android的“起始前景()” API方法维持连续的传感器访问. 从Android 9开始,在背景中运行的闲置应用程序已经无法访问设备传感器,如相机,麦克风,陀螺仪. (评论:Android-Sensors Overview). 应用程序可以通过在前台运行,使用Android的 \" startForeground() \" 来保留传感器访问权。 API方法. 这告知系统,用户正在积极与应用程序互动,不应将其杀死. 启动前景服务的唯一要求是向用户发出持续通知。 (简体中文:Android-Foreground Services).\n\n恶意应用可能滥用`起始前景()' API方法继续在前台运行,同时向用户提交一个假冒真实应用程序的通知. 这将允许不受阻碍地进入设备的传感器,前提是事先已经获得许可。 (点击:黑色) Hat Sutter Android Foreground 2019) (美国英语).\n\n恶意应用还可能滥用`起始前景()' API告知Android系统,用户正在积极与应用程序互动,从而防止它被低记忆杀手杀死. (点击:TrendMicro-Yellow相机)",
    "Users can see persistent notifications in their notification drawer and can subsequently uninstall applications that do not belong. Applications could be vetted for their use of the `startForeground()` API, and could be further scrutinized if usage is found.": "用户可以在他们的通知抽屉中看到持续通知,然后可以解禁不属于它的应用程序. 可以审查申请是否使用`启动前景()' API,如果找到用法,可以进一步审查.",
    "Replication Through Removable Media": "通过可移动媒体复制",
    "Adversaries may move onto devices by exploiting or copying malware to devices connected via USB. In the case of Lateral Movement, adversaries may utilize the physical connection of a device to a compromised or malicious charging station or PC to bypass application store requirements and install malicious applications directly.(Citation: Lau-Mactans) In the case of Initial Access, adversaries may attempt to exploit the device via the connection to gain access to data stored on the device.(Citation: Krebs-JuiceJacking) Examples of this include: \n \n* Exploiting insecure bootloaders in a Nexus 6 or 6P device over USB and gaining the ability to perform actions including intercepting phone calls, intercepting network traffic, and obtaining the device physical location.(Citation: IBM-NexusUSB) \n* Exploiting weakly-enforced security boundaries in Android devices such as the Google Pixel 2 over USB.(Citation: GoogleProjectZero-OATmeal) \n* Products from Cellebrite and Grayshift purportedly that can exploit some iOS devices using physical access to the data port to unlock the passcode.(Citation: Computerworld-iPhoneCracking) ": "爱好者可以通过利用或复制恶意软件到通过USB连接的设备上移动到设备上. 就横向移动而言,对手可能利用设备与损坏或恶意充电站或个人计算机的物理连接来绕过应用程序商店的要求并直接安装恶意应用程序。 (简体中文:刘玛珊). 就初始访问而言,对手可能会试图通过连接来利用该设备获取存储在设备上的数据. (电话:Krebs-JuiceJacking) 这方面的例子包括:\n\n* 在USB上空利用Nexus 6或6P装置中的不安全装载器,并获得采取行动的能力,包括拦截电话、拦截网络流量和获得装置的实际位置。 (编号:IBM-NexusUSB)\n* 利用Google像素2等Android设备在USB上空的弱强化安全界限. (点击: Google ProjectZero-OATmeal).\n* 来自Celebrite和Grayshift的产品据称可以利用一些iOS设备,通过物理访问数据端口解锁密码。 (点击:计算机世界-iPhoneCracking)",
    "Audio Capture": "音频抓取",
    "Adversaries may capture audio to collect information by leveraging standard operating system APIs of a mobile device. Examples of audio information adversaries may target include user conversations, surroundings, phone calls, or other sensitive information. \n\n \n\nAndroid and iOS, by default, require that applications request device microphone access from the user.  \n\n \n\nOn Android devices, applications must hold the `RECORD_AUDIO` permission to access the microphone or the `CAPTURE_AUDIO_OUTPUT` permission to access audio output. Because Android does not allow third-party applications to hold the `CAPTURE_AUDIO_OUTPUT` permission by default, only privileged applications, such as those distributed by Google or the device vendor, can access audio output.(Citation: Android Permissions) However, adversaries may be able to gain this access after successfully elevating their privileges. With the `CAPTURE_AUDIO_OUTPUT` permission, adversaries may pass the `MediaRecorder.AudioSource.VOICE_CALL` constant to `MediaRecorder.setAudioOutput`, allowing capture of both voice call uplink and downlink.(Citation: Manifest.permission) \n\n \n\nOn iOS devices, applications must include the `NSMicrophoneUsageDescription` key in their `Info.plist` file to access the microphone.(Citation: Requesting Auth-Media Capture)": "爱好者可以通过利用移动设备的标准操作系统API来捕捉音频来收集信息. 音频信息对手可能针对的例子包括用户对话、周围环境、电话或其他敏感信息。\n\n\n\nAndroid和iOS默认要求应用程序向用户请求设备麦克风访问.\n\n\n\n在Android设备上,应用程序必须持有 \" RECORD_AUDIO \" 访问麦克风或 \" CAPTURE_AUDIO_UTPUT \" 访问音频输出的许可。 由于Android不允许第三方应用程序默认持有‘CAPTURE_AUDIO_UTPUT'许可,因此只有Google或设备供应商所发行的特权应用程序才能访问音频输出. (点击: Android 权限) 然而,对手在成功地提升了特权之后,也许能够获得这种准入。 经`CAPTURE_AUDIO_UTPUT ' 许可,对手可以将`MediaRecorder.Audio Source.VOICE_CALL ' 常数通过`MediaRecorder.setAudioOutput ' ,从而可以捕捉语音调用上链路和下链路。 (批注:声明.允许)\n\n\n\n在iOS设备上,应用程序必须在其`Info.plist ' 文件中列入`NSMicrophoneUsageDescription ' 密钥,以便访问麦克风。 (点击:请求 Auth-Media 捕获)",
    "In iOS 14 and up, an orange dot (or orange square if the Differentiate Without Color setting is enabled) appears in the status bar when the microphone is being used by an application. However, there have been demonstrations indicating it may still be possible to access the microphone in the background without triggering this visual indicator by abusing features that natively access the microphone or camera but do not trigger the visual indicators.(Citation: iOS Mic Spyware)\n\n\nIn Android 12 and up, a green dot appears in the status bar when the microphone is being used by an application.(Citation: Android Privacy Indicators)\n \n\nAndroid applications using the `RECORD_AUDIO` permission and iOS applications using `RequestRecordPermission` should be carefully reviewed and monitored. If the `CAPTURE_AUDIO_OUTPUT` permission is found in a third-party Android application, the application should be heavily scrutinized. \n\n \n\nIn both Android (6.0 and up) and iOS, users can review which applications have the permission to access the microphone through the device settings screen and revoke permissions as necessary. ": "在iOS 14和上,当一个应用程序使用麦克风时,在状态栏中出现一个橙点(或者如果启用无色差异设置的话,则出现橙方形). 然而,一些示威表明,仍有可能在背景中访问麦克风而不触发这一视觉指示器,其方法是滥用在本地访问麦克风或相机但不会触发视觉指示器的特性。 (点击:iOS Mic Spyware).\n\n\n在Android 12 and up,当一个应用程序使用麦克风时,状态栏中会出现一个绿色点. (点击: Android 隐私指标)\n\n\n应仔细审查和监测使用`RECORD_AUDIO ' 许可的Android应用程序和使用`请求记录 ' 的iOS应用程序。 如果在第三方Android申请中找到`CATURE_AUDIO_UTPUT ' 许可,应认真审查申请。\n\n\n\n在Android(6.0及以上)和iOS中,用户可以审查哪些应用程序有通过设备设置屏幕访问麦克风的许可,并在必要时取消权限.",
    "Hijack Execution Flow": "劫持行刑流程",
    "Adversaries may execute their own malicious payloads by hijacking the way operating systems run applications. Hijacking execution flow can be for the purposes of persistence since this hijacked execution may reoccur over time. \n\nThere are many ways an adversary may hijack the flow of execution. A primary way is by manipulating how the operating system locates programs to be executed. How the operating system locates libraries to be used by a program can also be intercepted. Locations where the operating system looks for programs or resources, such as file directories, could also be poisoned to include malicious payloads.": "爱好者可能通过劫持操作系统运行应用程序的方式来执行自己的恶意有效载荷。 劫持行刑流可能是为了持久,因为这种被劫持行刑可能随时间而再次发生。\n\n敌人可能以多种方式劫持行刑。 一种主要方法是操纵操作系统如何定位要执行的程序. 操作系统如何定位一个程序要使用的库也可以被截取. 操作系统寻找程序或资源的地点,如文件目录,也可能被毒杀以包括恶意的有效载荷.",
    "Mobile threat defense agents could detect unauthorized operating system modifications by using attestation.": "移动威胁防御剂可以通过使用证明来检测未经授权的操作系统修改.",
    "Unix Shell": "Unix 贝壳",
    "Adversaries may abuse Unix shell commands and scripts for execution. Unix shells are the underlying command prompts on Android and iOS devices. Unix shells can control every aspect of a system, with certain commands requiring elevated privileges that are only accessible if the device has been rooted or jailbroken. \n\nUnix shells also support scripts that enable sequential execution of commands as well as other typical programming operations such as conditionals and loops. Common uses of shell scripts include long or repetitive tasks, or the need to run the same set of commands on multiple systems. \n\nAdversaries may abuse Unix shells to execute various commands or payloads. Interactive shells may be accessed through command and control channels or during lateral movement such as with SSH. Adversaries may also leverage shell scripts to deliver and execute multiple commands on victims or as part of payloads used for persistence. \n\nIf the device has been rooted or jailbroken, adversaries may locate and invoke a superuser binary to elevate their privileges and interact with the system as the root user. This dangerous level of permissions allows the adversary to run special commands and modify protected system files.  ": "流浪汉可能会滥用Unix shell命令和脚本来执行. Unix shells是Android和iOS设备上的基本指令提示. Unix shells可以控制一个系统的每个方面,某些命令需要更高的权限,只有在设备已经扎根或断层的情况下才能使用.\n\nUnix shells 也支持能够连续执行命令的脚本,以及其他典型的编程操作,如条件和循环. shell脚本的常见用途包括长任务或重复任务,或者需要在多个系统中运行相同的一组命令.\n\n爱好者可能滥用Unix弹壳来执行各种命令或有效载荷. 交互式弹壳可以通过指挥控制通道访问,也可以在横向移动(如与SSH)时访问. 爱好者还可能利用壳脚本向受害人或作为持久性有效载荷的一部分发送和执行多个命令。\n\n如果设备已经扎根或断层,对手可能会找到并援引超级用户二进制来提升其权限,并作为根用户与系统互动. 这种危险的许可级别允许对手运行特殊命令并修改受保护的系统文件.",
    "Application Layer Protocol": "应用层协议",
    "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the mobile device, and often the results of those commands, will be embedded within the protocol traffic between the mobile device and server. \n\nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS.": "爱好者可能使用应用层协议进行交流,以避免通过与现有流量的混合进行检测/网络过滤. 移动设备的指令,常常是这些指令的结果,将嵌入移动设备与服务器之间的协议流量中.\n\n爱好者可能使用许多不同的协议,包括那些用于网页浏览,传输文件,电子邮件,或DNS的协议.",
    "Abuse of standard application protocols can be difficult to detect as many legitimate mobile applications leverage such protocols for language-specific APIs. Enterprises may be better served focusing on detection at other stages of adversarial behavior.": "滥用标准应用协议可能难以发现,因为许多合法的移动应用为语言特定API利用了这种协议. 对企业而言,在敌对行为的其他阶段可以更好地侧重于发现.",
    "App Delivered via Web Download": "通过网络下载交付的应用程序",
    "Download New Code at Runtime": "运行时下载新代码",
    "Adversaries may download and execute dynamic code not included in the original application package after installation. This technique is primarily used to evade static analysis checks and pre-publication scans in official app stores. In some cases, more advanced dynamic or behavioral analysis techniques could detect this behavior. However, in conjunction with [Execution Guardrails](https://attack.mitre.org/techniques/T1627) techniques, detecting malicious code downloaded after installation could be difficult.\n\nOn Android, dynamic code could include native code, Dalvik code, or JavaScript code that utilizes Android WebView’s `JavascriptInterface` capability. \n\nOn iOS, dynamic code could be downloaded and executed through 3rd party libraries such as JSPatch. (Citation: FireEye-JSPatch) ": "爱好者可能会在安装后下载和执行原应用程序包中没有的动态代码. 这一技术主要用于逃避静态分析检查和官方应用商店的发布前扫描. 在某些情况下,更先进的动态或行为分析技术可以检测到这种行为. 然而,结合[Execution Guardrails](https://sattack.mitre.org/techniques/T1627)技术,在安装后检测下载的恶意代码可能比较困难.\n\n在Android上,动态代码可以包括本地代码,Dalvik代码,或者JavaScript代码,它们利用Android WebView的\"JavascriptInterface\"能力.\n\n在iOS上,动态代码可以通过JSPatch等第3党的图书馆下载和执行. (点击:火眼-JSPatch)",
    "Existing network infrastructure may detect network calls to known malicious domains or the transfer of malicious payloads over the network. Mobile security products may provide URL inspection services that could determine if a domain being visited is malicious. Application vetting services could look for indications that the application downloads and executes new code at runtime (e.g., on Android, use of `DexClassLoader`, `System.load`, or the WebView `JavaScriptInterface` capability; on iOS, use of JSPatch or similar capabilities). Unfortunately, this is only a partial mitigation, as additional scrutiny would still need to be applied to applications that use these techniques. These techniques are often used without malicious intent, and  applications may employ other techniques to hide their use of these techniques.": "现有的网络基础设施可能检测到网络呼叫已知的恶意域或恶意有效载荷通过网络转移. 移动安全产品可能提供URL检查服务,可以确定被访问域是否恶意. 应用程序审查服务可以寻找显示应用程序在运行时下载和执行新的代码(例如,在Android上,使用“DexClass Loader”、“System.load”或WebView“JavaScript Interface”能力;在iOS上,使用JSPatch或类似能力)。 遗憾的是,这只是部分缓解,因为还需要对使用这些技术的应用进行更多的审查。 这些技术经常被无恶意地使用,应用程序可能使用其他技术来隐藏对这些技术的使用.",
    "Remotely Track Device Without Authorization": "没有授权的远程跟踪设备",
    "An adversary who is able to obtain unauthorized access to or misuse authorized access to cloud services (e.g. Google's Android Device Manager or Apple iCloud's Find my iPhone) or to an enterprise mobility management (EMM) / mobile device management (MDM) server console could use that access to track mobile devices.(Citation: Krebs-Location)": "能够获得未经授权访问或滥用授权访问云服务(如Google的Android设备管理器或Apple iCloud的Find my iPhone)或企业移动管理(EMM)/移动设备管理(MDM)服务器控制台的对手可以使用该访问跟踪移动设备. (简体中文:Krebs-Location)",
    "Google sends a notification to the device when Android Device Manager is used to locate it. Additionally, Google provides the ability for users to view their general account activity. Apple iCloud also provides notifications to users of account activity.": "在使用Android设备管理器定位时,Google向设备发送了通知. 此外,Google还提供用户查看其一般账户活动的能力。 苹果iCloud也向用户提供账户活动的通知.",
    "System Checks": "系统检查",
    "Adversaries may employ various system checks to detect and avoid virtualization and analysis environments. This may include changing behavior after checking for the presence of artifacts indicative of a virtual environment or sandbox. If the adversary detects a virtual environment, they may alter their malware’s behavior to disengage from the victim or conceal the core functions of the implant. They may also search for virtualization artifacts before dropping secondary or additional payloads. \n\nChecks could include generic system properties such as host/domain name and samples of network traffic. Adversaries may also check the network adapters addresses, CPU core count, and available memory/drive size. \n\nHardware checks, such as the presence of motion sensors, could also be used to gather evidence that can be indicative a virtual environment. Adversaries may also query for specific readings from these devices. ": "爱好者可能利用各种系统检查来检测和避免虚拟化和分析环境. 这可能包括检查显示虚拟环境或沙盒的文物存在后改变行为. 如果对手发现一个虚拟环境,他们可能会改变他们的恶意软件的行为,以脱离受害人或隐藏植入物的核心职能. 它们还可能在投放次级或额外有效载荷之前搜寻虚拟化文物。\n\n检查可以包括主机/域名和网络流量样本等通用系统属性. 爱好者还可以检查网络适配器地址,CPU核心计数,以及可用的内存/驱动大小.\n\n硬件检查,如运动传感器的存在,也可以用来收集能够显示虚拟环境的证据. 爱好者还可以查询这些设备的特定读数.",
    "Stored Application Data": "存储的应用程序数据",
    "Adversaries may try to access and collect application data resident on the device. Adversaries often target popular applications, such as Facebook, WeChat, and Gmail.(Citation: SWB Exodus March 2019) \n\n \n\nDue to mobile OS sandboxing, this technique is only possible in three scenarios: \n\n \n\n* An application stores files in unprotected external storage \n* An application stores files in its internal storage directory with insecure permissions (e.g. 777) \n* The adversary gains root permissions on the device ": "爱好者可能试图访问和收集设备上的应用程序数据。 爱好者经常针对流行应用,如Facebook,WeChat,以及Gmail. (英文:SWB Exodus March 2019) (中文(简体) ).\n\n\n\n由于移动式OS沙箱,这种技术只有在三种情况下才有可能:\n\n\n\n* 《大会正式记录,第五十八届会议,补编第5号》(A/C.6/61/Rev.1)。 应用程序将文件存储在未受保护的外部存储中\n* 《大会正式记录,第五十八届会议,补编第5号》(A/C.6/61/Rev.1)。 应用程序在内部存储目录中存储文件,但权限不安全(例如777)\n* 《大会正式记录,第五十八届会议,补编第5号》(A/C.6/61/Rev.1)。 对手在设备上获得根权限",
    "Application vetting services could detect when applications store data insecurely, for example, in unprotected external storage.": "应用程序审查服务可以发现,当应用程序不可靠地存储数据时,例如,在未受保护的外部存储中.",
    "Screen Capture": "屏幕抓取",
    "Adversaries may use screen capture to collect additional information about a target device, such as applications running in the foreground, user data, credentials, or other sensitive information. Applications running in the background can capture screenshots or videos of another application running in the foreground by using the Android `MediaProjectionManager` (generally requires the device user to grant consent).(Citation: Fortinet screencap July 2019)(Citation: Android ScreenCap1 2019) Background applications can also use Android accessibility services to capture screen contents being displayed by a foreground application.(Citation: Lookout-Monokle) An adversary with root access or Android Debug Bridge (adb) access could call the Android `screencap` or `screenrecord` commands.(Citation: Android ScreenCap2 2019)(Citation: Trend Micro ScreenCap July 2015) ": "爱好者可能使用屏幕捕获来收集目标设备的额外信息,如在前景运行的应用程序,用户数据,证书,或其他敏感信息. 在背景中运行的应用程序可以通过使用Android `MediaProjectionManager'(一般需要设备用户同意)来捕捉在前场运行的另一应用程序的截图或视频. (Citation:Fortinet screencap July 2019)(Citation:Android Screen Cap1 2019)背景应用程序也可以使用Android无障碍服务来捕捉由前缘应用程序显示的屏幕内容. (it:望也. 拥有根接入或Android调试桥(adb)接入的对手可以调用Android `screencap'或`screenrecord'命令。 (citation:Android Screen Cap2 2019)(citation: Trend Microscreen Cap 2015年7月) (中文(简体) )",
    "The user can view a list of apps with accessibility service privileges in the device settings. Application vetting services can look for the use of the Android `MediaProjectionManager` class, applying extra scrutiny to applications that use the class.": "用户可以在设备设置中查看具有无障碍服务权限的应用程序列表. 应用程序审查服务可以寻找Android `MediaProjection Manager ' 类的使用,对使用该类的应用程序进行额外审查.",
    "Transmitted Data Manipulation": "传输数据操纵",
    "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n\nManipulation may be possible over a network connection or between system processes where there is an opportunity to deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system, typically gained through a prolonged information gathering campaign, in order to have the desired impact.\n\nOne method to achieve [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1641/001) is by modifying the contents of the device clipboard. Malicious applications may monitor clipboard activity through the `ClipboardManager.OnPrimaryClipChangedListener` interface on Android to determine when clipboard contents have changed. Listening to clipboard activity, reading clipboard contents, and modifying clipboard contents requires no explicit application permissions and can be performed by applications running in the background. However, this behavior has changed with the release of Android 10.\n\nAdversaries may use [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1641/001) to replace text prior to being pasted. For example, replacing a copied Bitcoin wallet address with a wallet address that is under adversarial control.\n\n[Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1641/001) was seen within the Android/Clipper.C trojan. This sample was detected by ESET in an application distributed through the Google Play Store targeting cryptocurrency wallet numbers.(Citation: ESET Clipboard Modification February 2019)": "逆行者可能在前往存储或其他系统的途中改变数据,以便操纵外部结果或隐藏活动. 通过操纵传输的数据,对手可能试图影响业务流程、组织理解或决策。\n\n可以通过网络连接或在系统进程之间操纵,如果有机会部署一种将拦截和改变信息的工具。 修改的类型及其影响取决于目标传输机制以及对手的宗旨和目标。 对于复杂的系统,敌对者可能需要特殊的专门知识,并可能获得与系统有关的专门软件,这些软件通常是通过长期的信息收集活动获得的,以便产生预期的效果。\n\n实现[传送数据操纵](https://sattack.mitre.org/techniques/T1641/001)的方法之一是修改设备剪贴板的内容. 恶意应用程序可以通过Android上的“剪贴板管理器”。 On PrimaryClipCchangedListener” 接口监测剪贴板活动,以确定剪贴板内容何时发生变化。 听剪贴板活动,读取剪贴板内容,修改剪贴板内容,不需要明确的应用程序权限,可由在背景中运行的应用程序执行. 然而,随着Android 10的发布,这种行为也发生了变化.\n\n广告者可使用[传送数据操纵](https://sattack.mitre.org/techniques/T1641/001)在粘贴前替换文本. 例如,将复制的比特币钱包地址替换为处于对抗控制的钱包地址.\n\n[传送数据操纵](https://sattack.mitre.org/techniques/T1641/001)可见于Android/Clipp. 特罗扬 这个样本被ESET在通过Google Play Store发行的应用程序中检测到,该应用程序的目标是加密货币钱包号码. (简体中文:ESET剪贴板2019年2月修改)",
    "Applications could be vetted for their use of the clipboard manager APIs with extra scrutiny given to application that make use of them.": "可以审查应用程序使用剪贴板管理器API的情况,并对使用这些应用程序的应用程序进行额外审查.",
    "Manipulate App Store Rankings or Ratings": "管理 App Store 排名或评级",
    "An adversary could use access to a compromised device's credentials to attempt to manipulate app store rankings or ratings by triggering application downloads or posting fake reviews of applications. This technique likely requires privileged access (a rooted or jailbroken device).": "对手可以使用对一个受损设备的证书的访问,试图通过触发应用程序下载或张贴对应用程序的假审查来操纵应用商店的排名或评级. 这一技术可能需要获得特权(一种根深蒂固的或断狱的设备).",
    "URI Hijacking": "URI 资源 劫持",
    "Adversaries may register Uniform Resource Identifiers (URIs) to intercept sensitive data.\n\nApplications regularly register URIs with the operating system to act as a response handler for various actions, such as logging into an app using an external account via single sign-on. This allows redirections to that specific URI to be intercepted by the application. If a malicious application were to register for a URI that was already in use by a genuine application, the malicious application may be able to intercept data intended for the genuine application or perform a phishing attack against the genuine application. Intercepted data may include OAuth authorization codes or tokens that could be used by the malicious application to gain access to resources.(Citation: Trend Micro iOS URL Hijacking)(Citation: IETF-PKCE)": "爱好者可以注册统一资源识别器(URIs)来拦截敏感数据.\n\n应用程序经常在操作系统中注册URI,以充当各种动作的响应处理器,例如使用一个外部账户通过单一的签名登录到应用程序. 这样可以让应用程序拦截到向该特定URI方向的重定向. 如果恶意申请要登记真实申请已经使用的URI,则恶意申请可以截取用于真实申请的数据,或者对真实申请进行钓鱼攻击. 被截取的数据可能包括OAuth授权代码或令牌,这些代码或令牌可能被恶意应用程序用于获取资源. (点击:趋势微iOS URL劫持) (点击:IETF-PKCE)",
    "On Android, users may be presented with a popup to select the appropriate application to open the URI in. If the user sees an application they do not recognize, they can remove it.": "在Android上,可以向用户提供弹出,以选择合适的应用程序来打开URI. 如果用户看到一个他们不承认的应用程序,他们可以删除它.",
    "Compromise Software Dependencies and Development Tools": "压缩软件依赖和发展工具",
    "Adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise. Applications often depend on external software to function properly. Popular open source projects that are used as dependencies in many applications may be targeted as a means to add malicious code to users of the dependency.(Citation: Grace-Advertisement)": "为了数据或系统妥协的目的,逆客可能在最后消费者收到之前操纵产品或产品交付机制。 应用程序往往依赖于外部软件才能正常运行. 流行的开源项目,在许多应用程序中被用作依赖性,可以作为向依赖性用户添加恶意代码的一种手段. (选:格蕾丝-广告)",
    "Evade Analysis Environment": "Evade 分析环境",
    "Malicious applications may attempt to detect their operating environment prior to fully executing their payloads. These checks are often used to ensure the application is not running within an analysis environment such as a sandbox used for application vetting, security research, or reverse engineering. \nAdversaries may use many different checks such as physical sensors, location, and system properties to fingerprint emulators and sandbox environments.(Citation: Talos Gustuff Apr 2019)(Citation: ThreatFabric Cerberus)(Citation: Xiao-ZergHelper)(Citation: Cyberscoop Evade Analysis January 2019) Adversaries may access `android.os.SystemProperties` via Java reflection to obtain specific system information.(Citation: Github Anti-emulator) Standard values such as phone number, IMEI, IMSI, device IDs, and device drivers may be checked against default signatures of common sandboxes.(Citation: Sophos Anti-emulation)\n": "恶意的应用可能试图在全面实施其有效载荷之前探测其操作环境。 这些检查常常用于确保应用程序不在分析环境中运行,例如用于应用程序审查、安全研究或逆向工程的沙盒。\n爱好者可能使用许多不同的检查,如物理传感器,位置,和系统属性来进行指纹仿真器和沙盒环境. (网易:Talos Gustuff Apr 2019)(网易:威胁Fabric Cerberus)(网易:萧-泽格帮助)(网易:Cyberscoop Evade Analysis 2019年1月) 爱好者可以访问“android.os”。 通过Java反射获取特定系统信息。 (批注:Github 反模拟器) 诸如电话号码,IMEI,IMSI,设备ID,设备驱动程序等标准值可以对照普通沙盒的默认签名进行检查. (引文:Sophos Anti-emulation) (中文(简体) ).\n",
    "Analysis Environment avoidance capabilities can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversarial behavior.": "避免环境的能力可能难以发现,因此,企业在敌对行为的其他阶段可以更好地侧重于发现.",
    "Adversaries may register Uniform Resource Identifiers (URIs) to intercept sensitive data. \n\nApplications regularly register URIs with the operating system to act as a response handler for various actions, such as logging into an app using an external account via single sign-on. This allows redirections to that specific URI to be intercepted by the application. If an adversary were to register for a URI that was already in use by a genuine application, the adversary may be able to intercept data intended for the genuine application or perform a phishing attack against the genuine application. Intercepted data may include OAuth authorization codes or tokens that could be used by the adversary to gain access to protected resources.(Citation: Trend Micro iOS URL Hijacking)(Citation: IETF-PKCE) ": "爱好者可以注册统一资源识别器(URIs)来拦截敏感数据.\n\n应用程序经常在操作系统中注册URI,以充当各种动作的响应处理器,例如使用一个外部账户通过单一的签名登录到应用程序. 这样可以让应用程序拦截到向该特定URI方向的重定向. 如果敌方要登记真正应用已经使用的核电站,敌方可以截获真正应用所需的数据,或对真正应用进行钓鱼攻击。 截取的数据可能包括OAuth授权代码或令牌,被对手用来获取受保护资源. (点击:趋势微iOS URL劫持) (点击:IETF-PKCE)",
    "On Android, users may be presented with a popup to select the appropriate application to open the URI in. If the user sees an application they do not recognize, they can remove it. When vetting applications for potential security weaknesses, the vetting process could look for insecure use of Intents. Developers should be encouraged to use techniques to ensure that the intent can only be sent to an appropriate destination (e.g., use explicit rather than implicit intents, permission checking, checking of the destination app's signing certificate, or utilizing the App Links feature). For mobile applications using OAuth, encourage use of best practice. (Citation: IETF-OAuthNativeApps)(Citation: Android-AppLinks)": "在Android上,可以向用户提供弹出,以选择合适的应用程序来打开URI. 如果用户看到一个他们不承认的应用程序,他们可以删除它. 在审查可能存在安全缺陷的申请时,审查程序可以寻找不可靠地利用意向。 应鼓励开发者使用技术确保意图只能发送到适当的目的地(例如,使用明确而非隐含的意图,权限检查,检查目的地app的签名证书,或者使用App Links功能). 对于使用OAuth的移动应用程序,鼓励采用最佳做法。 (中文(简体) ). IETF-OAuthNativeApps (中文(简体) )",
    "Subvert Trust Controls": "子虚拟信任控制",
    "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted applications. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features include: an app being allowed to run because it is signed by a valid code signing certificate; an OS prompt alerting the user that an app came from an untrusted source; or getting an indication that you are about to connect to an untrusted site. The method adversaries use will depend on the specific mechanism they seek to subvert. ": "规避者可能破坏安全控制,而安全控制要么警告用户不可信活动,要么阻止不可信应用程序的执行。 操作系统和安全产品可能包含识别程序或网站具有某种程度信任的机制. 此类特性的例子包括:一个应用程序被允许运行,因为它是由有效的代码签名证书签名的;一个OS即时提醒用户一个应用程序来自一个不信任的来源;或者得到一个表示,你即将连接到一个不信任的网站. 对手使用的方法将取决于他们试图颠覆的具体机制.",
    "On Android, the user can use the device settings menu to view trusted CA certificates and look for unexpected or unknown certificates. A mobile security product could similarly examine the trusted CA certificate store for anomalies. Users can use the device settings menu to view which applications on the device are allowed to install unknown applications. \n\nOn iOS, the user can use the device settings menu to view installed Configuration Profiles and look for unexpected or unknown profiles. A Mobile Device Management (MDM) system could use the iOS MDM APIs to examine the list of installed Configuration Profiles for anomalies.": "在Android上,用户可以使用设备设置菜单查看可信赖的CA证书,并寻找出乎意料或未知的证书. 一个移动安全产品同样可以检查可信赖的CA证书商店的异常情况. 用户可以使用设备设置菜单查看设备上允许安装未知应用程序的哪些应用程序.\n\n在iOS上,用户可以使用设备设置菜单查看已安装的配置配置配置,并寻找出乎意料或未知配置. 一个移动设备管理系统(MDM)可以使用iOS MDM API来检查已安装的配置配置配置的异常列表.",
    "Access Call Log": "访问调用日志",
    "On Android, an adversary could call standard operating system APIs from a malicious application to gather call log data, or with escalated privileges could directly access files containing call log data.\n\nOn iOS, applications do not have access to the call log, so privilege escalation would be required in order to access the data.": "在Android上,对手可以从恶意应用程序中调用标准操作系统API来收集呼叫日志数据,或者有升级权限可以直接访问包含呼叫日志数据的文件.\n\n在iOS上,应用程序无法访问呼叫日志,因此需要特权升级才能访问数据.",
    "On Android 6.0 and up, the user can view which applications have permission to access call log information through the device settings screen, and the user can choose to revoke the permissions.": "在Android 6.0及上,用户可以查看哪些应用程序有权限通过设备设置屏幕访问呼叫日志信息,用户可以选择取消权限.",
    "Geofencing": "地理边缘",
    "Adversaries may use a device’s geographical location to limit certain malicious behaviors. For example, malware operators may limit the distribution of a second stage payload to certain geographic regions.(Citation: Lookout eSurv)\n\n[Geofencing](https://attack.mitre.org/techniques/T1581) is accomplished by persuading the user to grant the application permission to access location services. The application can then collect, process, and exfiltrate the device’s location to perform location-based actions, such as ceasing malicious behavior or showing region-specific advertisements.\n\nOne method to accomplish [Geofencing](https://attack.mitre.org/techniques/T1581) on Android is to use the built-in Geofencing API to automatically trigger certain behaviors when the device enters or exits a specified radius around a geographical location. Similar to other [Geofencing](https://attack.mitre.org/techniques/T1581) methods, this requires that the user has granted the `ACCESS_FINE_LOCATION` and `ACCESS_BACKGROUND_LOCATION` permissions. The latter is only required if the application targets Android 10 (API level 29) or higher. However, Android 11 introduced additional permission controls that may restrict background location collection based on user permission choices at runtime. These additional controls include “Allow only while using the app”, which will effectively prohibit background location collection.(Citation: Android Geofencing API)\n\nSimilarly, on iOS, developers can use built-in APIs to setup and execute geofencing. Depending on the use case, the app will either need to call `requestWhenInUseAuthorization()` or `requestAlwaysAuthorization()`, depending on when access to the location services is required. Similar to Android, users also have the option to limit when the application can access the device’s location, including one-time use and only when the application is running in the foreground.(Citation: Apple Location Services)\n\n[Geofencing](https://attack.mitre.org/techniques/T1581) can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within. For example, location data could be used to limit malware spread and/or capabilities, which could also potentially evade application analysis environments (ex: malware analysis outside of the target geographic area). Other malicious usages could include showing language-specific [Input Prompt](https://attack.mitre.org/techniques/T1411)s and/or advertisements.": "爱好者可能利用设备的地理位置来限制某些恶意行为. 例如,恶意软件运营商可能将二级有效载荷的分配限制在某些地理区域。 (英文:Lookout eSurv) (中文(简体) ).\n\n[Geofencing](https://fattle.mitre.org/techniques/T1581)是通过说服用户批准访问地点服务的申请许可来实现的. 应用程序然后可以收集、处理和释放设备的位置,以进行基于位置的行动,例如停止恶意行为或显示特定区域的广告。\n\n在Android上实现[Geofencing](https://sattack.mitre.org/techniques/T1581)的一个方法是,当设备在地理位置周围进出指定半径时,使用内置的Geofencing API自动触发某些行为. 与其他[Geofencing]方法类似(https://sattack.mitre.org/techniques/T1581),这就要求用户已经批准了`ACCESS_FINE_LOCATION ' 和`ACCESS_BACKGROUND_LOCATION ' 许可。 只有在应用针对Android 10(API级29)或更高时才需要后者. 然而,Android 11引入了额外的权限控制,可能会根据运行时用户权限选择限制背景位置采集. 这些额外的控制包括“只在使用应用程序时才使用”,这将有效禁止收集背景位置。 (点击:Android Geofencing API).\n\n同样地,在iOS上,开发者可以使用内置的API来设置和执行Geofencing. 视使用情况而定,该应用程序要么需要调用 \" Inuse Authorization() \" ,要么需要调用 \" Request Always Authorization() \" ,这取决于何时需要访问地点服务。 与Android类似,用户也可以在应用程序可以访问设备位置时进行限制,包括一次性使用,并且只有在应用程序在前台运行时才进行限制. (点击:苹果定位服务).\n\n[Geofencing] (https://state.mitre.org/techniques/T1581) (中文(简体) ). 可用于防止在无意损害或操作的环境中暴露能力。 例如,位置数据可以用来限制恶意软件的传播和/或能力,这也有可能逃避应用分析环境(如:恶意软件分析在目标地理区域外). 其他恶意使用可能包括显示特定语言的[输入提示](https://sattack.mitre.org/techniques/T1411)s和/或广告.",
    "Users can review which applications have location permissions in the operating system’s settings menu. On Android 10 and later, the system shows a notification to the user when an app has been accessing device location in the background.": "用户可以审查操作系统设置菜单中哪些应用程序有位置权限. 在Android 10上以及后来,当一个应用程序在背景中访问设备位置时,系统会向用户显示一个通知.",
    "Device Administrator Permissions": "设备管理员 权限",
    "Adversaries may request device administrator permissions to perform malicious actions.\n\nBy abusing the device administration API, adversaries can perform several nefarious actions, such as resetting the device’s password for [Device Lockout](https://attack.mitre.org/techniques/T1446), factory resetting the device to [Delete Device Data](https://attack.mitre.org/techniques/T1447) and any traces of the malware, disabling all of the device’s cameras, or make it more difficult to uninstall the app.(Citation: Android DeviceAdminInfo)\n\nDevice administrators must be approved by the user at runtime, with a system popup showing which of the actions have been requested by the app. In conjunction with other techniques, such as [Input Injection](https://attack.mitre.org/techniques/T1516), an app can programmatically grant itself administrator permissions without any user input.": "爱好者可能请求设备管理员授权进行恶意行为.\n\n通过滥用设备管理API,对手可以进行一些恶毒的行动,例如重置设备的密码,用于[Device Lockout](https://sattack.mitre.org/techniques/T1446),工厂重置设备以[删除设备数据](https://sattack.mitre.org/techniques/T1447)和任何恶意软件的痕迹,使设备的所有摄像头失效,或者更难解开应用程序. (Citation:Android DeviceAdminInfo)\n\n设备管理员必须在运行时得到用户的批准,系统弹出显示应用程序已经请求了哪些动作. 结合其他技术,如[投入注入](https://sattack.mitre.org/techniques/T1516),一个app可以在程序上给予自己管理员权限,而无需任何用户输入.",
    "Users can see when an app requests device administrator permissions. Users can also view which apps have device administrator permissions in the settings menu.": "用户可以看到应用程序何时请求设备管理员权限. 用户还可以查看设置菜单中哪些应用程序有设备管理员权限.",
    "Remotely Install Application": "远程安装应用程序",
    "Adversaries may collect keychain data from an iOS device to acquire credentials. Keychains are the built-in way for iOS to keep track of users' passwords and credentials for many services and features such as Wi-Fi passwords, websites, secure notes, certificates, private keys, and VPN credentials. \n\nOn the device, the keychain database is stored outside of application sandboxes to prevent unauthorized access to the raw data. Standard iOS APIs allow applications access to their own keychain contained within the database. By utilizing a privilege escalation exploit or existing root access, adversaries can access the entire encrypted database.(Citation: Apple Keychain Services)(Citation: Elcomsoft Decrypt Keychain) ": "爱好者可能从iOS设备中收集密钥链数据以获取证书. 键链是iOS对Wi-Fi密码,网站,安全笔记,证书,私钥,VPN证书等许多服务和功能进行追踪的内置方式.\n\n在设备上,键链数据库存储在应用程序沙盒之外,以防止未经授权访问原始数据. 标准iOS API允许应用程序访问数据库中包含的自己的密钥链. 通过利用特权升级或现有的根访问,对手可以访问整个加密数据库。 (点击:苹果键链服务) (点击:Elcomsoft 解密键链)",
    "Mobile security products can potentially detect jailbroken devices. Application vetting services may be able to detect known privilege escalation exploits contained within applications, as well as searching application packages for strings that correlate to known password store locations.": "移动安全产品有可能检测到断狱装置。 应用程序审查服务可能能够发现应用程序中已知的特权升级利用,以及搜索与已知密码储存地点有关的应用程序包.",
    "Modify Cached Executable Code": "修改缓存可执行代码",
    "ART (the Android Runtime) compiles optimized code on the device itself to improve performance. An adversary may be able to use escalated privileges to modify the cached code in order to hide malicious behavior. Since the code is compiled on the device, it may not receive the same level of integrity checks that are provided to code running in the system partition.(Citation: Sabanal-ART)": "ART(Android Runtime)在设备本身上编译优化的代码以提高性能. 对手可能能够使用升级权限来修改缓存代码以隐藏恶意行为. 由于代码是在设备上编译的,因此它可能不会得到与系统分区中运行的代码所提供的同样程度的完整性检查. (电话:Sabanal-ART)",
    "Modifications to cached executable code can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversary behavior.": "对缓存可执行代码的修改可能难以发现,因此,企业在敌对行为的其他阶段可以更好地专注于发现.",
    "Device Type Discovery": "设备类型发现",
    "On Android, device type information is accessible to apps through the android.os.Build class (Citation: Android-Build). Device information could be used to target privilege escalation exploits.": "在Android上,设备类型信息可以通过Android.os的应用程序访问. 构建类(Citation:Android-Build). 设备信息可用于瞄准特权升级利用.",
    "Adversaries may include functionality in malware that uninstalls the malicious application from the device. This can be achieved by:\n\n* Abusing device owner permissions to perform silent uninstallation using device owner API calls.\n* Abusing root permissions to delete files from the filesystem.\n* Abusing the accessibility service. This requires an intent be sent to the system to request uninstallation, and then abusing the accessibility service to click the proper places on the screen to confirm uninstallation.": "不良者可能包括恶意软件中的功能,从设备中解禁恶意应用程序. 可通过下列方式实现这一目标:\n\n* Abusing设备所有者允许使用设备所有者API的电话进行静默的不安装。\n* 滥用根权限从文件系统中删除文件。\n* 滥用无障碍服务。 这需要向系统发送请求解装的意向,然后滥用无障碍服务点击屏幕上的适当位置确认解装.",
    "Delete Device Data": "删除设备数据",
    "Adversaries may wipe a device or delete individual files in order to manipulate external outcomes or hide activity. An application must have administrator access to fully wipe the device, while individual files may not require special permissions to delete depending on their storage location. (Citation: Android DevicePolicyManager 2019)\n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The impact file deletion will have depends on the type of data as well as the goals and objectives of the adversary, but can include deleting update files to evade detection or deleting attacker-specified files for impact.": "逆行者可能会擦拭设备或删除单个文件,以便操纵外部结果或隐藏活动. 应用程序必须拥有管理员访问权限才能完全擦除设备,而单个文件则可能不会根据其存储位置要求特殊权限才能删除. (简体中文:Android设备政策管理2019).\n\n存储的数据可以包括各种文件格式,如Office文件,数据库,存储的电子邮件,以及自定义文件格式. 撞击文件的删除会取决于数据的类型以及对手的目的和目标,但可以包括删除更新文件以逃避检测或删除攻击者指定用于撞击的文件.",
    "Mobile security products can detect which applications can request device administrator permissions. Users can view applications with administrator access through the device settings, and may also notice if user data is inexplicably missing.": "移动安全产品可以检测哪些应用程序可以请求设备管理员权限. 用户可以通过设备设置查看管理员访问的应用程序,如果用户数据无法解释的缺失,还可以注意到.",
    "Carrier Billing Fraud": "载波计费欺诈",
    "A malicious app may trigger fraudulent charges on a victim’s carrier billing statement in several different ways, including SMS toll fraud and SMS shortcodes that make purchases.\n\nPerforming SMS fraud relies heavily upon the fact that, when making SMS purchases, the carriers perform device verification but not user verification. This allows adversaries to make purchases on behalf of the user, with little or no user interaction.(Citation: Google Bread)\n\nMalicious applications may also perform toll billing, which occurs when carriers provide payment endpoints over a web page. The application connects to the web page over cellular data so the carrier can directly verify the number, or the application must retrieve a code sent via SMS and enter it into the web page.(Citation: Google Bread)\n\nOn iOS, apps cannot send SMS messages.\n\nOn Android, apps must hold the `SEND_SMS` permission to send SMS messages. Additionally, Android version 4.2 and above has mitigations against this threat by requiring user consent before allowing SMS messages to be sent to premium numbers (Citation: AndroidSecurity2014).": "恶意应用可能会以几种不同的方式引发对受害人的承运人计费声明的欺诈性指控,包括短信收费欺诈和购买的短信短码.\n\n执行短信欺诈在很大程度上依赖于以下事实:在进行短信采购时,承运人进行设备核查而不是用户核查。 这允许对手代表用户进行采购,很少或没有用户互动. (点击:谷歌面包)\n\n恶意应用也可能进行收费计费,这发生在承运人在网页上提供付款终点时. 应用程序通过蜂窝数据连接到网页,以便载体可以直接验证数字,或者应用程序必须检索通过短信发送的代码并将其输入网页. (点击:谷歌面包)\n\n在iOS上,应用程序无法发送短消息.\n\n在Android上,应用程序必须持有发送短消息的“SEND_SMS”权限。 此外,Android版本4.2及以上通过要求用户同意才能将短信发送到溢价号码(Citation:Android Security2014)来缓解这一威胁.",
    "Starting with Android 4.2 the user is prompted and must provide consent before applications can send SMS messages to premium numbers.(Citation: AndroidSecurity2014)\n\nOn Android 6.0 and up, the user can view which applications have permission to send SMS messages through the device settings screen, and the user can choose to revoke the permissions.": "从Android 4.2开始,用户受到刺激,必须在应用程序向溢价号码发送短信之前表示同意。 (点击:Android Security 2014).\n\n在Android 6.0及上,用户可以查看哪些应用程序有权限通过设备设置屏幕发送短消息,用户可以选择取消权限.",
    "URL Scheme Hijacking": "URL 方案劫持",
    "An iOS application may be able to maliciously claim a URL scheme, allowing it to intercept calls that are meant for a different application(Citation: FireEye-Masque2)(Citation: Dhanjani-URLScheme). This technique, for example, could be used to capture OAuth authorization codes(Citation: IETF-PKCE) or to phish user credentials(Citation: MobileIron-XARA).": "一个iOS应用程序可能能够恶意地声称一个URL方案,允许它拦截原本用于不同应用程序的电话(Citation:FireEye-Masque2)(Citation:Dhanjani-URLScheme). 例如,这一技术可以用于获取OAuth授权代码(Citation:IETF-PKCE)或phish用户证书(Citation:MobileIron-XARA).",
    "Bidirectional Communication": "双向交流",
    "Adversaries may use an existing, legitimate external Web service channel as a means for sending commands to and receiving output from a compromised system. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems can then send the output from those commands back over that Web service channel. The return traffic may occur in a variety of ways, depending on the Web service being utilized. For example, the return traffic may take the form of the compromised system posting a comment on a forum, issuing a pull request to development project, updating a document hosted on a Web service, or by sending a Tweet. \n\n \n\nPopular websites and social media, acting as a mechanism for C2, may give a significant amount of cover. This is due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection. ": "爱好者可能使用现有的、合法的外部 网络服务频道作为向受损系统发送命令和接收输出的手段. 妥协的系统可能利用流行网站和社交媒体来主持指挥和控制(C2)指令. 这些受感染的系统然后可以把这些命令的输出发回Web服务频道。 返回流量可能以各种方式出现,这取决于正在使用的Web服务. 例如,返回流量可能采取以下形式:失密系统在一个论坛上张贴评论,向发展项目发出拉动请求,更新在Web服务上托管的文档,或者发送Tweet.\n\n\n\n大众网站和社交媒体作为C2的机制,可能会提供大量的封面. 这是因为一个网络内的主机有可能在妥协之前就已经与它们通信. 使用Google或Twitter等共同服务, 网络服务提供商通常使用SSL/TLS加密,给予对手额外的保护级别.",
    "Application vetting services may provide a list of connections made or received by an application, or a list of domains contacted by the application.": "申请审查服务可能提供一份申请所建立或收到的连接清单,或一份申请所联系的领域清单.",
    "Non-Standard Port": "非标准端口",
    "Adversaries may generate network traffic using a protocol and port pairing that are typically not associated. For example, HTTPS over port 8088 or port 587 as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis/parsing of network data.": "逆行者可能使用协议和端口配对生成网络流量,而这些协议和端口配对通常不相关. 例如,与传统的港口443相比,8088或587港上空的HTTPS. 爱好者可能会对协议用来绕过网络数据的过滤或混杂分析/解析的标准端口进行修改.",
    "Application vetting reports may show network communications performed by the application, including hosts, ports, protocols, and URLs. Further detection would most likely be at the enterprise level, through packet and/or netflow inspection. Many properly configured firewalls may also naturally block command and control traffic over non-standard ports.": "应用程序审核报告可能显示应用程序完成的网络通信,包括主机,端口,协议和URL. 很可能在企业一级通过包件和(或)净流量检查进行进一步检测。 许多适当配置的防火墙也可能自然阻断和控制非标准端口的交通.",
    "Compromise Software Supply Chain": "妥协软件供应链",
    "Adversaries may manipulate application software prior to receipt by a final consumer for the purpose of data or system compromise. Supply chain compromise of software can take place in a number of ways, including manipulation of the application source code, manipulation of the update/distribution mechanism for that software, or replacing compiled releases with a modified version.": "为了数据或系统妥协的目的,逆客可能在最后消费者收到之前操纵应用软件. 软件的供应链妥协可以采取多种方式,包括操纵应用程序源代码,操纵该软件的更新/分发机制,或用修改后的版本取代编译的版本.",
    "Application vetting services can detect malicious code in applications. System partition integrity checking mechanisms can detect unauthorized or malicious code contained in the system partition.": "应用程序审查服务可以在应用程序中检测恶意代码. 系统分区完整性检查机制可以检测系统分区中包含的未经授权或恶意代码.",
    "Dead Drop Resolver": "死信箱解析器",
    "Adversaries may use an existing, legitimate external Web service to host information that points to additional command and control (C2) infrastructure. Adversaries may post content, known as a dead drop resolver, on Web services with embedded (and often obfuscated/encoded) domains or IP addresses. Once infected, victims will reach out to and be redirected by these resolvers. \n\n \n\nPopular websites and social media, acting as a mechanism for C2, may give a significant amount of cover. This is due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection. \n\n \n\nUse of a dead drop resolver may also protect back-end C2 infrastructure from discovery through malware binary analysis, or enable operational resiliency (since this infrastructure may be dynamically changed). ": "爱好者可能使用现有的、合法的外部 提供网络服务,以托管指向额外指挥和控制(C2)基础设施的信息。 爱好者可能会在Web服务上贴出内容,称为死滴解析器(dead dropp resolute),并带有嵌入(而且经常被模糊/编码)域或IP地址. 一旦感染,受害者将伸出援助之手,并由这些解决者重新定位。\n\n\n\n大众网站和社交媒体作为C2的机制,可能会提供大量的封面. 这是因为一个网络内的主机有可能在妥协之前就已经与它们通信. 使用Google或Twitter等共同服务, 网络服务提供商通常使用SSL/TLS加密,给予对手额外的保护级别.\n\n\n\n使用死滴解器也可能通过恶意软件二进制分析来保护后端的C2基础设施不被发现,或者使操作恢复能力(因为这种基础设施可能会被动态改变).",
    "Application vetting services may provide a list of connections made or received by an application, or a list of domains contacted by the application. ": "申请审查服务可能提供一份申请所建立或收到的连接清单,或一份申请所联系的领域清单.",
    "Location Tracking": "地点跟踪",
    "Adversaries may track a device’s physical location through use of standard operating system APIs via malicious or exploited applications on the compromised device. \n\n \n\nOn Android, applications holding the `ACCESS_COAURSE_LOCATION` or `ACCESS_FINE_LOCATION` permissions provide access to the device’s physical location. On Android 10 and up, declaration of the `ACCESS_BACKGROUND_LOCATION` permission in an application’s manifest will allow applications to request location access even when the application is running in the background.(Citation: Android Request Location Permissions) Some adversaries have utilized integration of Baidu map services to retrieve geographical location once the location access permissions had been obtained.(Citation: PaloAlto-SpyDealer)(Citation: Palo Alto HenBox) \n\n \n\nOn iOS, applications must include the `NSLocationWhenInUseUsageDescription`, `NSLocationAlwaysAndWhenInUseUsageDescription`, and/or `NSLocationAlwaysUsageDescription` keys in their `Info.plist` file depending on the extent of requested access to location information.(Citation: Apple Requesting Authorization for Location Services) On iOS 8.0 and up, applications call `requestWhenInUseAuthorization()` to request access to location information when the application is in use or `requestAlwaysAuthorization()` to request access to location information regardless of whether the application is in use. With elevated privileges, an adversary may be able to access location data without explicit user consent with the `com.apple.locationd.preauthorized` entitlement key.(Citation: Google Project Zero Insomnia)": "爱好者可能通过使用标准操作系统API通过恶意或被利用在受损设备上的应用来跟踪设备的物理位置.\n\n\n\n在Android上,持有`ACESS_COANRSE_LOCATION ' 或`ACESS_FINE_LOCATION ' 许可的应用程序提供对设备实际位置的访问。 在Android 10及以上,在申请表上声明`ACCESS_BACKGROUND_LOCATION ' 许可,即使申请在背景中运行,也允许申请请求访问位置。 (点击: Android 请求位置权限) 一些对手利用Baidu地图服务的整合,一旦获得地点访问许可,就检索地理位置。 (英文:PaloAlto-SpyDealer) (中文(简体) ).\n\n\n\n在iOS上,应用程序必须在其`InUsageDescription ' 文件中列入`NSLocation When InUsageDescription ' 、`NSLocation Always And When InUsageDescription ' 和/或`NSLocation Description ' 密钥,视请求访问位置信息的程度而定。 (Citation: Apple Requesting Authorization for Location Services) 在iOS 8.0上,应用程序呼号为`InusedAuthorization()',请求在应用程序正在使用时访问位置信息,或`随时请求Authorization()',请求访问位置信息,无论应用程序是否在使用中. 拥有更高权限的对手可以不经用户明确同意而访问位置数据,使用`com.apple.located.privated'权限密钥。 (Citation: Google Project Zero Insomonia)",
    "Android applications requesting the `ACCESS_COARSE_LOCATION`, `ACCESS_FINE_LOCATION`, or `ACCESS_BACKGROUND_LOCATION` permissions and iOS applications including the `NSLocationWhenInUseUsageDescription`, `NSLocationAlwaysAndWhenInUseUsageDescription`, and/or `NSLocationAlwaysUsageDescription` keys in their `Info.plist` file could be scrutinized during the application vetting process. \n\n \n\nIn both Android (6.0 and up) and iOS, users can view which applications have the permission to access the device location through the device settings screen and revoke permissions as necessary.  ": "申请`Access_COARSE_LOCATION ' 、`Access_FINE_LOCATION ' 或`Access_BACKGROUND_LOCATION ' 的许可和iOS应用程序,包括`使用时的指定 ' 、`使用时的指定 ' 和/或`使用时的指定 ' 和/或`使用时的指定 ' ,可在申请审查过程中审查。\n\n\n\n在Android(6.0及上)和iOS中,用户都可以查看哪些应用程序有权限通过设备设置屏幕访问设备位置,并在必要时取消权限.",
    "Adversaries may abuse Android’s device administration API to obtain a higher degree of control over the device. By abusing the API, adversaries can perform several nefarious actions, such as resetting the device’s password for [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1642), factory resetting the device for [File Deletion](https://attack.mitre.org/techniques/T1630/002) and to delete any traces of the malware, disabling all the device’s cameras, or to make it more difficult to uninstall the app.\n\nDevice administrators must be approved by the user at runtime, with a system popup showing which actions have been requested by the app. In conjunction with other techniques, such as [Input Injection](https://attack.mitre.org/techniques/T1516), an app can programmatically grant itself administrator permissions without any user input.": "爱好者可能会滥用Android的设备管理API来获得对该设备的更高程度的控制. 通过滥用API,对手可以采取一些恶毒的行动,例如重置设备的密码,用于[Endpoint Deficial of Services](https://fattle.mitre.org/techniques/T1630/002),重置设备的密码(https://fattle.\n\n设备管理员必须在运行时得到用户的批准,系统弹出显示应用程序已请求哪些动作. 结合其他技术,如[投入注入](https://sattack.mitre.org/techniques/T1516),一个app可以在程序上给予自己管理员权限,而无需任何用户输入.",
    "Users are prompted for approval when an application requests device administrator permissions. Users can see which applications are registered as device administrators in the device settings. Application vetting services can check for the string `BIND_DEVICE_ADMIN` in the application’s manifest. This indicates it can prompt the user for device administrator permissions.": "当应用程序请求设备管理员许可时,会提示用户批准. 用户可以看到设备设置中哪些应用程序注册为设备管理员. 申请审查服务可以检查申请表上的字符串“BIND_DEVICE_ADMIN”。 这表明它可以提醒用户设备管理员权限.",
    "Device Lockout": "设备锁定",
    "An adversary may seek to lock the legitimate user out of the device, for example to inhibit user interaction or to obtain a ransom payment.\n\nOn Android versions prior to 7, apps can abuse Device Administrator access to reset the device lock passcode to prevent the user from unlocking the device. After Android 7, only device or profile owners (e.g. MDMs) can reset the device’s passcode.(Citation: Android resetPassword)\n\nOn iOS devices, this technique does not work because mobile device management servers can only remove the screen lock passcode, they cannot set a new passcode. However, on jailbroken devices, malware has been discovered that can lock the user out of the device.(Citation: Xiao-KeyRaider)": "对手可能试图将合法用户锁在设备之外,例如抑制用户互动或获取赎金。\n\n在7前的Android版本上,app可以滥用设备管理员的访问权限来重置设备锁密码,以防止用户解锁设备. 在Android 7之后,只有设备或配置文件所有者(如MDMs)才能重置设备的密码. (点击:Android重置Password).\n\n在iOS设备上,这种技术不起作用,因为移动设备管理服务器只能去除屏幕锁密码,不能设置新的密码. 然而,在jabroken设备上,发现了可以将用户锁出设备的恶意软件. (简体中文:小凯雷德)",
    "On Android, users can review which applications have device administrator access in the device settings, and revoke permission where appropriate.": "在Android上,用户可以审查设备设置中哪些应用程序有设备管理员访问权限,并酌情撤销许可.",
    "Remote Device Management Services": "远程设备管理服务",
    "An adversary may use access to cloud services (e.g. Google's Android Device Manager or Apple iCloud's Find my iPhone) or to an enterprise mobility management (EMM)/mobile device management (MDM) server console to track the location of mobile devices managed by the service.(Citation: Krebs-Location) ": "对手可能使用访问云服务(如Google的Android设备管理器或Apple iCloud的Find my iPhone)或企业移动管理(EMM)/移动设备管理(MDM)服务器控制台来跟踪由服务管理移动设备的位置. (简体中文:Krebs-Location)",
    "Google sends a notification to the device when Android Device Manager is used to locate it. Additionally, Google provides the ability for users to view their general account activity and alerts users when their credentials have been used on a new device. Apple iCloud also provides notifications to users of account activity such as when credentials have been used. ": "当使用Android设备管理器定位时,Google向设备发送了通知. 此外,Google还提供用户查看其一般账户活动的能力,并在新设备上使用其证书时提醒用户。 Apple iCloud也向用户提供账户活动的通知,例如当使用证书时.",
    "Data Destruction": "数据销毁",
    "Adversaries may destroy data and files on specific devices or in large numbers to interrupt availability to systems, services, and network resources. Data destruction is likely to render stored data irrecoverable by forensic techniques through overwriting files or data on local and remote drives.  \n\nTo achieve data destruction, adversaries may use the `pm uninstall` command to uninstall packages or the `rm` command to remove specific files. For example, adversaries may first use `pm uninstall` to uninstall non-system apps, and then use `rm (-f) <file(s)>` to delete specific files, further hiding malicious activity.(Citation: rootnik_rooting_tool)(Citation: abuse_native_linux_tools)": "不良者可能破坏特定设备的数据和文件,或大量破坏系统、服务和网络资源的可用性。 数据破坏有可能通过重叠文件或本地和远程驱动器上的数据,使法医技术无法恢复储存的数据。\n\n为了实现数据销毁,对手可以使用`pm uninstall ' 命令来卸载软件包或`rm ' 命令去除特定文件。 例如,对手可能首先使用`pm uninstall'来解除非系统应用程序的安装,然后使用`rm (-f) < file (s) }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",
    "Attack PC via USB Connection": "通过 USB 连接攻击 PC",
    "With escalated privileges, an adversary could program the mobile device to impersonate USB devices such as input devices (keyboard and mouse), storage devices, and/or networking devices in order to attack a physically connected PC(Citation: Wang-ExploitingUSB)(Citation: ArsTechnica-PoisonTap) This technique has been demonstrated on Android. We are unaware of any demonstrations on iOS.": "有了升级的特权,对手可以将移动设备编程为冒充USB设备,如输入设备(键盘和鼠标),存储设备,和/或网络设备,以攻击一个物理连接的PC(Citation:Wang-ExpectingUSB)(Citation:ArsTechnica-PoisonTap) 这个技术已经在Android上演示过. 我们不知道任何关于iOS的示威活动.",
    "Stolen Developer Credentials or Signing Keys": "被窃取的开发者证书或签名密钥",
    "Rogue Cellular Base Station": "恶意蜂窝基站",
    "An adversary could set up a rogue cellular base station and then use it to eavesdrop on or manipulate cellular device communication. A compromised cellular femtocell could be used to carry out this technique(Citation: Computerworld-Femtocell).": "对手可以建立无赖蜂窝基地站,然后用来窃听或操纵蜂窝设备通信. 一个受损的细胞femtocell可用于实施这一技术(Citation:Computerworld-Femtocell).",
    "SIM Card Swap": "SIM 卡交换",
    "An adversary could convince the mobile network operator (e.g. through social networking, forged identification, or insider attacks performed by trusted employees) to issue a new SIM card and associate it with an existing phone number and account.(Citation: NYGov-Simswap)(Citation: Motherboard-Simswap2) The adversary could then obtain SMS messages or hijack phone calls intended for someone else.(Citation: Betanews-Simswap)\n\nOne use case is intercepting authentication messages or phone calls to obtain illicit access to online banking or other online accounts, as many online services allow account password resets by sending an authentication code over SMS to a phone number associated with the account.(Citation: Guardian-Simswap)(Citation: Motherboard-Simswap1)(Citation: Krebs-SimSwap)(Citation: TechCrunch-SimSwap)": "对手可以说服移动网络运营商(例如通过社交网络,伪造身份证明,或由信任的员工进行内幕攻击)发行新的SIM卡,并将其与现有的电话号码和账户联系起来. (歌词:NYGov-Simswap) (歌词:Motherboard-Simswap2). 然后,对手可以得到短信或劫持他人电话。 (英文:Betanews-Simswap) (中文(简体) ).\n\n一个使用案例是拦截认证信息或电话,以获取非法访问在线银行或其他在线账户的机会,因为许多在线服务允许账户密码重新发送,将一个认证代码通过短信发送到与账户相关的电话号码. (注:守护者-Simswap) (注:母板-Simswap1) (注:Krebs-SimSwap) (注:TechCrunch-SimSwap)",
    "Input Capture": "输入捕获",
    "Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal device usage, users often provide credentials to various locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. [Keylogging](https://attack.mitre.org/techniques/T1417/001)) or rely on deceiving the user into providing input into what they believe to be a genuine application prompt (e.g. [GUI Input Capture](https://attack.mitre.org/techniques/T1417/002)).": "爱好者可能使用获取用户输入的方法来获取证书或收集信息. 在正常设备使用期间,用户经常向不同地点提供证书,如登录页面/门户或系统对话框. 输入捕捉机制可能对用户透明(例如[Keylogg](https://sattack.mitre.org/techniques/T1417/001)),或依靠欺骗用户为他们认为是真正应用程序的即时输入(例如[GUI输入捕捉](https://sattack.mitre.org/techniques/T1417/002).",
    "Application vetting services can look for applications requesting the permissions granting access to accessibility services or application overlay. Users can view and manage installed third-party keyboards.": "申请审查服务机构可查询申请,申请许可获取无障碍服务或申请表。 用户可以查看和管理已安装的第三方键盘.",
    "Generate Traffic from Victim": "从受害者生成流量",
    "Adversaries may generate outbound traffic from devices. This is typically performed to manipulate external outcomes, such as to achieve carrier billing fraud or to manipulate app store rankings or ratings. Outbound traffic is typically generated as SMS messages or general web traffic, but may take other forms as well.\n\nIf done via SMS messages, Android apps must hold the `SEND_SMS` permission. Additionally, sending an SMS message requires user consent if the recipient is a premium number. Applications cannot send SMS messages on iOS": "逆行者可能会从设备中产生出行流量. 这样做一般是为了操纵外部结果,如实现载体计费欺诈或操纵应用商店排名或评级. 外出流量通常作为短信或一般网络流量生成,但也可能采取其他形式。\n\n如果通过短消息完成,Android应用程序必须持有“SEND_SMS”许可。 此外,发送短信需要用户同意,如果收件人是溢价号码。 应用程序无法在 iOS 上发送短消息",
    "On Android, users can review which applications can use premium SMS features in the “Special access” page within application settings. Application vetting services can detect when applications request the `SEND_SMS` permission, which should be infrequently used.": "在Android上,用户可以审查哪些应用程序可以在应用程序设置中的“特别访问”页面中使用溢价短消息功能。 申请审查服务可在申请请求`SEND_SMS ' 许可时发现,这种许可不应经常使用.",
    "Disguise Root/Jailbreak Indicators": "伪装根/越狱指标",
    "An adversary could use knowledge of the techniques used by security software to evade detection.(Citation: Brodie)(Citation: Tan) For example, some mobile security products perform compromised device detection by searching for particular artifacts such as an installed \"su\" binary, but that check could be evaded by naming the binary something else. Similarly, polymorphic code techniques could be used to evade signature-based detection.(Citation: Rastogi)": "对手可以利用对安全软件所用技术的了解来逃避侦查。 (引文:Brodie)(引文:Tan) (中文(简体) ). 例如,一些移动安全产品通过搜索安装的\"Su\"二进制等特定文物来进行受损的设备检测,但通过给二进制命名其他东西来逃避检查. 同样,多形态编码技术可用来逃避基于签名的检测。 (城镇:拉斯托吉)",
    "Mobile security products can use attestation to detect compromised devices.": "移动安全产品可以使用证明检测受损设备.",
    "Masquerade as Legitimate Application": "伪装成合法应用程序",
    "An adversary could distribute developed malware by masquerading the malware as a legitimate application. This can be done in two different ways: by embedding the malware in a legitimate application, or by pretending to be a legitimate application.\n\nEmbedding the malware in a legitimate application is done by downloading the application, disassembling it, adding the malicious code, and then re-assembling it.(Citation: Zhou) The app would appear to be the original app, but would contain additional malicious functionality. The adversary could then publish the malicious application to app stores or use another delivery method.\n\nPretending to be a legitimate application relies heavily on lack of scrutinization by the user. Typically, a malicious app pretending to be a legitimate one will have many similar details as the legitimate one, such as name, icon, and description.(Citation: Palo Alto HenBox)\n\nMalicious applications may also masquerade as legitimate applications when requesting access to the accessibility service in order to appear as legitimate to the user, increasing the likelihood that the access will be granted.": "对手可以通过伪装恶意软件作为合法应用来分配开发的恶意软件. 这可以通过两种不同的方式实现:将恶意软件嵌入合法应用程序,或者假装合法应用程序.\n\n在合法应用程序中嵌入恶意软件是通过下载应用程序,拆卸,添加恶意代码,然后重新组装完成的. (it:周也. 该应用程序看起来是原始的应用程序,但包含额外的恶意功能. 然后对手可以发布恶意应用程序,用于应用商店或使用另一种交付方法.\n\n装作合法应用程序在很大程度上依赖于用户缺乏仔细审查。 通常情况下,假扮为合法程序的恶意应用程序会有与合法程序类似的许多细节,例如名称,图标和描述. (简体中文:帕洛·阿尔托·亨博克斯).\n\n恶意应用程序在请求访问无障碍服务时也可能假扮为合法应用程序,以使用户看起来合法,从而增加了获得访问的可能性.",
    "Users can detect malicious applications by watching for nuances that could indicate the application is not the intended one when it is being installed.": "用户可以通过观察能够表明应用程序在安装时不是预定应用的细微差别来检测恶意应用.",
    "Malicious Media Content": "恶意媒体内容",
    "Calendar Entries": "日历条目",
    "Adversaries may utilize standard operating system APIs to gather calendar entry data. On Android, this can be accomplished using the Calendar Content Provider. On iOS, this can be accomplished using the `EventKit` framework. \n\n \n\nIf the device has been jailbroken or rooted, an adversary may be able to access [Calendar Entries](https://attack.mitre.org/techniques/T1636/001) without the user’s knowledge or approval. ": "爱好者可能利用标准操作系统API来收集日历条目数据. 在Android上,可以使用日历内容提供器实现. 在iOS方面,可以利用 \" EventKit \" 框架实现这一点。\n\n\n\n如果该装置已经断裂或根植,对手可以在用户不知情或未经用户批准的情况下进入[Calendar Entries](https://sattack.mitre.org/techniques/T1636/001).",
    "On both Android and iOS, the user can manage which applications have permission to access calendar information through the device settings screen, revoke the permission if necessary. Application vetting services could look for `android.permission.READ_CALENDAR` or `android.permission.WRITE_CALENDAR` in an Android application’s manifest, or `NSCalendarsUsageDescription` in an iOS application’s `Info.plist` file. Most applications do not need calendar access, so extra scrutiny could be applied to those that request it. ": "在Android和iOS上,用户可以管理哪些应用程序有权限通过设备设置屏幕访问日历信息,必要时取消权限. 应用审查服务可以寻找“android.permission.READ_CALENDAR”或“android.permission”。 WRITE_CALENDAR \" 载于Android应用程序的表,或 \" NSCalendarsUsage Description \" 载于iOS应用程序的`Info.plist ' 文件。 大多数应用程序不需要日历访问,因此可以对要求访问的应用程序进行额外审查.",
    "File Deletion": "文件删除",
    "Adversaries may wipe a device or delete individual files in order to manipulate external outcomes or hide activity. An application must have administrator access to fully wipe the device, while individual files may not require special permissions to delete depending on their storage location.(Citation: Android DevicePolicyManager 2019) \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The impact file deletion will have depends on the type of data as well as the goals and objectives of the adversary, but can include deleting update files to evade detection or deleting attacker-specified files for impact.": "逆行者可能会擦拭设备或删除单个文件,以便操纵外部结果或隐藏活动. 应用程序必须拥有管理员访问权限才能完全擦除设备,而单个文件则可能不会根据其存储位置要求特殊权限才能删除. (简体中文:Android设备政策管理2019).\n\n存储的数据可以包括各种文件格式,如Office文件,数据库,存储的电子邮件,以及自定义文件格式. 撞击文件的删除会取决于数据的类型以及对手的目的和目标,但可以包括删除更新文件以逃避检测或删除攻击者指定用于撞击的文件.",
    "Mobile security products can detect which applications can request device administrator permissions. Users can view applications with administrator access through the device settings, and may also notice if user data is inexplicably missing. Application vetting services could be extra scrutinous of applications that request device administrator permissions.": "移动安全产品可以检测哪些应用程序可以请求设备管理员权限. 用户可以通过设备设置查看管理员访问的应用程序,如果用户数据无法解释的缺失,还可以注意到. 应用程序审查服务可以对请求设备管理员许可的应用程序进行额外整理.",
    "An adversary may seek to inhibit user interaction by locking the legitimate user out of the device. This is typically accomplished by requesting device administrator permissions and then locking the screen using `DevicePolicyManager.lockNow()`. Other novel techniques for locking the user out of the device have been observed, such as showing a persistent overlay, using carefully crafted “call” notification screens, and locking HTML pages in the foreground. These techniques can be very difficult to get around, and typically require booting the device into safe mode to uninstall the malware.(Citation: Microsoft MalLockerB)(Citation: Talos GPlayed)(Citation: securelist rotexy 2018)\n\nPrior to Android 7, device administrators were able to reset the device lock passcode to prevent the user from unlocking the device. The release of Android 7 introduced updates that only allow device or profile owners (e.g. MDMs) to reset the device’s passcode.(Citation: Android resetPassword)": "对手可能试图通过将合法用户锁出设备来抑制用户的互动. 这通常是通过请求设备管理员权限,然后使用“DevicePolicyManager.lockNow()”锁定屏幕来实现的。 已经观察到将用户锁出设备的其他新颖技术,例如显示一个持续覆盖,使用精心设计的“呼叫”通知屏幕,以及将HTML页面锁定在前台。 这些技术可能很难绕过,通常需要将设备推出安全模式以解开恶意软件. (简体中文:微软MalLockerB)(简体中文:Talos GPlayed)(简体中文:安全列表 Rotexy 2018).\n\n在Android 7之前,设备管理员能够重置设备锁密码,以防止用户解锁设备. Android 7的发布引入了仅允许设备或配置文件所有者(如MDMS)重置设备的密码的更新. (点击:Android重置Password)",
    "Users can view a list of device administrators in device settings and revoke permission where appropriate. Applications that request device administrator permissions should be scrutinized further for malicious behavior.": "用户可以在设备设置中查看设备管理员列表,并酌情撤销许可. 请求设备管理员权限的应用程序,应当进一步审查恶意行为.",
    "Keylogging": "密钥日志",
    "Adversaries may log user keystrokes to intercept credentials or other information from the user as the user types them.\n\nSome methods of keylogging include:\n\n* Masquerading as a legitimate third-party keyboard to record user keystrokes.(Citation: Zeltser-Keyboard) On both Android and iOS, users must explicitly authorize the use of third-party keyboard apps. Users should be advised to use extreme caution before granting this authorization when it is requested.\n* Abusing accessibility features. On Android, adversaries may abuse accessibility features to record keystrokes by registering an `AccessibilityService` class, overriding the `onAccessibilityEvent` method, and listening for the `AccessibilityEvent.TYPE_VIEW_TEXT_CHANGED` event type. The event object passed into the function will contain the data that the user typed. \n*Additional methods of keylogging may be possible if root access is available. \n": "爱好者可以登录用户键盘,在用户输入时拦截用户的证书或其他信息.\n\n一些密钥记录方法包括:\n\n* Masquerading作为一个合法的第三方键盘来记录用户键盘. (符号:泽尔策-键盘) 在Android和iOS上,用户必须明确授权使用第三方键盘应用. 应提醒用户在申请授权前要极为谨慎。\n* 滥用无障碍功能。 在Android上,对手可能通过注册一个 \" Accessibility Service \" 类,超越 \" Accessbility Event \" 方法,并监听 \" Accessbility Event.TYPE_VIEW_TEXT_CHANGED \" 事件类型,滥用无障碍特性来记录按键。 传入函数的事件对象将包含用户输入的数据.\n* 如果有root访问,则可能采用另外的密钥记录方法。\n.",
    "On Android, users can view and manage which applications have third-party keyboard access through the device settings in System -> Languages & input -> Virtual keyboard. On iOS, users can view and manage which applications have third-party keyboard access through the device settings in General -> Keyboard. \n\nApplication vetting services can look for applications requesting the `android.permission.BIND_ACCESSIBILITY_SERVICE` permission in a service declaration. On Android, users can view and manage which applications can use accessibility services through the device settings in Accessibility. The exact device settings menu locations may vary between operating system versions.": "在Android上,用户可以通过系统设备设置查看和管理哪些应用程序具有第三方键盘访问权限 - > 语言输入 - > 虚拟键盘. 在iOS上,用户可以通过通用设备设置查看和管理哪些应用程序具有第三方键盘访问权限 - > 键盘。\n\n申请审查服务机构可在服务申报中查询申请申请“android.permission.BIND_ACCESSIBITY_SERVICE”许可。 在Android上,用户可以查看和管理哪些应用程序可以通过无障碍设备设置使用无障碍服务. 精确的设备设置菜单位置可能因操作系统版本而异.",
    "SMS Control": "短消息控制",
    "Adversaries may delete, alter, or send SMS messages without user authorization. This could be used to hide C2 SMS messages, spread malware, or various external effects.\n\nThis can be accomplished by requesting the `RECEIVE_SMS` or `SEND_SMS` permissions depending on what the malware is attempting to do. If the app is set as the default SMS handler on the device, the `SMS_DELIVER` broadcast intent can be registered, which allows the app to write to the SMS content provider. The content provider directly modifies the messaging database on the device, which could allow malicious applications with this ability to insert, modify, or delete arbitrary messages on the device.(Citation: SMS KitKat)(Citation: Android SmsProvider)": "爱好者可以不经用户授权删除,更改或发送短消息. 这可用于隐藏C2短消息,传播恶意软件,或各种外部效果.\n\n根据恶意软件的企图,通过请求`RECEIVE_SMS ' 或`SEND_SMS ' 授权,可以做到这一点。 如果该应用程序被设定为设备上的默认短消息处理器,则可以注册‘SMS_DELIVER'的广播意向,这允许该应用程序向短消息内容提供者写入. 内容提供者直接修改设备上的邮件数据库,这可以允许具有这种能力的恶意应用程序在设备上插入,修改或删除任意消息. (citation:SMS KitKat) (citation:Android SmsProvider) (中文(简体) )",
    "Users can view the default SMS handler in system settings.": "用户可以在系统设置中查看默认的短消息处理器.",
    "An adversary could use knowledge of the techniques used by security software to evade detection(Citation: Brodie)(Citation: Tan). For example, some mobile security products perform compromised device detection by searching for particular artifacts such as an installed \"su\" binary, but that check could be evaded by naming the binary something else. Similarly, polymorphic code techniques could be used to evade signature-based detection(Citation: Rastogi).": "对手可以利用安全软件用于逃避检测的技术知识(Citation: Brodie)(Citation: Tan). 例如,一些移动安全产品通过搜索安装的\"Su\"二进制等特定文物来进行受损的设备检测,但通过给二进制命名其他东西来逃避检查. 同样,多态编码技术也可用于逃避基于签名的检测(Citation:Rastogi).",
    "Exfiltration Over Other Network Medium": "过滤到其他网络介质",
    "Adversaries may attempt to exfiltrate data over a different network medium than the command and control channel. If the command and control network is a standard Internet connection, the exfiltration may occur, for example, via Bluetooth, or another radio frequency (RF) channel. \n\nAdversaries may choose to do this if they have sufficient access or proximity, and the connection might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network. ": "爱好者可能试图通过一个不同于指令与控制通道的网络介质去过滤数据. 如果指令与控制网络是标准的互联网连接,则可能通过蓝牙,或者另一个无线电频率(RF)通道进行过滤.\n\n爱好者如果有足够的接入或接近,可能选择这样做,而且由于连接没有通过同一企业网络进行路由,因此可能无法确保或捍卫连接以及主要的互联网连接通道.",
    "Exfiltration over other network mediums can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversarial behavior.": "对其他网络介质的过滤可能难以发现,因此,企业在敌对行为的其他阶段可能会得到更好的服务,侧重于检测.",
    "Detect App Analysis Environment": "检测应用程序分析环境",
    "Process Injection": "注入过程",
    "Adversaries may inject code into processes in order to evade process-based defenses or even elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \n\nBoth Android and iOS have no legitimate way to achieve process injection. The only way this is possible is by abusing existing root access or exploiting a vulnerability.": "爱好者可能向进程注入代码,以逃避基于进程的防御甚至提升特权. 过程注入是在单独的活过程的地址空间中执行任意代码的一种方法. 在另一个进程背景下运行代码可能允许访问进程的内存,系统/网络资源,以及可能提升的特权. 通过流程注射执行也可能逃避安全产品检测,因为执行是在合法程序下蒙上面具的。\n\nAndroid和iOS都没有实现过程注射的合法途径. 这样做的唯一途径是滥用现有的根基准入或利用脆弱性.",
    "Malicious Software Development Tools": "恶意软件开发工具",
    "Symmetric Cryptography": "对称加密",
    "Adversaries may employ a known symmetric encryption algorithm to conceal command and control traffic, rather than relying on any inherent protections provided by a communication protocol. Symmetric encryption algorithms use the same key for plaintext encryption and ciphertext decryption. Common symmetric encryption algorithms include AES, Blowfish, and RC4.": "爱好者可能使用已知的对称加密算法来隐藏指挥和控制流量,而不是依赖通信协议提供的任何固有保护. 对称加密算法使用相同的密钥进行纯文本加密和密码解密. 常见的对称加密算法包括AES,Blowfish,以及RC4.",
    "An intent is a message passed between Android application or system components. Applications can register to receive broadcast intents at runtime, which are system-wide intents delivered to each app when certain events happen on the device, such as network changes or the user unlocking the screen. Malicious applications can then trigger certain actions within the app based on which broadcast intent was received.\n\nFurther, malicious applications can register for intents broadcasted by other applications in addition to the Android system itself. This allows the malware to respond based on actions in other applications. This behavior typically indicates a more intimate knowledge, or potentially the targeting of specific devices, users, or applications.\n\nIn Android 8 (API level 26), broadcast intent behavior was changed, limiting the implicit intents that applications can register for in the manifest. In most cases, applications that register through the manifest will no longer receive the broadcasts. Now, applications must register context-specific broadcast receivers while the user is actively using the app.(Citation: Android Changes to System Broadcasts)": "意图是Android应用程序或系统组件之间传递的信息. 应用程序可以在运行时间注册接收广播意向,这是当设备上发生某些事件时,如网络改变或用户解锁屏幕时,向每个应用发送的全系统意向. 恶意的应用程序随后可以触发应用程序内的某些行动,而根据这些行动收到了广播意图。\n\n此外,恶意应用程序除了Android系统本身之外,还可以注册其他应用程序广播的意图. 这使得恶意软件可以根据其他应用程序中的动作进行响应. 这种行为通常表明一种更为亲密的知识,或可能针对特定设备,用户,或应用程序.\n\n在Android 8(API第26级)中,广播意向行为被改变,限制了应用程序可以在运单中注册的隐含意向. 在大多数情况下,通过清单注册的申请将不再接受广播。 现在,应用程序必须注册特定上下文的广播接收器,同时用户正在积极使用该应用程序. (Citation: Android Change to System Broads)",
    "Broadcast intent receivers are part of standard OS-level APIs and are therefore typically undetectable to the end user.": "广播意向接收器是标准OS级API的一部分,因此一般无法被最终用户察觉.",
    "Compromise Hardware Supply Chain": "妥协硬件 供应链",
    "Adversaries may manipulate hardware components in products prior to receipt by a final consumer for the purpose of data or system compromise. By modifying hardware or firmware in the supply chain, adversaries can insert a backdoor into consumer networks that may be difficult to detect and give the adversary a high degree of control over the system. ": "为了数据或系统妥协的目的,逆客可能在最终消费者收到之前操纵产品中的硬件组件. 通过修改供应链中的硬件或固件,对手可以将后门插入可能难以发现的消费者网络,并给予对手对系统的高度控制.",
    "Integrity checking mechanisms can potentially detect unauthorized hardware modifications.": "诚信检查机制有可能发现未经授权的硬件修改.",
    "Clipboard Data": "剪贴板数据",
    "Adversaries may abuse clipboard manager APIs to obtain sensitive information copied to the device clipboard. For example, passwords being copied and pasted from a password manager application could be captured by a malicious application installed on the device.(Citation: Fahl-Clipboard) \n\n \n\nOn Android, applications can use the `ClipboardManager.OnPrimaryClipChangedListener()` API to register as a listener and monitor the clipboard for changes. However, starting in Android 10, this can only be used if the application is in the foreground, or is set as the device’s default input method editor (IME).(Citation: Github Capture Clipboard 2019)(Citation: Android 10 Privacy Changes) \n\n \n\nOn iOS, this can be accomplished by accessing the `UIPasteboard.general.string` field. However, starting in iOS 14, upon accessing the clipboard, the user will be shown a system notification if the accessed text originated in a different application. For example, if the user copies the text of an iMessage from the Messages application, the notification will read “application_name has pasted from Messages” when the text was pasted in a different application.(Citation: UIPPasteboard)": "爱好者可能会滥用剪贴板管理器API来获取复制到设备剪贴板的敏感信息. 例如,从密码管理器应用程序复制和粘贴的密码可能被安装在设备上的恶意应用程序捕获. (点击:Fahl-Clipboard).\n\n\n\n在Android上,应用程序可以使用“剪贴板管理器”。 API 以收听器注册并监视剪贴板的更改 。 然而,从Android 10开始,只有在应用程序处于前景时才能使用,或者设定为设备的默认输入法编辑器(IME). (简体中文:Github Crapping Clipboard 2019)(简体中文:Android 10 隐私变化)\n\n\n\n在iOS上,可以通过访问“UIPasteboard.general.string”字段来实现。 然而,从iOS 14开始,在访问剪贴板时,如果访问到的文本来源于不同的应用程序,用户将会显示一个系统通知. 例如,如果用户从Messages应用程序复制iMessage的文本,则当文本被粘贴在不同的应用程序中时,通知将改为“application_name has pasted from Messages” 。 (符号:UIPPasteboard)",
    "Application vetting services could detect usage of standard clipboard APIs.": "应用程序审查服务可以检测标准剪贴板API的使用.",
    "Modify System Partition": "修改系统分区",
    "If an adversary can escalate privileges, he or she may be able to use those privileges to place malicious code in the device system partition, where it may persist after device resets and may not be easily removed by the device user.\n\nMany Android devices provide the ability to unlock the bootloader for development purposes. An unlocked bootloader may provide the ability for an adversary to modify the system partition. Even if the bootloader is locked, it may be possible for an adversary to escalate privileges and then modify the system partition.": "如果对手可以升级权限,他(她)也许可以利用这些权限将恶意代码放置在设备系统分区中,在设备重置后它可能持续存在,并且可能不会被设备用户轻易移除.\n\n许多Android设备为开发目的提供了解锁引擎的能力. 一个未解锁的卸载机可能为对手提供修改系统分区的能力. 即使启动器被锁定,对手也可能升级权限,然后修改系统分区.",
    "Android devices with the Verified Boot capability (Citation: Android-VerifiedBoot) perform cryptographic checks of the integrity of the system partition.\n\nThe Android SafetyNet API's remote attestation capability could potentially be used to identify and respond to compromised devices.\n\nSamsung KNOX also provides a remote attestation capability on supported Samsung Android devices.\n\niOS devices will fail to boot or fail to allow device activation if unauthorized modifications are detected.(Citation: Apple-iOSSecurityGuide)": "具有验证靴能力的Android设备(Citation:Android-VerifedBoot)对系统分区的完整性进行加密检查.\n\n机器人安全 Net API的远程验证能力有可能被用于识别和应对受损设备.\n\nSamsung KNOX还为支持的三星Android设备提供远程验证能力.\n\n如果检测到未经授权的修改,iOS设备将无法启动或无法允许设备启动. (网易:苹果-iOS安全指南)",
    "Data Manipulation": "数据操纵",
    "Adversaries may insert, delete, or alter data in order to manipulate external outcomes or hide activity. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n\nThe type of modification and the impact it will have depends on the target application, process, and the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system, typically gained through a prolonged information gathering campaign, in order to have the desired impact.": "不良因素可能插入、删除或更改数据,以便操纵外部结果或隐藏活动。 通过操纵数据,对手可能试图影响业务流程、组织理解或决策。\n\n修改的类型及其影响取决于目标应用、过程以及对手的目标和宗旨。 对于复杂的系统,敌对者可能需要特殊的专门知识,并可能获得与系统有关的专门软件,这些软件通常是通过长期的信息收集活动获得的,以便产生预期的效果.",
    "Application vetting services could look for use of standard APIs (e.g. the clipboard API) that could indicate data manipulation is occurring.": "应用程序审查服务可以寻找标准API(例如剪贴板API)的使用,该API可以表明数据正在被操纵.",
    "SMS Messages": "简讯 信件",
    "Adversaries may utilize standard operating system APIs to gather SMS messages. On Android, this can be accomplished using the SMS Content Provider. iOS provides no standard API to access SMS messages. \n\nIf the device has been jailbroken or rooted, an adversary may be able to access [SMS Messages](https://attack.mitre.org/techniques/T1636/004) without the user’s knowledge or approval. ": "爱好者可能利用标准操作系统API来收集短消息. 在Android上,可以使用短消息内容提供器实现. iOS没有提供标准API来访问短消息.\n\n如果该装置已被监禁或根植,对手可以在用户不知情或未经用户批准的情况下访问[短信](https://sattack.mitre.org/techniques/T1636/004).",
    "On Android, the user can manage which applications have permission to access SMS messages through the device settings screen, revoking the permission if necessary. Application vetting services could look for `android.permission.READ_SMS` in an Android application’s manifest. Most applications do not need access to SMS messages, so extra scrutiny could be applied to those that request it. ": "在Android上,用户可以管理哪些应用程序有权限通过设备设置屏幕访问短消息,必要时取消权限. 申请审查服务可在Android申请表中查找`android.permission.READ_SMS ' 。 大多数应用程序不需要访问短消息,因此可以对请求者进行额外审查.",
    "Web Service": "网络服务",
    "Adversaries may use an existing, legitimate external Web service as a means for relaying data to/from a compromised system. Popular websites and social media, acting as a mechanism for C2, may give a significant amount of cover. This is due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection. \n\n \n\nUse of Web services may also protect back-end C2 infrastructure from discovery through malware binary analysis, or enable operational resiliency (since this infrastructure may be dynamically changed). \n\n ": "爱好者可能使用现有的、合法的外部 网络服务,作为向/从一个受损的系统转发数据的手段。 大众网站和社交媒体作为C2的机制,可能会提供大量的封面. 这是因为一个网络内的主机有可能在妥协之前就已经与它们通信. 使用Google或Twitter等共同服务, 网络服务提供商通常使用SSL/TLS加密,给予对手额外的保护级别.\n\n\n\n使用Web服务也可能通过恶意软件二进制分析来保护后端的C2基础设施不被发现,或者可以使操作恢复力(因为这种基础设施可能会被动态改变).\n\n.",
    "System Runtime API Hijacking": "系统运行时间 API 劫持",
    "Adversaries may execute their own malicious payloads by hijacking the way an operating system runs applications. Hijacking execution flow can be for the purposes of persistence since this hijacked execution may reoccur at later points in time. \n\n\nOn Android, adversaries may overwrite the standard OS API library with a malicious alternative to hook into core functions to achieve persistence. By doing this, the adversary’s code will be executed every time the overwritten API function is called by an app on the infected device.": "爱好者可能通过劫持操作系统运行应用程序的方式来实施自己的恶意有效载荷. 劫持行刑流量可能是为了持久,因为这种被劫持行刑可能再次出现在以后。\n\n\n在Android上,对手可能会用一个恶意的替代物来覆盖标准OS API库,从而钩入核心功能来实现持久性. 通过这样做,每当被覆盖的API功能被一个app在被感染的设备上调用时,对手的代码都会被执行.",
    "Mobile threat defense agents could detect unauthorized operating system modifications by using attestation. ": "移动威胁防御剂可以通过使用证明来检测未经授权的操作系统修改.",
    "Exploit Baseband Vulnerability": "勘探基带脆弱性",
    "Credentials from Password Store": "密码存储的证书",
    "Adversaries may search common password storage locations to obtain user credentials. Passwords can be stored in several places on a device, depending on the operating system or application holding the credentials. There are also specific applications that store passwords to make it easier for users to manage and maintain. Once credentials are obtained, they can be used to perform lateral movement and access restricted information.": "爱好者可能搜索常见的密码存储位置以获得用户证书. 密码可以存放在一个设备上的几个地方,这取决于持有证书的操作系统或应用程序. 也有特定的应用程序存储密码,以便于用户管理和维护. 一旦获得全权证书,即可用于横向移动和查阅受限制的信息.",
    "Hooking": "钩子",
    "Adversaries may utilize hooking to hide the presence of artifacts associated with their behaviors to evade detection. Hooking can be used to modify return values or data structures of system APIs and function calls. This process typically involves using 3rd party root frameworks, such as Xposed or Magisk, with either a system exploit or pre-existing root access. By including custom modules for root frameworks, adversaries can hook system APIs and alter the return value and/or system data structures to alter functionality/visibility of various aspects of the system.": "爱好者可能利用钩子来隐藏与其行为相关的文物的存在来逃避检测. Hooking可用于修改系统API和函数调用的返回值或数据结构. 这一过程通常涉及使用第3党根框架,如Xposed或Magisk,同时利用系统或先前存在的根接入。 通过为根框架添加自定义模块,对手可以勾结系统API,并改变返回值和(或)系统数据结构,以改变系统各个方面的功能/可见性.",
    "Hooking can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversarial behavior.": "钩子可能难以发现,因此,企业在对抗行为的其他阶段可能得到更好的重点检测.",
    "Install Insecure or Malicious Configuration": "安装不安全或恶意配置",
    "An adversary could attempt to install insecure or malicious configuration settings on the mobile device, through means such as phishing emails or text messages either directly containing the configuration settings as an attachment, or containing a web link to the configuration settings. The device user may be tricked into installing the configuration settings through social engineering techniques (Citation: Symantec-iOSProfile).\n\nFor example, an unwanted Certification Authority (CA) certificate could be placed in the device's trusted certificate store, increasing the device's susceptibility to adversary-in-the-middle network attacks seeking to eavesdrop on or manipulate the device's network communication ([Eavesdrop on Insecure Network Communication](https://attack.mitre.org/techniques/T1439) and [Manipulate Device Communication](https://attack.mitre.org/techniques/T1463)).\n\nOn iOS, malicious Configuration Profiles could contain unwanted Certification Authority (CA) certificates or other insecure settings such as unwanted proxy server or VPN settings to route the device's network traffic through an adversary's system. The device could also potentially be enrolled into a malicious Mobile Device Management (MDM) system (Citation: Talos-MDM).": "对手可以试图在移动设备上安装不安全或恶意的配置设置,其方式可以是直接包含配置设置作为附件,或者包含与配置设置的网络链接的Filshing电子邮件或短信. 设备用户可能通过社会工程技术(Citation:Symantec-iOSProfile)被骗去安装配置设置.\n\n例如,可以将不想要的认证局证书放在设备的可信赖的证书库中,使设备更容易受到试图窃听或操纵设备网络通信的中层网络攻击([关于不安全网络通信的窃听](https://sattack.mitre.org/techniques/T1439)和[管理设备通信](https://sattack.mitre.org/techniques/T1463)。\n\n在iOS上,恶意配置配置配置可以包含不想要的验证局证书(CA)或其他不安全的设置,如不想要的代理服务器或VPN设置,以通过对手的系统来引导设备的网络流量. 该设备也可能被录入恶意移动设备管理系统(Citation: Talos-MDM).",
    "On Android, the user can view trusted CA certificates through the device settings and look for unexpected certificates. A mobile security product could similarly examine the trusted CA certificate store for anomalies.\n\nOn iOS, the user can view installed Configuration Profiles through the device settings and look for unexpected profiles. A Mobile Device Management (MDM) system could use the iOS MDM APIs to examine the list of installed Configuration Profiles for anomalies.": "在Android上,用户可以通过设备设置查看信任的CA证书,并寻找出乎意料的证书. 一个移动安全产品同样可以检查可信赖的CA证书商店的异常情况.\n\n在iOS上,用户可以通过设备设置查看已安装的配置配置配置文件,并查找意外配置. 一个移动设备管理系统(MDM)可以使用iOS MDM API来检查已安装的配置配置配置的异常列表.",
    "File and Directory Discovery": "文件和目录发现",
    "Adversaries may enumerate files and directories or search in specific device locations for desired information within a filesystem. Adversaries may use the information from [File and Directory Discovery](https://attack.mitre.org/techniques/T1420) during automated discovery to shape follow-on behaviors, including deciding if the adversary should fully infect the target and/or attempt specific actions. \n\nOn Android, Linux file permissions and SELinux policies typically stringently restrict what can be accessed by apps without taking advantage of a privilege escalation exploit. The contents of the external storage directory are generally visible, which could present concerns if sensitive data is inappropriately stored there. iOS's security architecture generally restricts the ability to perform any type of [File and Directory Discovery](https://attack.mitre.org/techniques/T1420) without use of escalated privileges. ": "爱好者可以列举文件和目录,或在特定设备位置搜索文件系统内的所需信息. 逆袭者在自动发现时可以使用[File and Directory Discovery](https://sattack.mitre.org/techniques/T1420)的信息来塑造后续行为,包括决定对手是否应该完全感染目标并(或)尝试具体行动.\n\n在Android上,Linux文件权限和SELinux政策通常严格限制应用程序可以访问的内容,而不利用特权升级的利用. 外部存储目录的内容一般是可见的,如果敏感数据不适当地储存在那里,可能会引起关切。 iOS的安全架构一般限制在不使用升级权限的情况下执行任何类型的[File and Directory Discovery](https://sattack.mitre.org/techniques/T1420)的能力.",
    "On Android, users are presented with a permissions popup when an application requests access to external device storage.": "在Android上,当应用程序请求访问外部设备存储时,用户会获得弹出权限.",
    "Obfuscated Files or Information": "过时的文件或信息",
    "Adversaries may attempt to make a payload or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the device or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \n \nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Portions of files can also be encoded to hide the plaintext strings that would otherwise help defenders with discovery. Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled.(Citation: Microsoft MalLockerB) ": "不良者可能试图通过加密、编码或以其他方式混淆设备或过境中的内容,使有效载荷或文件难以发现或分析。 这是一种常见的行为,可以跨越不同的平台和网络来逃避防御.\n\n有效载荷可以压缩,存档或加密,以避免检测. 这些有效载荷可在初次进入时或以后用于减缓探测。 部分文件也可以编码,以隐藏原本会帮助维权者发现的纯文本字符串. 有效载荷也可能被拆分为单独的,看似良性的文件,它们只有在重新组装时才会揭示恶意功能. (点击:微软MalLockerB)",
    "Dynamic analysis, when used in application vetting, may in some cases be able to identify malicious code in obfuscated or encrypted form by detecting the code at execution time (after it is deobfuscated or decrypted). Some application vetting techniques apply reputation analysis of the application developer and can alert to potentially suspicious applications without actual examination of application code.": "动态分析,在应用程序审查中使用时,在某些情况下,可能可以通过在执行时(在解密或解密之后)检测代码,从而识别出模糊或加密形式的恶意代码. 一些应用审查技术应用了应用开发商的声誉分析,可以在没有实际审查应用代码的情况下对潜在的可疑应用进行警觉.",
    "Input Injection": "输入注入",
    "A malicious application can inject input to the user interface to mimic user interaction through the abuse of Android's accessibility APIs.\n\n[Input Injection](https://attack.mitre.org/techniques/T1516) can be achieved using any of the following methods:\n\n* Mimicking user clicks on the screen, for example to steal money from a user's PayPal account.(Citation: android-trojan-steals-paypal-2fa)\n* Injecting global actions, such as `GLOBAL_ACTION_BACK` (programatically mimicking a physical back button press), to trigger actions on behalf of the user.(Citation: Talos Gustuff Apr 2019)\n* Inserting input into text fields on behalf of the user. This method is used legitimately to auto-fill text fields by applications such as password managers.(Citation: bitwarden autofill logins)": "一个恶意应用程序可以通过滥用Android的无障碍API,向用户界面注入输入以模仿用户互动.\n\n[投入注射](https://sattack.mitre.org/techniques/T1516)可以使用下列任何一种方法实现:\n\n*模仿用户点击屏幕,例如从用户的PayPal账户中偷钱。 (citation: android-trojan-steals-paypal-2fa)\n* 注入全球行动,例如 \" GLOBAL_ACTION_BACK \" (偏似物理后按键),以代表用户触发行动。 (城镇:Talos Gustuff Apr 2019年4月)\n* 代表用户向文本字段插入输入。 这种方法被密码管理器等应用程序合法用于自动填充文本字段. (Citation: bitwarden 自动填充登录)",
    "Users can view applications that have registered accessibility services in the accessibility menu within the device settings.": "用户可以在设备设置内的无障碍菜单中查看已注册无障碍服务的应用程序.",
    "Network Denial of Service": "拒绝服务网络",
    "Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth that services rely on, or by jamming the signal going to or coming from devices. \n\nA Network DoS will occur when an adversary is able to jam radio signals (e.g. Wi-Fi, cellular, GPS) around a device to prevent it from communicating. For example, to jam cellular signal, an adversary may use a handheld signal jammer, which jam devices within the jammer’s operational range.(Citation: NIST-SP800187) \n\nUsage of cellular jamming has been documented in several arrests reported in the news.(Citation: CNET-Celljammer)(Citation: NYTimes-Celljam)(Citation: Digitaltrends-Celljam)(Citation: Arstechnica-Celljam)": "逆客可能进行网络拒绝服务(DoS)攻击,以降低或阻止用户获得目标资源。 网络DoS可以通过耗尽服务所依赖的网络带宽来完成,也可以通过干扰连接或来自设备的信号来完成.\n\n当对手能够将无线电信号(如Wi-Fi,蜂窝,GPS)干扰到设备周围以防止其通信时,就会发生网络DoS. 例如,为了干扰蜂窝信号,对手可能使用手持信号干扰器,这种干扰器装置在干扰器的操作范围内. (编号:NIST-SP800187)\n\n在新闻报道的几起逮捕中记录了使用手机干扰的情况。 (简体中文:CNET-Celljammer) (简体中文:NYTimes-Celljam) (简体中文:数字趋势-Celljam) (简体中文:Arstechnica-Celljam)",
    "Unexpected loss of radio signal could indicate that a device is being actively jammed.": "无线电信号的意外损失可能表明一个设备被主动卡住.",
    "Compromise Application Executable": "妥协应用程序可执行文件",
    "Adversaries may modify applications installed on a device to establish persistent access to a victim. These malicious modifications can be used to make legitimate applications carry out adversary tasks when these applications are in use.\n\nThere are multiple ways an adversary can inject malicious code into applications. One method is by taking advantages of device vulnerabilities, the most well-known being Janus, an Android vulnerability that allows adversaries to add extra bytes to APK (application) and DEX (executable) files without affecting the file's signature. By being able to add arbitrary bytes to valid applications, attackers can seamlessly inject code into genuine executables without the user's knowledge.(Citation: Guardsquare Janus)\n\nAdversaries may also rebuild applications to include malicious modifications. This can be achieved by decompiling the genuine application, merging it with the malicious code, and recompiling it.(Citation: CheckPoint Agent Smith)\n\nAdversaries may also take action to conceal modifications to application executables and bypass user consent. These actions include altering modifications to appear as an update or exploiting vulnerabilities that allow activities of the malicious application to run inside a system application.(Citation: CheckPoint Agent Smith)": "爱好者可能修改安装在设备上的应用程序,以确定持续接触受害者。 这些恶意修改可用于使正当的应用程序在被使用时执行对手任务.\n\n对手可以多种方式向应用程序注入恶意代码. 一种方法是利用设备弱点的优势,最著名的是Janus,一种Android弱点,它允许对手在不影响文件签名的情况下,在APK(应用)和DEX(可执行)文件中添加额外的字节. 通过能够在有效的应用程序中添加任意字节,攻击者可以在用户不知情的情况下无缝地将代码注入真正的可执行文件. (歌词: Guardsquare Janus).\n\n爱好者也可能重建应用程序,以包括恶意修改. 这可以通过拆解真应用程序,将其与恶意代码合并,重新编译来实现. (点击: 检查点特工史密斯)\n\n爱好者也可能采取行动,隐瞒对应用程序可执行文件的修改并绕过用户同意. 这些行动包括改变修改以显示为更新或利用允许恶意应用程序的活动在系统应用程序内运行的脆弱性。 (点击: 检查点特工史密斯)",
    "This behavior is seamless to the user and is typically undetectable.": "这种行为对用户来说是无缝的,一般是无法察觉的.",
    "Event Triggered Execution": "事件触发执行",
    "Adversaries may establish persistence using system mechanisms that trigger execution based on specific events. Mobile operating systems have means to subscribe to events such as receiving an SMS message, device boot completion, or other device activities. \n\nAdversaries may abuse these mechanisms as a means of maintaining persistent access to a victim via automatically and repeatedly executing malicious code. After gaining access to a victim’s system, adversaries may create or modify event triggers to point to malicious content that will be executed whenever the event trigger is invoked. ": "对抗者可能利用系统机制确定持久性,这种机制根据具体事件触发执行。 移动操作系统拥有订阅事件的手段,如接收短信,设备靴补全,或其他设备活动.\n\n敌对者可能滥用这些机制,通过自动和反复执行恶意代码来维持对受害者的持续接触。 在进入受害者系统后,对手可能创造或修改事件触发器,以指向每当援引事件触发器时都会执行的恶意内容.",
    "System Network Configuration Discovery": "系统网络配置发现",
    "Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of operating systems they access or through information discovery of remote systems. \n\n \n\nOn Android, details of onboard network interfaces are accessible to apps through the `java.net.NetworkInterface` class.(Citation: NetworkInterface) Previously, the Android `TelephonyManager` class could be used to gather telephony-related device identifiers, information such as the IMSI, IMEI, and phone number. However, starting with Android 10, only preloaded, carrier, the default SMS, or device and profile owner applications can access the telephony-related device identifiers.(Citation: TelephonyManager) \n\n \n\nOn iOS, gathering network configuration information is not possible without root access. \n\n \n\nAdversaries may use the information from [System Network Configuration Discovery](https://attack.mitre.org/techniques/T1422) during automated discovery to shape follow-on behaviors, including determining certain access within the target network and what actions to do next. ": "爱好者可能寻找其访问或通过远程系统信息发现的操作系统的网络配置和设置的细节,如IP和/或MAC地址.\n\n\n\n在Android上,通过‘java.net'的应用程序可以访问机载网络接口的细节. NetworkInterface class. (Citation: NetworkInterface) 此前,Android `Telephone Manager ' class可以用于收集电话相关设备识别符,IMSI,IMEI等信息和电话号码. 然而,从Android 10开始,只有预装,载体,默认短消息,或设备及配置文件所有者应用程序可以访问与电话相关的设备标识符. (网易:电话管理员).\n\n\n\n在iOS上,没有root访问就无法收集网络配置信息.\n\n\n\n逆行者可能在自动发现时使用[系统网络配置发现](https://sattack.mitre.org/techniques/T1422)的信息来塑造后续行为,包括确定目标网络内部的某些访问权限以及下一步要做什么行动.",
    "Application vetting services could look for usage of the `READ_PRIVILEGED_PHONE_STATE` Android permission. This could indicate that non-system apps are attempting to access information that they do not have access to.": "应用程序审查服务可查询使用`READ_PRIVILEGED_电话_STATE ' Android许可。 这可能表明非系统应用正在试图获取他们无法获取的信息.",
    "Manipulate Device Communication": "操纵设备通信",
    "If network traffic between the mobile device and a remote server is not securely protected, then an attacker positioned on the network may be able to manipulate network communication without being detected. For example, FireEye researchers found in 2014 that 68% of the top 1,000 free applications in the Google Play Store had at least one Transport Layer Security (TLS) implementation vulnerability potentially opening the applications' network traffic to adversary-in-the-middle attacks (Citation: FireEye-SSL).": "如果移动设备与远程服务器之间的网络流量得不到安全保护,那么部署在网络上的攻击者就可以在不被发现的情况下操纵网络通信. 例如,FireEye研究者在2014年发现,Google Play Store中前1000个免费应用中,有68%的应用至少有一种运输层安全(TLS)执行弱点,有可能将应用程序的网络流量打开给中途的对手(Citation:FireEye-SSL).",
    "Video Capture": "视频抓取",
    "An adversary can leverage a device’s cameras to gather information by capturing video recordings. Images may also be captured, potentially in specified intervals, in lieu of video files.  \n\n \n\nMalware or scripts may interact with the device cameras through an available API provided by the operating system. Video or image files may be written to disk and exfiltrated later. This technique differs from [Screen Capture](https://attack.mitre.org/techniques/T1513) due to use of the device’s cameras for video recording rather than capturing the victim’s screen. \n\n \n\nIn Android, an application must hold the `android.permission.CAMERA` permission to access the cameras. In iOS, applications must include the `NSCameraUsageDescription` key in the `Info.plist` file. In both cases, the user must grant permission to the requesting application to use the camera. If the device has been rooted or jailbroken, an adversary may be able to access the camera without knowledge of the user.  ": "敌人可以通过拍摄录像来利用设备的摄像头收集信息。 也可以捕捉图像,可能在特定的间隔内,代替视频文件.\n\n\n\nMalware或脚本可以通过操作系统提供的可用的API与设备相机相互作用. 视频或图像文件可能会被写入磁盘,并在稍后被过滤出来. 这一技术不同于[Screen Capture](https://sattack.mitre.org/techniques/T1513),因为使用该设备的摄像头进行录像,而不是捕获受害者的屏幕。\n\n\n\n在Android中,申请必须持有`android.permission. CAMERA允许进入摄像头。 在iOS中,应用程序必须在`Info.plist ' 文件中列入`NSCameraUsageDescription ' 密钥。 在这两种情况下,用户必须准许请求的应用程序使用相机. 如果该设备已经扎根或断裂,对手可能在用户不知情的情况下访问摄像机.",
    "The user can view which applications have permission to use the camera through the device settings screen, where the user can then choose to revoke the permissions. During the vetting process, applications using the Android permission `android.permission.CAMERA`, or the iOS `NSCameraUsageDescription` plist entry could be given closer scrutiny. ": "用户可以通过设备设置屏幕查看哪些应用程序有权限使用相机,然后用户可以选择取消权限. 在审查过程中,申请使用Android许可`android.permission。 CAMERA \" 或iOS \" NSCameraUsage Description \" 列表条目可以进行更仔细的审查.",
    "One-Way Communication": "一维通讯",
    "Adversaries may use an existing, legitimate external Web service channel as a means for sending commands to a compromised system without receiving return output. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems may opt to send the output from those commands back over a different C2 channel, including to another distinct Web service. Alternatively, compromised systems may return no output at all in cases where adversaries want to send instructions to systems and do not want a response. \n\n \n\nPopular websites and social media, acting as a mechanism for C2, may give a significant amount of cover. This is due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection. ": "爱好者可能使用现有的、合法的外部 网络服务频道作为向不接收返回输出的已损坏系统发送命令的手段. 妥协的系统可能利用流行网站和社交媒体来主持指挥和控制(C2)指令. 这些受感染的系统可能选择将这些命令的输出发回不同的C2频道,包括发回另一个独特的Web服务。 或者,如果对手想向系统发送指令,而不需要答复,受损的系统可能根本不返回输出。\n\n\n\n大众网站和社交媒体作为C2的机制,可能会提供大量的封面. 这是因为一个网络内的主机有可能在妥协之前就已经与它们通信. 使用Google或Twitter等共同服务, 网络服务提供商通常使用SSL/TLS加密,给予对手额外的保护级别.",
    "Deliver Malicious App via Authorized App Store": "通过授权的 App Store 交付恶意应用程序",
    "Malicious applications are a common attack vector used by adversaries to gain a presence on mobile devices. Mobile devices often are configured to allow application installation only from an authorized app store (e.g., Google Play Store or Apple App Store). An adversary may seek to place a malicious application in an authorized app store, enabling the application to be installed onto targeted devices.\n\nApp stores typically require developer registration and use vetting techniques to identify malicious applications. Adversaries may use these techniques against app store defenses:\n\n* [Download New Code at Runtime](https://attack.mitre.org/techniques/T1407)\n* [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1406)\n\nAdversaries may also seek to evade vetting by placing code in a malicious application to detect whether it is running in an app analysis environment and, if so, avoid performing malicious actions while under analysis. (Citation: Petsas) (Citation: Oberheide-Bouncer) (Citation: Percoco-Bouncer) (Citation: Wang)\n\nAdversaries may also use fake identities, payment cards, etc., to create developer accounts to publish malicious applications to app stores. (Citation: Oberheide-Bouncer)\n\nAdversaries may also use control of a target's Google account to use the Google Play Store's remote installation capability to install apps onto the Android devices associated with the Google account. (Citation: Oberheide-RemoteInstall) (Citation: Konoth) (Only applications that are available for download through the Google Play Store can be remotely installed using this technique.)": "恶意应用是一种常见的攻击矢量,被对手用来获取移动设备的存在. 移动设备的配置往往只允许从授权的应用商店(如Google Play Store或App Store)安装应用程序. 对手可能寻求将恶意应用程序放置在授权的应用商店中,使应用程序能够安装到目标设备上.\n\nApp商店一般要求开发商注册和使用审查技术来识别恶意申请. 爱好者可能会用这些技术来对抗应用商店的防御:\n\n* [运行时下载新代码](https://sattack.mitre.org/techniques/T1407)\n* [失效文件或资料](https://state.mitre.org/techniques/T1406)\n\n不良者还可能试图逃避审查,在恶意应用程序中设置代码,以检测它是否在应用分析环境中运行,如果是的话,在分析过程中避免实施恶意行为. (简体中文:Petsas) (简体中文:Oberheide-Bouncer) (简体中文:Percoco-Bouncer) (简体中文:Wang)\n\n爱好者还可以使用假身份,支付卡等手段创建开发者账户,发布恶意应用软件商店. (英文:Oberheide-Bouncer).\n\n爱好者还可能利用对目标Google账户的控制,利用Google Play Store的远程安装能力,在与Google账户相关的Android设备上安装应用程序. (英文:Oberheide-RemoteInstall)(英文:Konoth). (只有通过Google Play Store可以下载的应用程序才能使用这一技术远程安装)",
    "* An EMM/MDM or mobile threat defense solution can identify the presence of unwanted or known insecure or malicious apps on devices.\n* Developers can scan (or have a third party scan on their behalf) the app stores for presence of unauthorized apps that were submitted using the developer's identity.": "* EMM/MDM或移动威胁防御解决方案可以识别设备上是否存在不想要或已知的不安全或恶意应用.\n*开发者可以代表他们扫描(或有第三方扫描)应用商店,以发现使用开发者身份提交的未经授权的应用.",
    "Data Encrypted for Impact": "为撞击加密的数据",
    "An adversary may encrypt files stored on a mobile device to prevent the user from accessing them. This may be done in order to extract monetary compensation from a victim in exchange for decryption or a decryption key (ransomware) or to render data permanently inaccessible in cases where the key is not saved or transmitted.": "对手可以加密存储在移动设备上的文件,以防止用户访问. 这样做可能是为了从受害人那里获取金钱赔偿,以换取解密或解密密钥(ransomware),或者在密钥未保存或传输的情况下使数据永久无法访问.",
    "Application vetting services may be able to detect if an application attempts to encrypt files, although this may be benign behavior.": "申请审查服务可能能够发现申请试图加密文件,尽管这可能是良性行为.",
    "Prevent Application Removal": "防止应用",
    "Adversaries may abuse the Android device administration API to prevent the user from uninstalling a target application. In earlier versions of Android, device administrator applications needed their administration capabilities explicitly deactivated by the user before the application could be uninstalled. This was later updated so the user could deactivate and uninstall the administrator application in one step.\n\nAdversaries may also abuse the device accessibility APIs to prevent removal. This set of APIs allows the application to perform certain actions on behalf of the user and programmatically determine what is being shown on the screen. The malicious application could monitor the device screen for certain modals (e.g., the confirmation modal to uninstall an application) and inject screen input or a back button tap to close the modal. For example, Android's `performGlobalAction(int)` API could be utilized to prevent the user from removing the malicious application from the device after installation. If the user wants to uninstall the malicious application, two cases may occur, both preventing the user from removing the application.\n\n* Case 1: If the integer argument passed to the API call is `2` or `GLOBAL_ACTION_HOME`, the malicious application may direct the user to the home screen from settings screen \n\n* Case 2: If the integer argument passed to the API call is `1` or `GLOBAL_ACTION_BACK`, the malicious application may emulate the back press event ": "爱好者可能会滥用Android设备管理API来阻止用户卸载一个目标应用程序. 在早期版本的Android中,设备管理员应用程序需要其管理能力被用户明确解除,然后该应用程序才能解除安装. 这后来被更新,以便用户可以停用并解开管理员应用程序的一步.\n\n不良者还可能滥用设备可访问性API来防止移除. 这套API允许应用程序代表用户执行某些动作,并在程序上决定屏幕上显示的内容. 恶意应用程序可以监视设备屏幕的某些模式(例如,用于解开应用程序的确认模式),并注入屏幕输入或后扣水龙头以关闭模式. 例如,Android的“绩效全球行动(int)” API可用于防止用户在安装后从设备中移除恶意应用程序. 如果用户想要解禁恶意应用程序,则可能发生两起案例,两者都阻止用户删除应用程序.\n\n* 案例1:如果向API呼叫传递的整数参数是`2'或`GLOBAL_ACTION_HOME',恶意应用程序可能从设置屏幕引导用户到主屏幕\n\n* 案例2:如果向API呼叫传递的整数参数是`1'或`GLOBAL_ACTION_BACK',恶意应用程序可能会模仿后方的新闻事件",
    "Users can view a list of device administrators and applications that have registered accessibility services in device settings. Users can typically visually see when an action happens that they did not initiate and can subsequently review installed applications for any out of place or unknown ones. Applications that register an accessibility service or request device administrator permissions should be scrutinized further for malicious behavior.": "用户可以查看在设备设置中注册了无障碍服务的设备管理员和应用程序列表. 用户通常可以在视觉上看到,当一个行动发生时,他们没有启动,随后可以审查已安装的应用程序,用于任何不到位或未知的应用程序。 注册无障碍服务或请求设备管理员许可的应用程序,应当进一步审查恶意行为.",
    "System Network Connections Discovery": "系统网络连接发现",
    "Adversaries may attempt to get a listing of network connections to or from the compromised device they are currently accessing or from remote systems by querying for information over the network. \n\n \n\nThis is typically accomplished by utilizing device APIs to collect information about nearby networks, such as Wi-Fi, Bluetooth, and cellular tower connections. On Android, this can be done by querying the respective APIs: \n\n \n\n* `WifiInfo` for information about the current Wi-Fi connection, as well as nearby Wi-Fi networks. Querying the `WiFiInfo` API requires the application to hold the `ACCESS_FINE_LOCATION` permission. \n\n* `BluetoothAdapter` for information about Bluetooth devices, which also requires the application to hold several permissions granted by the user at runtime. \n\n* For Android versions prior to Q, applications can use the `TelephonyManager.getNeighboringCellInfo()` method. For Q and later, applications can use the `TelephonyManager.getAllCellInfo()` method. Both methods require the application hold the `ACCESS_FINE_LOCATION` permission.": "爱好者可能试图通过在网络上查询信息,从它们目前访问的或从远程系统获取网络连接清单。\n\n\n\n这通常是通过利用设备API来收集附近网络的信息,例如Wi-Fi、蓝牙和蜂窝塔连接。 在Android上,可以通过查询相应的API来实现:\n\n\n\n* \" WifiInfo \" ,用于了解当前Wi-Fi连接以及附近的Wi-Fi网络。 查询`WiFiInfo ' API要求申请持有`ACCESS_FINE_LOCATION ' 许可。\n\n* \" 蓝牙Adapter \" 用于提供蓝牙设备的信息,这也要求申请持有用户在运行时给予的几项权限。\n\n* 对于Q之前的Android版本,应用程序可以使用‘TelephonyManager.getNeighbiringCellInfo'方法. 对于Q和以后,应用程序可以使用`TelephonyManager.getAllCellInfo'方法。 这两种方法都要求申请持有`ACCESS_FINE_LOCATION ' 许可.",
    "System Network Connections Discovery can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversarial behavior.": "系统网络连接 发现可能是难以发现的,因此,企业在对抗行为的其他阶段可能更能得到侧重于发现的帮助.",
    "Phishing": "Ish",
    "Adversaries may send malicious content to users in order to gain access to their mobile devices. All forms of phishing are electronically delivered social engineering. Adversaries can conduct both non-targeted phishing, such as in mass malware spam campaigns, as well as more targeted phishing tailored for a specific individual, company, or industry, known as “spearphishing”.  Phishing often involves social engineering techniques, such as posing as a trusted source, as well as evasion techniques, such as removing or manipulating emails or metadata/headers from compromised accounts being abused to send messages.\n\nMobile phishing may take various forms. For example, adversaries may send emails containing malicious attachments or links, typically to deliver and then execute malicious code on victim devices. Phishing may also be conducted via third-party services, like social media platforms.  \n\nMobile devices are a particularly attractive target for adversaries executing phishing campaigns.  Due to their smaller form factor than traditional desktop endpoints, users may not be able to notice minor differences between genuine and phishing websites. Further, mobile devices have additional sensors and radios that allow adversaries to execute phishing attempts over several different vectors, such as: \n\n- SMS messages: Adversaries may send SMS messages (known as “smishing”) from compromised devices to potential targets to convince the target to, for example, install malware, navigate to a specific website, or enable certain insecure configurations on their device.\n- Quick Response (QR) Codes: Adversaries may use QR codes (known as “quishing”) to redirect users to a phishing website. For example, an adversary could replace a legitimate public QR Code with one that leads to a different destination, such as a phishing website. A malicious QR code could also be delivered via other means, such as SMS or email. In the latter case, an adversary could utilize a malicious QR code in an email to pivot from the user’s desktop computer to their mobile device.\n- Phone Calls: Adversaries may call victims (known as “vishing”) to persuade them to perform an action, such as providing login credentials or navigating to a malicious website. This could also be used as a technique to perform the initial access on a mobile device, but then pivot to a computer/other network by having the victim perform an action on a desktop computer.\n": "爱好者可能会向用户发送恶意内容,以获取他们的移动设备. 各种形式的钓鱼都是以电子方式提供的社会工程。 爱好者既可以从事非目标性钓鱼,例如在大规模恶意软件垃圾邮件运动中,也可以针对特定个人、公司或行业进行更有针对性的钓鱼,称为“钓鱼”。 Phishing往往涉及社会工程技术,如假扮为可信赖的来源,以及逃逸技术,如从被滥用的受损账户中移除或操纵邮件或元数据/标题来发送消息.\n\n移动钓鱼的形式可能多种多样。 例如,对手可能发送包含恶意附件或链接的电子邮件,通常用于发送并在受害人设备上执行恶意代码. 幽灵也可以通过第三方服务进行,比如社交媒体平台.\n\n移动设备对于实施钓鱼活动的对手来说是一个特别有吸引力的目标。 由于其形式因素比传统的桌面端点小,用户可能无法注意到真人网站和钓鱼网站之间的细微差异. 此外,移动设备还有额外的传感器和收音机,使对手能够在几个不同的载体上进行钓鱼尝试,例如:\n\n- 短消息: 爱好者可能从受损设备向潜在目标发送短信(称为“闪烁”),以说服目标安装恶意软件,导航到特定网站,或允许设备上的某些不安全配置。\n- 快速反应编码: 爱好者可能使用QR代码(称为\"quishing\")将用户重定向到钓鱼网站. 例如,敌方可以将合法的公共QR码替换成通往不同目的地的码,如钓鱼网站. 恶意的QR代码也可以通过其他方式,如短信或电子邮件来传递. 在后一种情况下,对手可以在电子邮件中使用恶意的QR代码,从用户的桌面计算机到移动设备。\n- 电话: 爱好者可以召唤受害者(称为“捕捉”)劝说他们采取行动,例如提供登录证明或浏览恶意网站。 这也可以作为一种技术,在移动设备上进行初步访问,但随后通过让受害人在台式计算机上进行动作,向计算机/其他网络过渡。\n.",
    "Lockscreen Bypass": "锁屏旁路",
    "An adversary with physical access to a mobile device may seek to bypass the device’s lockscreen. Several methods exist to accomplish this, including:\n\n* Biometric spoofing: If biometric authentication is used, an adversary could attempt to spoof a mobile device’s biometric authentication mechanism. Both iOS and Android partly mitigate this attack by requiring the device’s passcode rather than biometrics to unlock the device after every device restart, and after a set or random amount of time.(Citation: SRLabs-Fingerprint)(Citation: TheSun-FaceID)\n* Unlock code bypass: An adversary could attempt to brute-force or otherwise guess the lockscreen passcode (typically a PIN or password), including physically observing (“shoulder surfing”) the device owner’s use of the lockscreen passcode. Mobile OS vendors partly mitigate this by implementing incremental backoff timers after a set number of failed unlock attempts, as well as a configurable full device wipe after several failed unlock attempts.\n* Vulnerability exploit: Techniques have been periodically demonstrated that exploit mobile devices to bypass the lockscreen. The vulnerabilities are generally patched by the device or OS vendor once disclosed.(Citation: Wired-AndroidBypass)(Citation: Kaspersky-iOSBypass)\n": "实际访问移动设备的对手可能试图绕过设备的锁屏。 实现这一点有几种方法,包括:\n\n* 生物测谎: 如果使用生物鉴别认证,对手可能试图利用移动设备的生物鉴别认证机制。 iOS和Android都通过要求设备的密码而不是生物鉴别仪在每台设备重启后,在设定或随机时间后解锁设备来部分缓解这一攻击. (英文:SRLabs-Fingerprint) (中文(简体) ).\n* 《大会正式记录,第五十八届会议,补编第5号》(A/C.6/61/Rev.1)。 解锁密码绕行 : 对手可能试图粗暴地强迫或猜测锁屏密码(通常是PIN或密码),包括实际观察设备所有人使用锁屏密码的情况(肩冲浪)。 移动操作系统供应商通过在一系列解锁尝试失败后实施递增的后退定时器,以及在几次解锁尝试失败后实施可配置的全设备擦拭,在一定程度上缓解了这种情况.\n* 脆弱性开发: 定期展示利用移动设备绕过锁屏的技术。 弱点一般由设备或操作系统供应商在披露后补上。 (编号:Wired-AndroidBypass) (编号:Kaspersky-iOSBypass).\n",
    "Users can see if someone is watching them type in their device passcode.": "用户可以看到是否有人在他们的设备密码中监视他们打字.",
    "Command-Line Interface": "命令线接口",
    "Adversaries may use built-in command-line interfaces to interact with the device and execute commands. Android provides a bash shell that can be interacted with over the Android Debug Bridge (ADB) or programmatically using Java’s `Runtime` package. On iOS, adversaries can interact with the underlying runtime shell if the device has been jailbroken.\n\nIf the device has been rooted or jailbroken, adversaries may locate and invoke a superuser binary to elevate their privileges and interact with the system as the root user. This dangerous level of permissions allows the adversary to run special commands and modify protected system files.": "爱好者可能使用内置的命令行接口与设备进行交互,执行命令. Android提供一个可以与Android调试桥(ADB)上空或程序上使用Java的 ' 运行时 ' 软件包进行交互的弹壳。 在iOS上,如果设备已经断裂,对手可以与基本的运行时间 shell交互.\n\n如果设备已经扎根或断层,对手可能会找到并援引超级用户二进制来提升其权限,并作为根用户与系统互动. 这种危险的许可级别允许对手运行特殊命令并修改受保护的系统文件.",
    "Command-Line Interface execution can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversarial behavior.": "指令线接口执行可能难以发现,因此企业在对抗行为的其他阶段可能会得到更好的服务,专注于发现.",
    "Contact List": "联系人列表",
    "Adversaries may utilize standard operating system APIs to gather contact list data. On Android, this can be accomplished using the Contacts Content Provider. On iOS, this can be accomplished using the `Contacts` framework. \n\n \n\nIf the device has been jailbroken or rooted, an adversary may be able to access the [Contact List](https://attack.mitre.org/techniques/T1636/003) without the user’s knowledge or approval. ": "爱好者可能利用标准操作系统API来收集联系人名单数据. 在Android上,可以使用Contacts Control Professor实现. 在iOS方面,利用 \" 联系 \" 框架可以做到这一点。\n\n\n\n如果该装置已经断裂或根植,敌方可以在用户不知情或未经其批准的情况下查阅[联系清单](https://sattack.mitre.org/techniques/T1636/003).",
    "On both Android and iOS, the user can manage which applications have permission to access the contact list through the device settings screen, revoking the permission if necessary. Application vetting services could look for `android.permission.READ_CONTACTS` in an Android application’s manifest, or `NSContactsUsageDescription` in an iOS application’s `Info.plist` file. Most applications do not need contact list access, so extra scrutiny could be applied to those that request it.": "在Android和iOS上,用户可以管理哪些应用程序有权限通过设备设置屏幕访问联系人列表,必要时取消权限. 申请审查部门可以寻找`Android.permit。 READ_CONTACTS ' in a Android application ' s examplement, 或 \" NSContactsUsage Description ' in a iOS application ' in ' Info.plist ' file. 大多数应用程序不需要联系人名单访问,因此可以对提出要求者进行额外审查.",
    "Data from Local System": "本地系统的数据",
    "Adversaries may search local system sources, such as file systems or local databases, to find files of interest and sensitive data prior to exfiltration.  \n\n \n\nAccess to local system data, which includes information stored by the operating system, often requires escalated privileges. Examples of local system data include authentication tokens, the device keyboard cache, Wi-Fi passwords, and photos. On Android, adversaries may also attempt to access files from external storage which may require additional storage-related permissions. \n\n ": "爱好者可能搜索本地系统源,如文件系统或本地数据库,在过滤前找到感兴趣的文件和敏感数据.\n\n\n\n访问本地系统数据,包括操作系统存储的信息,往往需要升级权限. 本地系统数据的例子包括认证符,设备键盘缓存,Wi-Fi密码,以及照片. 在Android上,对手也可能试图从外部存储中访问文件,这可能需要额外的存储相关权限.\n\n.",
    "Accessing data from the local system can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversarial behavior.": "从当地系统获取数据可能难以侦测,因此,企业在对抗行为的其他阶段可能会得到更好的重点侦测服务.",
    "Account Access Removal": "账户访问删除",
    "Adversaries may interrupt availability of system and network resources by inhibiting access to accounts utilized by legitimate users. Accounts may be deleted, locked, or manipulated (ex: credentials changed) to remove access to accounts. ": "逆行者可能通过阻止进入合法用户使用的账户而中断系统和网络资源的提供。 账户可能被删除,锁定,或被操纵(例如:证书更改),以删除对账户的访问.",
    "Application vetting services could closely scrutinize applications that request Device Administrator permissions.": "应用程序审查服务可以仔细审查要求设备管理员许可的应用程序.",
    "System Information Discovery": "系统信息 发现",
    "Adversaries may attempt to get detailed information about a device’s operating system and hardware, including versions, patches, and architecture. Adversaries may use the information from [System Information Discovery](https://attack.mitre.org/techniques/T1426) during automated discovery to shape follow-on behaviors, including whether or not to fully infects the target and/or attempts specific actions. \n\n \n\nOn Android, much of this information is programmatically accessible to applications through the `android.os.Build` class. (Citation: Android-Build) iOS is much more restrictive with what information is visible to applications. Typically, applications will only be able to query the device model and which version of iOS it is running. ": "爱好者可能会试图获取设备操作系统和硬件的详细信息,包括版本,补丁和架构. 逆袭者可能在自动发现时使用[系统信息发现](https://sattack.mitre.org/techniques/T1426)中的信息来塑造后续行为,包括是否完全感染目标以及/或尝试特定行动.\n\n\n\n关于Android,其中许多信息在程序上可以通过`android.os'供应用程序使用。 建档 (Citation:Android-Build)iOS在应用所可见的信息方面有更大的限制性. 一般情况下,应用程序只能查询设备模型及其运行中的iOS的哪个版本.",
    "System information discovery can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversarial behavior.": "系统信息发现可能难以发现,因此企业在对抗行为的其他阶段可能会得到更好的关注检测.",
    "Fake Developer Accounts": "假开发者账户",
    "Clipboard Modification": "剪贴板修改",
    "Adversaries may abuse clipboard functionality to intercept and replace information in the Android device clipboard.(Citation: ESET Clipboard Modification February 2019)(Citation: Welivesecurity Clipboard Modification February 2019)(Citation: Syracuse Clipboard Modification 2014) Malicious applications may monitor the clipboard activity through the <code>ClipboardManager.OnPrimaryClipChangedListener</code> interface on Android to determine when the clipboard contents have changed.(Citation: Dr.Webb Clipboard Modification origin2 August 2018)(Citation: Dr.Webb Clipboard Modification origin August 2018) Listening to clipboard activity, reading the clipboard contents, and modifying the clipboard contents requires no explicit application permissions and can be performed by applications running in the background, however, this behavior has changed with the release of Android 10.(Citation: Android 10 Privacy Changes)\n\nAdversaries may use [Clipboard Modification](https://attack.mitre.org/techniques/T1510) to replace text prior to being pasted, for example, replacing a copied Bitcoin wallet address with a wallet address that is under adversarial control.\n\n[Clipboard Modification](https://attack.mitre.org/techniques/T1510) had been seen within the Android/Clipper.C trojan. This sample had been detected by ESET in an application distributed through the Google Play Store targeting cryptocurrency wallet numbers.(Citation: ESET Clipboard Modification February 2019)": "爱好者可能会滥用剪贴板功能来截取和替换Android设备剪贴板中的信息. (简体中文:ESET剪贴板修改 2019年2月)(简体中文:Welivesecurity C剪贴板修改 2019年2月)(简体中文:Syracuse C剪贴板修改 2014) 恶意应用程序可能通过Android上的<code>剪贴板管理器. OnPrimaryClipCchedListener</code>接口来监控剪贴板活动,以确定剪贴板内容何时发生变化. (引文使用过时参数coauthors (英文)Dr.Webb Clipboard December 2 August 2018) (中文(简体) ). 听剪贴板活动,读取剪贴板内容,修改剪贴板内容不需要明确的应用程序权限,也可以由在背景运行的应用程序执行,然而,随着Android 10. (Citation: Android 10 Privacy Change)的发布,这一行为发生了变化.\n\n广告者可能使用[剪贴板修改](https://sattack.mitre.org/techniques/T1510)在被粘贴前替换文本,例如,将复制的比特币钱包地址替换为处于对抗控制的钱包地址.\n\n[剪贴板修改](https://fattle.mitre.org/techniques/T1510)见于Android/Clipper。 特罗扬 这个样本被ESET在通过Google Play Store分发的应用程序中检测到,该应用程序的目标是加密货币钱包号码. (简体中文:ESET剪贴板2019年2月修改)",
    "Modifying clipboard content can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversarial behavior.": "修改剪贴板内容可能难以发现,因此,企业在敌对行为的其他阶段可以更好地侧重于发现.",
    "Archive Collected Data": "归档收集的数据",
    "Adversaries may compress and/or encrypt data that is collected prior to exfiltration. Compressing data can help to obfuscate its contents and minimize use of network resources. Encryption can be used to hide information that is being exfiltrated from detection or make exfiltration less conspicuous upon inspection by a defender. \n\n \n\nBoth compression and encryption are done prior to exfiltration, and can be performed using a utility, programming library, or custom algorithm.  ": "逆行者可能压缩和(或)加密过滤前收集的数据. 压缩数据有助于混淆其内容,尽量减少网络资源的使用. 加密可用于隐藏从侦测中被过滤的信息,或者在辩护人检查时降低过滤度。\n\n\n\n压缩和加密都是在过滤之前完成的,可以使用一个工具,编程库,或自定义算法进行.",
    "Many encryption mechanisms are built into standard application-accessible APIs and are therefore undetectable to the end user.": "许多加密机制被构建成标准的应用程序无障碍API,因此无法被最终用户察觉.",
    "Block Command Message": "块命令信件",
    "Adversaries may block a command message from reaching its intended target to prevent command execution. In OT networks, command messages are sent to provide instructions to control system devices. A blocked command message can inhibit response functions from correcting a disruption or unsafe condition. (Citation: Bonnie Zhu, Anthony Joseph, Shankar Sastry 2011)  (Citation: Electricity Information Sharing and Analysis Center; SANS Industrial Control Systems March 2016)": "逆行者可能会阻止命令消息达到预定目标,以防止命令执行. 在OT网络中,发送命令消息,为控制系统设备提供指令. 被封锁的命令消息可以抑制响应功能来纠正中断或不安全的条件. (引文:Bonnie Zhu, Anthony Joseph, Shankar Sastry 2011) (引文:电力信息共享和分析中心;SANS工业控制系统 2016年3月)",
    "Service Stop": "服务停止",
    "Adversaries may stop or disable services on a system to render those services unavailable to legitimate users. Stopping critical services can inhibit or stop response to an incident or aid in the adversary's overall objectives to cause damage to the environment. (Citation: Enterprise ATT&CK)  Services may not allow for modification of their data stores while running. Adversaries may stop services in order to conduct Data Destruction. (Citation: Enterprise ATT&CK)": "爱好者可能会停止或停止在一个系统中的服务,使合法用户无法获得这些服务。 停止关键服务可以抑制或停止对某一事件的反应,或协助敌方实现对环境造成损害的总体目标。 (批:企业ATT&CK) 服务可能不允许在运行时修改其数据存储. 爱好者可能为了进行数据销毁而停止服务。 (批:企业ATT&CK)",
    "Modify Parameter": "修改参数",
    "Adversaries may modify parameters used to instruct industrial control system devices. These devices operate via programs that dictate how and when to perform actions based on such parameters. Such parameters can determine the extent to which an action is performed and may specify additional options. For example, a program on a control system device dictating motor processes may take a parameter defining the total number of seconds to run that motor.      \n\nAn adversary can potentially modify these parameters to produce an outcome outside of what was intended by the operators. By modifying system and process critical parameters, the adversary may cause [Impact](https://attack.mitre.org/tactics/TA0105) to equipment and/or control processes. Modified parameters may be turned into dangerous, out-of-bounds, or unexpected values from typical operations. For example, specifying that a process run for more or less time than it should, or dictating an unusually high, low, or invalid value as a parameter.": "爱好者可能会修改用于指示工业控制系统设备的参数. 这些设备是通过决定如何和何时根据这些参数采取行动的程序运行的。 这些参数可以确定某项行动的执行程度,并可规定其他选择。 例如,一个控制系统设备上的程序表示电动机过程,可能需要一个参数来定义运行该电动机的总秒数.\n\n敌方有可能修改这些参数,以产生操作者意图之外的结果。 通过修改系统和处理关键参数,对手可能对设备和/或控制过程造成[impact](https://sattack.mitre.org/tactics/TA0105)。 修改后的参数可能会变成危险,超出范围,或者来自典型操作的意外值. 例如,指定一个进程运行的时间或多或少超过它应该运行的时间,或将异常高,低或无效的值称为参数.",
    "Modify Controller Tasking": "修改控制器 任务",
    "Adversaries may modify the tasking of a controller to allow for the execution of their own programs. This can allow an adversary to manipulate the execution flow and behavior of a controller. \n\nAccording to 61131-3, the association of a Task with a Program Organization Unit (POU) defines a task association. (Citation: IEC February 2013) An adversary may modify these associations or create new ones to manipulate the execution flow of a controller. Modification of controller tasking can be accomplished using a Program Download in addition to other types of program modification such as online edit and program append.\n\nTasks have properties, such as interval, frequency and priority to meet the requirements of program execution. Some controller vendors implement tasks with implicit, pre-defined properties whereas others allow for these properties to be formulated explicitly. An adversary may associate their program with tasks that have a higher priority or execute associated programs more frequently. For instance, to ensure cyclic execution of their program on a Siemens controller, an adversary may add their program to the task, Organization Block 1 (OB1).": "爱好者可能修改控制器的任务,以允许执行自己的程序. 这可以让对手操纵控制器的执行流和行为.\n\n根据61131-3,任务与方案组织股(POU)的关联确定了任务协会。 (日期:2013年2月) 对手可以修改这些关联或建立新的关联来操纵控制器的执行流. 除了在线编辑和程序附件等其他类型的程序修改外,还可以使用程序下载完成控制器任务的修改.\n\n任务有属性,如间隔,频率和优先级,以满足程序执行的要求. 一些控制员供应商以隐含的、预先界定的财产执行任务,而另一些供应商则允许对这些财产作出明确的规定。 对手可能将其方案与具有较高优先地位的任务联系起来,或更经常地执行相关方案。 例如,为了确保他们的程序在西门子控制器上循环执行,对手可能会在任务中加入他们的程序,Organization Block 1(OB1).",
    "Wireless Sniffing": "无线嗅觉",
    "Adversaries may seek to capture radio frequency (RF) communication used for remote control and reporting in distributed environments. RF communication frequencies vary between 3 kHz to 300 GHz, although are commonly between 300 MHz to 6 GHz. (Citation: Candell, R., Hany, M., Lee, K. B., Liu,Y., Quimby, J., Remley, K. April 2018)  The wavelength and frequency of the signal affect how the signal propagates through open air, obstacles (e.g. walls and trees) and the type of radio required to capture them. These characteristics are often standardized in the protocol and hardware and may have an effect on how the signal is captured. Some examples of wireless protocols that may be found in cyber-physical environments are: WirelessHART, Zigbee, WIA-FA, and 700 MHz Public Safety Spectrum. \n\nAdversaries may capture RF communications by using specialized hardware, such as software defined radio (SDR), handheld radio, or a computer with radio demodulator tuned to the communication frequency. (Citation: Bastille April 2017) Information transmitted over a wireless medium may be captured in-transit whether the sniffing device is the intended destination or not. This technique may be particularly useful to an adversary when the communications are not encrypted. (Citation: Gallagher, S. April 2017) \n\nIn the 2017 Dallas Siren incident, it is suspected that adversaries likely captured wireless command message broadcasts on a 700 MHz frequency during a regular test of the system. These messages were later replayed to trigger the alarm systems. (Citation: Gallagher, S. April 2017)": "爱好者可能试图捕捉用于分布环境中的远程控制和报告的无线电频率通信。 RF通信频率从3千赫到300千兆赫不等,尽管通常在300兆赫到6千兆赫之间. (英文:Candell, R., Hany, M., Lee, K. B., Liu, Y., Quimby, J., Remley, K. 信号的波长和频率会影响信号如何通过露天传播,障碍物(如墙壁和树木)以及捕捉它们所需的无线电类型. 这些特性在协议和硬件中常常是标准化的,可能对信号的捕获方式产生影响. 在网络物理环境中可能发现的无线协议的一些例子有:WirelessHART,Zigbee,WIA-FA,以及700兆赫公共安全频谱.\n\n爱好者可以通过使用专门硬件,如软件定义的无线电(SDR),手持式无线电,或者使用无线电降压器调制到通信频率的计算机来捕捉RF通信. (中文(简体) ). 通过无线介质传输的信息,无论嗅探设备是否为预定目的地,都可以在中途获取. 在通信没有加密的情况下,这种技术可能对对手特别有用。 (简体中文:Gallagher, S. April 2017).\n\n在2017年达拉斯西伦事件中,疑似对手在系统定期测试时可能会以700MHz频率捕获无线指令消息广播. 这些消息后来被重播以触发警报系统. (简体中文:Gallagher, S. April 2017)",
    "Loss of View": "视图丢失",
    "Adversaries may cause a sustained or permanent loss of view where the ICS equipment will require local, hands-on operator intervention; for instance, a restart or manual operation. By causing a sustained reporting or visibility loss, the adversary can effectively hide the present state of operations. This loss of view can occur without affecting the physical processes themselves. (Citation: Corero) (Citation: Michael J. Assante and Robert M. Lee) (Citation: Tyson Macaulay)": "在ICS设备需要当地实际操作者干预的情况下,例如重新开始操作或人工操作,异常因素可能造成持续或永久的视线丧失。 通过造成持续的报告或可见度损失,对手可以有效地掩盖目前的行动状况。 这种视差的丧失不会影响物理过程本身。 (简体中文:科雷罗)(简体中文:迈克尔·J·阿桑特和罗伯特·M·李)(简体中文:泰森·澳门莱)",
    "Activate Firmware Update Mode": "激活固件更新模式",
    "Adversaries may activate firmware update mode on devices to prevent expected response functions from engaging in reaction to an emergency or process malfunction. For example, devices such as protection relays may have an operation mode designed for firmware installation. This mode may halt process monitoring and related functions to allow new firmware to be loaded. A device left in update mode may be placed in an inactive holding state if no firmware is provided to it. By entering and leaving a device in this mode, the adversary may deny its usual functionalities.": "异常点可能会激活设备上的固件更新模式,以防止预期的响应功能对紧急情况或过程故障进行响应. 例如,保护继电器等设备可能具有为固件安装而设计的操作模式. 此模式可能停止进程监控和相关功能,以允许装入新的固件. 如果不向它提供固件,则保留在更新模式中的设备可能处于不活动状态。 通过在此模式下进入和离开一个设备,对手可能会否定其通常的功能.",
    "Manipulation of Control": "控制操纵",
    "Adversaries may manipulate physical process control within the industrial environment. Methods of manipulating control can include changes to set point values, tags, or other parameters. Adversaries may manipulate control systems devices or possibly leverage their own, to communicate with and command physical control processes. The duration of manipulation may be temporary or longer sustained, depending on operator detection.   \n\nMethods of Manipulation of Control include: \n\n* Man-in-the-middle  \n* Spoof command message \n* Changing setpoints  \n\nA Polish student used a remote controller device to interface with the Lodz city tram system in Poland. (Citation: John Bill May 2017) (Citation: Shelley Smith February 2008) (Citation: Bruce Schneier January 2008) Using this remote, the student was able to capture and replay legitimate tram signals. As a consequence, four trams were derailed and twelve people injured due to resulting emergency stops. (Citation: Shelley Smith February 2008) The track controlling commands issued may have also resulted in tram collisions, a further risk to those on board and nearby the areas of impact. (Citation: Bruce Schneier January 2008)": "逆行者可能在工业环境中操纵物理过程控制. 操纵控制的方法可以包括更改设置点值,标记或其他参数. 爱好者可能操纵控制系统设备或可能利用自己的设备,与物理控制过程进行沟通并指挥实际控制过程. 操纵的持续时间可能是暂时的或更长的,取决于操作者的检测.\n\n控制操纵方法包括:\n\n{\\fn黑体\\fs22\\bord1\\shad0\\3aHBE\\4aH00\\fscx67\\fscy66\\2cHFFFFFF\\3cH808080}\"中世纪\"\n* Spoof 命令消息\n* 改变设置点\n\n一名波兰学生使用遥控器设备与波兰的洛兹城市有轨电车系统接口. (注:约翰·比尔2017年5月)(注:雪莱·史密斯2008年2月)(注:布鲁斯·施奈尔2008年1月) 使用这个遥控器,学生能够捕捉和重播合法的有轨电车信号. 因此,4辆电车因紧急停运而脱轨,12人受伤。 (2008年2月,雪莱·史密斯) 所发布的轨迹控制指令还可能导致有轨电车碰撞,对机上和附近受撞击地区构成进一步风险. (2008年1月,布鲁斯·施奈尔)",
    "Denial of Service": "拒绝服务",
    "Adversaries may perform Denial-of-Service (DoS) attacks to disrupt expected device functionality. Examples of DoS attacks include overwhelming the target device with a high volume of requests in a short time period and sending the target device a request it does not know how to handle. Disrupting device state may temporarily render it unresponsive, possibly lasting until a reboot can occur. When placed in this state, devices may be unable to send and receive requests, and may not perform expected response functions in reaction to other events in the environment. \n\nSome ICS devices are particularly sensitive to DoS events, and may become unresponsive in reaction to even a simple ping sweep. Adversaries may also attempt to execute a Permanent Denial-of-Service (PDoS) against certain devices, such as in the case of the BrickerBot malware. (Citation: ICS-CERT April 2017) \n\nAdversaries may exploit a software vulnerability to cause a denial of service by taking advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Vulnerabilities may exist in software that can be used to cause a denial of service condition. \n\nAdversaries may have prior knowledge about industrial protocols or control devices used in the environment through [Remote System Information Discovery](https://attack.mitre.org/techniques/T0888). There are examples of adversaries remotely causing a [Device Restart/Shutdown](https://attack.mitre.org/techniques/T0816) by exploiting a vulnerability that induces uncontrolled resource consumption. (Citation: ICS-CERT August 2018) (Citation: Common Weakness Enumeration January 2019) (Citation: MITRE March 2018) ": "逆行者可能进行拒绝服务(DoS)攻击以破坏预期的设备功能. DoS攻击的例子包括在短期内以大量请求压倒目标设备,以及向目标设备发送它不知道如何处理的请求. 干扰设备状态可能暂时使其失去响应,可能持续到重启发生. 当放置在这个状态下时,设备可能无法发送和接收请求,也可能无法对环境中的其他事件进行预期的响应功能.\n\n一些ICS设备对DoS事件特别敏感,甚至对简单的打线扫荡也可能变得反应不灵. 敌对者还可能试图针对某些设备执行永久拒绝服务(PDoS),例如BrickerBot恶意软件。 (英文:ICS-CERT April 2017).\n\n爱好者可能利用软件的脆弱性,利用程序,服务,或操作系统软件或内核内部的编程错误,执行对手控制的代码,从而导致拒绝服务. 软件中可能存在脆弱性,可用于导致拒绝服务条件.\n\n爱好者可能通过[检索系统信息发现](https://sattack.mitre.org/techniques/T0888)事先了解在环境中使用的工业协议或控制装置. 有一些对手利用引起不受控制的资源消耗的脆弱性,远程造成[Device restart/shutdown](https://sattack.mitre.org/techniques/T0816)的情况。 (简体中文:ICS-CERT 2018年8月) (简体中文:常见弱点 2019年1月) (简体中文:MITRE 2018年3月)",
    "Block Serial COM": "块串行COM",
    "Adversaries may block access to serial COM to prevent instructions or configurations from reaching target devices. Serial Communication ports (COM) allow communication with control system devices. Devices can receive command and configuration messages over such serial COM. Devices also use serial COM to send command and reporting messages. Blocking device serial COM may also block command messages and block reporting messages. \n\nA serial to Ethernet converter is often connected to a serial COM to facilitate communication between serial and Ethernet devices. One approach to blocking a serial COM would be to create and hold open a TCP session with the Ethernet side of the converter. A serial to Ethernet converter may have a few ports open to facilitate multiple communications. For example, if there are three serial COM available -- 1, 2 and 3 --, the converter might be listening on the corresponding ports 20001, 20002, and 20003. If a TCP/IP connection is opened with one of these ports and held open, then the port will be unavailable for use by another party. One way the adversary could achieve this would be to initiate a TCP session with the serial to Ethernet converter at 10.0.0.1 via Telnet on serial port 1 with the following command: telnet 10.0.0.1 20001.": "逆行者可能会阻断对序列COM的访问,以防止指令或配置到达目标设备. 串行通信端口(COM)允许与控制系统设备通信. 设备可以通过这种串行COM接收命令和配置消息. 设备还使用串行COM来发送命令和报告消息. 屏蔽设备串号COM也可以屏蔽命令消息和屏蔽报告消息.\n\n一个串到以太网转换器经常连接到一个串联COM,以便于串联和以太网设备之间的通信. 阻止串行COM的方法之一是与转换器的以太网一侧创建并举行TCP会话. 串行到以太网转换器可能会有一些端口打开方便多个通信. 例如,如果有3个串行COM可用 -- -- 1,2和3 -- -- ,转换器可能正在监听相应的端口20001,20002和20003. 如果与其中一个港口打开TCP/IP连接并保持开放,则该港口将无法供另一方使用。 敌方实现这一点的一种方式是启动一个TCP会话,串联到以太网转换器在1号序列端口的10.0.0.1通过Telnet,其命令如下: telnet 10.0.0.1 20001.",
    "Role Identification": "角色识别",
    "Adversaries may perform role identification of devices involved with physical processes of interest in a target control system. Control systems devices often work in concert to control a physical process. Each device can have one or more roles that it performs within that control process. By collecting this role-based data, an adversary can construct a more targeted attack.\n\nFor example, a power generation plant may have unique devices such as one that monitors power output of a generator and another that controls the speed of a turbine. Examining devices roles allows the adversary to observe how the two devices work together to monitor and control a physical process. Understanding the role of a target device can inform the adversary's decision on what action to take, in order to cause Impact and influence or disrupt the integrity of operations. Furthermore, an adversary may be able to capture control system protocol traffic. By studying this traffic, the adversary may be able to determine which devices are outstations, and which are masters. Understanding of master devices and their role within control processes can enable the use of Rogue Master Device": "爱好者可以对目标控制系统中涉及物理过程的装置进行角色识别. 控制系统设备经常协同运行以控制一个物理过程. 每个设备都可以在这个控制过程中发挥一个或多个作用. 通过收集这种基于角色的数据,对手可以构建更有针对性的攻击.\n\n例如,一个发电站可能具有独特的装置,例如一个监测发电机的功率输出的装置和一个控制涡轮机速度的装置. 检查设备的作用使对手能够观察两种设备如何合作来监测和控制物理过程. 了解目标装置的作用可以使对手决定应采取何种行动,以便造成影响和影响或破坏行动的完整性。 此外,敌方可能能够控制系统协议流量。 通过研究这种流量,对手可能能够确定哪些装置是外站,哪些是主机. 了解主设备及其在控制进程中的作用,可以使用Rogue主设备",
    "Adversaries may utilize command-line interfaces (CLIs) to interact with systems and execute commands. CLIs provide a means of interacting with computer systems and are a common feature across many types of platforms and devices within control systems environments. (Citation: Enterprise ATT&CK January 2018) Adversaries may also use CLIs to install and run new software, including malicious tools that may be installed over the course of an operation.\n\nCLIs are typically accessed locally, but can also be exposed via services, such as SSH, Telnet, and RDP.  Commands that are executed in the CLI execute with the current permissions level of the process running the terminal emulator, unless the command specifies a change in permissions context. Many controllers have CLI interfaces for management purposes.": "爱好者可能利用命令行接口(CLI)与系统互动,执行命令. CLI提供了与计算机系统互动的手段,是控制系统环境中许多类型平台和设备的共同特征. (批:企业ATT&CK 2018年1月). 爱好者还可能利用CLI安装和运行新的软件,包括可能在操作过程中安装的恶意工具.\n\nCLI一般是在当地访问的,但也可以通过SSH,Telnet,RDP等服务进行曝光. 在 CLI 中执行的命令以运行终端仿真器的进程的当前权限级别执行,除非命令指定权限上下文的变化. 许多控制器都有用于管理目的的CLI接口.",
    "Point & Tag Identification": "点标记标识( T)",
    "Adversaries may collect point and tag values to gain a more comprehensive understanding of the process environment. Points may be values such as inputs, memory locations, outputs or other process specific variables. (Citation: Dennis L. Sloatman September 2016) Tags are the identifiers given to points for operator convenience. \n\nCollecting such tags provides valuable context to environmental points and enables an adversary to map inputs, outputs, and other values to their control processes. Understanding the points being collected may inform an adversary on which processes and values to keep track of over the course of an operation.": "爱好者可能收集点值和标记值,以更全面地了解过程环境. 点可以是输入值,内存位置,输出值或其他进程特定变量. (英文:Dennis L. Sloatman 9月 2016). 标记是给点的标识符,以方便操作员使用.\n\n收集这种标记为环境点提供了宝贵的背景,使对手能够绘制其控制过程的投入、产出和其他价值。 了解正在收集的要点,可使对手了解在行动过程中要跟踪的过程和价值.",
    "Device Restart/Shutdown": "设备重新启动/关闭",
    "Adversaries may forcibly restart or shutdown a device in an ICS environment to disrupt and potentially negatively impact physical processes. Methods of device restart and shutdown exist in some devices as built-in, standard functionalities. These functionalities can be executed using interactive device web interfaces, CLIs, and network protocol commands.\n\nUnexpected restart or shutdown of control system devices may prevent expected response functions happening during critical states.\n\nA device restart can also be a sign of malicious device modifications, as many updates require a shutdown in order to take effect.": "逆行者可能会在ICS环境中强行重启或关闭一个设备,以干扰并可能对物理过程产生不利影响. 一些设备作为内置,标准功能存在设备重启和关闭的方法. 这些功能可以使用交互式设备网络接口,CLI,以及网络协议命令来执行.\n\n意外重启或关闭控制系统设备可能防止在临界状态下发生预期的响应功能.\n\n设备重启也可以是恶意设备修改的标志,因为许多更新需要关闭才能生效.",
    "User Execution": "用户执行",
    "Adversaries may rely on a targeted organizations user interaction for the execution of malicious code. User interaction may consist of installing applications, opening email attachments, or granting higher permissions to documents. \n\nAdversaries may embed malicious code or visual basic code into files such as Microsoft Word and Excel documents or software installers. (Citation: Booz Allen Hamilton) Execution of this code requires that the user enable scripting or write access within the document. Embedded code may not always be noticeable to the user especially in cases of trojanized software. (Citation: Daavid Hentunen, Antti Tikkanen June 2014) \n\nA Chinese spearphishing campaign running from December 9, 2011 through February 29, 2012 delivered malware through spearphishing attachments which required user action to achieve execution. (Citation: CISA AA21-201A Pipeline Intrusion July 2021)": "不良者可能依赖目标组织用户互动来执行恶意代码. 用户交互可能包括安装应用程序,打开电子邮件附件,或给予文件更高的权限.\n\n广告者可能将恶意代码或视觉基本代码嵌入Microsoft Word和Excel文档或软件安装器等文件. (电话:Booz Allen Hamilton) 执行此代码需要用户在文档中允许脚本或写入访问. 嵌入式代码可能并不总是能引起用户的注意,特别是在trojan化软件的情况下。 (城镇:达维德·亨图恩,安蒂·蒂卡宁 2014年6月).\n\n从2011年12月9日到2012年2月29日的中国长矛钓鱼运动, (编号:CISA AA21-201A) 管道入侵 2021年7月",
    "Wireless Compromise": "无线妥协",
    "Adversaries may perform wireless compromise as a method of gaining communications and unauthorized access to a wireless network. Access to a wireless network may be gained through the compromise of a wireless device. (Citation: Alexander Bolshev, Gleb Cherbov July 2014) (Citation: Alexander Bolshev March 2014) Adversaries may also utilize radios and other wireless communication devices on the same frequency as the wireless network. Wireless compromise can be done as an initial access vector from a remote distance. \n\nA Polish student used a modified TV remote controller to gain access to and control over the Lodz city tram system in Poland. (Citation: John Bill May 2017) (Citation: Shelley Smith February 2008) The remote controller device allowed the student to interface with the trams network to modify track settings and override operator control. The adversary may have accomplished this by aligning the controller to the frequency and amplitude of IR control protocol signals. (Citation: Bruce Schneier January 2008) The controller then enabled initial access to the network, allowing the capture and replay of tram signals. (Citation: John Bill May 2017)": "爱好者可能进行无线折中,作为获取通信和擅自进入无线网络的方法. 可以通过无线设备的妥协获得无线网络的接入. (英文:Alexander Bolshev, Gleb Cherbov July 2014) (英文:Alexander Bolshev March 2014). 爱好者还可以使用无线电和其他无线通信设备,频率与无线网络相同. 无线折中可以做为远程的初始访问矢量.\n\n一名波兰学生使用经过修改的电视遥控器来获取和控制波兰洛兹城市有轨电车系统. (注:约翰·比尔2017年5月) (注:雪莱·史密斯2008年2月) 远程控制器设备允许学生与有轨电车网络接口,以修改轨迹设置并覆盖操作员控制. 对手可能通过将控制器与IR控制协议信号的频率和振幅对齐来实现这一点. (2008年1月,布鲁斯·施奈尔) 控制器随后启用了网络的初始访问,从而可以捕捉和重播有轨电车信号. (英文(简体) John Bill May 2017)",
    "Change Operating Mode": "更改操作模式",
    "Adversaries may change the operating mode of a controller to gain additional access to engineering functions such as Program Download.   Programmable controllers typically have several modes of operation that control the state of the user program and control access to the controllers API. Operating modes can be physically selected using a key switch on the face of the controller but may also be selected with calls to the controllers API. Operating modes and the mechanisms by which they are selected often vary by vendor and product line. Some commonly implemented operating modes are described below:  \n\n* Program - This mode must be enabled before changes can be made to a devices program. This allows program uploads and downloads between the device and an engineering workstation. Often the PLCs logic Is halted, and all outputs may be forced off. (Citation: N.A. October 2017)  \n* Run - Execution of the devices program occurs in this mode. Input and output (values, points, tags, elements, etc.) are monitored and used according to the programs logic. [Program Upload](https://attack.mitre.org/techniques/T0845) and [Program Download](https://attack.mitre.org/techniques/T0843) are disabled while in this mode. (Citation: Omron) (Citation: Machine Information Systems 2007)  (Citation: N.A. October 2017) (Citation: PLCgurus 2021)   \n* Remote - Allows for remote changes to a PLCs operation mode. (Citation: PLCgurus 2021)    \n* Stop - The PLC and program is stopped, while in this mode, outputs are forced off. (Citation: Machine Information Systems 2007)   \n* Reset - Conditions on the PLC are reset to their original states. Warm resets may retain some memory while cold resets will reset all I/O and data registers. (Citation: Machine Information Systems 2007)   \n* Test / Monitor mode - Similar to run mode, I/O is processed, although this mode allows for monitoring, force set, resets, and more generally tuning or debugging of the system. Often monitor mode may be used as a trial for initialization. (Citation: Omron)": "爱好者可能会改变控制器的操作模式,以获得额外的工程功能,如程序下载. 可编程控制器一般有几种操作模式,可以控制用户程序的状态,并控制对控制器API的访问. 操作模式可以使用控制器正面的密钥开关进行物理选择,但也可以通过调用控制器API来选择. 运作模式和选择这些模式的机制往往因供应商和产品种类而异。 现将一些共同实施的操作模式说明如下:\n\n* 方案 - 在对设备程序进行修改之前,必须启用此模式。 这允许程序在设备与工程工作站之间上传和下载. PLCs逻辑经常被停止,所有产出都可能被迫取消。 (英文:N.A. October 2017) (中文(简体) ).\n* 运行 - 在此模式下执行设备程序 。 输入和输出(值,点,标记,元素等)根据程序逻辑进行监测和使用. [程序上传](https://sattack.mitre.org/techniques/T0845)和[程序下载](https://sattack.mitre.org/techniques/T0843)在此模式下禁用. (英文:Omron)(英文:Machine Information Systems 2007)(英文:N.A. October 2017) (英文:PLCgurus 2021).\n*远程 - 允许远程更改为 PLCs 操作模式. (编号:PLCgurus 2021)\n* 《大会正式记录,第五十八届会议,补编第5号》(A/C.6/61/Rev.1)。 停下来 PLC和程序被停止,而在此模式下,输出被强制关闭. (2007年计算机信息系统)\n* 重设 - PLC的条件被重新设定到原来的状态. 温暖重置器可能保留一些内存,而冷重置器则会重置所有I/O和数据登记器. (2007年计算机信息系统)\n* 《大会正式记录,第五十八届会议,补编第5号》(A/C.6/61/Rev.1)。 测试/监视器模式 - 类似于运行模式,I/O被处理,尽管这个模式允许对系统进行监控,强制设置,重置,以及更一般的调试或调试. 经常使用监视器模式作为初始化的试验. (ation: O也",
    "Alarm Suppression": "停止报警",
    "Adversaries may target protection function alarms to prevent them from notifying operators of critical conditions. Alarm messages may be a part of an overall reporting system and of particular interest for adversaries. Disruption of the alarm system does not imply the disruption of the reporting system as a whole.\n\nA Secura presentation on targeting OT notes a dual fold goal for adversaries attempting alarm suppression: prevent outgoing alarms from being raised and prevent incoming alarms from being responded to. (Citation: Jos Wetzels, Marina Krotofil 2019) The method of suppression may greatly depend on the type of alarm in question:  \n\n* An alarm raised by a protocol message \n* An alarm signaled with I/O \n* An alarm bit set in a flag (and read) \n\nIn ICS environments, the adversary may have to suppress or contend with multiple alarms and/or alarm propagation to achieve a specific goal to evade detection or prevent intended responses from occurring. (Citation: Jos Wetzels, Marina Krotofil 2019)  Methods of suppression may involve tampering or altering device displays and logs, modifying in memory code to fixed values, or even tampering with assembly level instruction code.": "逆行者可能瞄准保护功能警报,防止其将关键条件通知操作者. 警示信息可能是总体报告系统的一部分,对对手特别感兴趣。 破坏警报系统并不意味着整个报告系统的中断。\n\nSecurea关于瞄准OT的演示指出,试图压制警报的对手有一个双叠目标:防止发出警报,防止发出警报。 (英文:Jos Wetzels, Marina Krotofil 2019). 压制方法可能在很大程度上取决于有关的警报类型:\n\n* 《大会正式记录,第五十八届会议,补编第5号》(A/C.6/61/Rev.1)。 协议消息引发的提醒\n* 《大会正式记录,第五十八届会议,补编第5号》(A/C.6/61/Rev.1)。 警报信号是I/O\n* 《大会正式记录,第五十八届会议,补编第5号》(A/C.6/61/Rev.1)。 旗下设置的提醒比特( 并读)\n\n在ICS环境中,对手可能不得不压制或对抗多重警报和(或)警报传播,以实现逃避探测或防止发生预期反应的具体目标。 (英文:Jos Wetzels, Marina Krotofil 2019). 压制方法可能涉及篡改或改变设备显示和日志,将内存代码修改为固定值,甚至篡改组装级指令代码.",
    "Detect Operating Mode": "检测操作模式",
    "Adversaries may gather information about a PLCs or controllers current operating mode. Operating modes dictate what change or maintenance functions can be manipulated and are often controlled by a key switch on the PLC (e.g.,  run, prog [program], and remote). Knowledge of these states may be valuable to an adversary to determine if they are able to reprogram the PLC. Operating modes and the mechanisms by which they are selected often vary by vendor and product line. Some commonly implemented operating modes are described below:  \n\n* Program - This mode must be enabled before changes can be made to a devices program. This allows program uploads and downloads between the device and an engineering workstation. Often the PLCs logic Is halted, and all outputs may be forced off. (Citation: N.A. October 2017)  \n* Run - Execution of the devices program occurs in this mode. Input and output (values, points, tags, elements, etc.) are monitored and used according to the programs logic.[Program Upload](https://attack.mitre.org/techniques/T0845) and [Program Download](https://attack.mitre.org/techniques/T0843) are disabled while in this mode. (Citation: Omron) (Citation: Machine Information Systems 2007)  (Citation: N.A. October 2017) (Citation: PLCgurus 2021)   \n* Remote - Allows for remote changes to a PLCs operation mode. (Citation: PLCgurus 2021)    \n* Stop - The PLC and program is stopped, while in this mode, outputs are forced off. (Citation: Machine Information Systems 2007)   \n* Reset - Conditions on the PLC are reset to their original states. Warm resets may retain some memory while cold resets will reset all I/O and data registers. (Citation: Machine Information Systems 2007)   \n* Test / Monitor mode - Similar to run mode, I/O is processed, although this mode allows for monitoring, force set, resets, and more generally tuning or debugging of the system. Often monitor mode may be used as a trial for initialization. (Citation: Omron)": "爱好者可能收集关于PLC或控制器当前操作模式的信息. 操作模式决定了哪些变化或维护功能可以被操纵,并经常被PLC上的密钥开关控制(例如运行,prog [program],以及远程). 了解这些国家对于敌方确定它们是否能够重新编制项目清单可能很有价值。 运作模式和选择这些模式的机制往往因供应商和产品种类而异。 现将一些共同实施的操作模式说明如下:\n\n* 方案 - 在对设备程序进行修改之前,必须启用此模式。 这允许程序在设备与工程工作站之间上传和下载. PLCs逻辑经常被停止,所有产出都可能被迫取消。 (英文:N.A. October 2017) (中文(简体) ).\n* 运行 - 在此模式下执行设备程序 。 输入和输出(值,点,标记,元素等)按照程序逻辑进行监控和使用. [程序上传] (https://sattack.mitre.org/techniques/T0845)和[程序下载](https://sattack.mitre.org/techniques/T0843)在此模式下禁用. (英文:Omron)(英文:Machine Information Systems 2007)(英文:N.A. October 2017) (英文:PLCgurus 2021).\n*远程 - 允许远程更改为 PLCs 操作模式. (编号:PLCgurus 2021)\n* 《大会正式记录,第五十八届会议,补编第5号》(A/C.6/61/Rev.1)。 停下来 PLC和程序被停止,而在此模式下,输出被强制关闭. (2007年计算机信息系统)\n* 重设 - PLC的条件被重新设定到原来的状态. 温暖重置器可能保留一些内存,而冷重置器则会重置所有I/O和数据登记器. (2007年计算机信息系统)\n* 《大会正式记录,第五十八届会议,补编第5号》(A/C.6/61/Rev.1)。 测试/监视器模式 - 类似于运行模式,I/O被处理,尽管这个模式允许对系统进行监控,强制设置,重置,以及更一般的调试或调试. 经常使用监视器模式作为初始化的试验. (ation: O也",
    "Loss of Protection": "失去保护",
    "Adversaries may compromise protective system functions designed to prevent the effects of faults and abnormal conditions. This can result in equipment damage, prolonged process disruptions and hazards to personnel. \n\nMany faults and abnormal conditions in process control happen too quickly for a human operator to react to. Speed is critical in correcting these conditions to limit serious impacts such as Loss of Control and Property Damage. \n\nAdversaries may target and disable protective system functions as a prerequisite to subsequent attack execution or to allow for future faults and abnormal conditions to go unchecked. Detection of a Loss of Protection by operators can result in the shutdown of a process due to strict policies regarding protection systems. This can cause a Loss of Productivity and Revenue and may meet the technical goals of adversaries seeking to cause process disruptions.": "对抗者可能会损害旨在防止断层和异常条件影响的保护系统功能. 这可能造成设备损坏、长期流程中断和人员危险。\n\n控制过程中的许多断层和异常条件发生得太快,人类操作者无法作出反应. 速度对于纠正这些状况以限制诸如控制损失和财产损失等严重影响至关重要。\n\n逆行者可能会将保护系统功能作为目标并禁用,作为后续攻击执行的前提,或允许未来的断层和异常条件不受控制. 由于对保护制度采取了严格政策,操作者发现保护损失可导致一个程序关闭。 这可能造成生产力和收入损失,并可能达到对手试图造成进程中断的技术目标.",
    "Monitor Process State": "监测进程状态",
    "Adversaries may gather information about the physical process state. This information may be used to gain more information about the process itself or used as a trigger for malicious actions. The sources of process state information may vary such as, OPC tags, historian data, specific PLC block information, or network traffic.": "爱好者可能收集物理过程状态的信息. 这些信息可能被用来获取更多关于过程本身的信息,或者被用作恶意行动的触发. 过程状态信息的来源可能有所不同,例如OPC标记,历史数据,特定的PLC块信息,或者网络流量.",
    "Scripting": "脚本",
    "Adversaries may use scripting languages to execute arbitrary code in the form of a pre-written script or in the form of user-supplied code to an interpreter. Scripting languages are programming languages that differ from compiled languages, in that scripting languages use an interpreter, instead of a compiler. These interpreters read and compile part of the source code just before it is executed, as opposed to compilers, which compile each and every line of code to an executable file. Scripting allows software developers to run their code on any system where the interpreter exists. This way, they can distribute one package, instead of precompiling executables for many different systems. Scripting languages, such as Python, have their interpreters shipped as a default with many Linux distributions. \n\nIn addition to being a useful tool for developers and administrators, scripting language interpreters may be abused by the adversary to execute code in the target environment. Due to the nature of scripting languages, this allows for weaponized code to be deployed to a target easily, and leaves open the possibility of on-the-fly scripting to perform a task.": "爱好者可能使用脚本语言以预写脚本的形式或以用户向解释者提供代码的形式执行任意代码. 脚本语言是编译语言不同于编译语言的编程语言,在这种编译语言中,会使用口译,而不是编译器. 这些解释者在源代码被执行之前就读取并编译了其中的一部分,而不是编译器,编译器将每一行代码编译为可执行文件. 脚本可以让软件开发人员在任何存在解释器的系统中运行他们的代码. 这样,他们就可以分发一个包,而不是为许多不同的系统预编可执行文件. 脚本语言,如Python,将其口译员作为默认运出,与许多Linux发行.\n\n除了是开发者和管理员的有用工具外,脚本语言翻译者还可能被对手滥用在目标环境中执行代码. 由于文字语言的性质,这使得武器化的代码可以轻松地部署到目标上,并留下了在飞行中执行任务的可能性.",
    "Remote System Information Discovery": "远程系统信息发现",
    "An adversary may attempt to get detailed information about remote systems and their peripherals, such as make/model, role, and configuration. Adversaries may use information from Remote System Information Discovery to aid in targeting and shaping follow-on behaviors. For example, the system's operational role and model information can dictate whether it is a relevant target for the adversary's operational objectives. In addition, the system's configuration may be used to scope subsequent technique usage. \n\nRequests for system information are typically implemented using automation and management protocols and are often automatically requested by vendor software during normal operation. This information may be used to tailor management actions, such as program download and system or module firmware. An adversary may leverage this same information by issuing calls directly to the system's API.": "对手可能试图获得关于远程系统及其外围系统,例如制造/模型、作用和配置的详细资料。 爱好者可能利用远程系统信息发现中的信息来帮助瞄准和塑造后续行为. 例如,该系统的业务作用和示范信息可以决定该系统是否是对手业务目标的相关目标。 此外,该系统的配置可能被用于扩展后续技术使用范围.\n\n索取系统信息的请求一般使用自动化和管理协议执行,在正常运行期间供应商软件经常自动提出要求. 这些信息可用于裁剪管理动作,如程序下载和系统或模块固件. 对手可能会通过直接向系统的API发出电话来利用这一信息.",
    "Program Upload": "程序上传",
    "Adversaries may attempt to upload a program from a PLC to gather information about an industrial process. Uploading a program may allow them to acquire and study the underlying logic. Methods of program upload include vendor software, which enables the user to upload and read a program running on a PLC. This software can be used to upload the target program to a workstation, jump box, or an interfacing device.": "爱好者可能试图从PLC上传一个程序来收集工业过程的信息. 上传一个程序可以让他们获得并研究基本逻辑. 程序上传的方法包括销售商软件,这使得用户能够上传和阅读在PLC上运行的程序. 这个软件可以用来将目标程序上传到工作站,跳槽,或者接口设备.",
    "Exploit Public-Facing Application": "利用公共立面应用程序",
    "Adversaries may leverage weaknesses to exploit internet-facing software for initial access into an industrial network. Internet-facing software may be user applications, underlying networking implementations, an assets operating system, weak defenses, etc. Targets of this technique may be intentionally exposed for the purpose of remote management and visibility.\n\nAn adversary may seek to target public-facing applications as they may provide direct access into an ICS environment or the ability to move into the ICS network. Publicly exposed applications may be found through online tools that scan the internet for open ports and services. Version numbers for the exposed application may provide adversaries an ability to target specific known vulnerabilities. Exposed control protocol or remote access ports found in Commonly Used Port may be of interest by adversaries.": "竞争者可能利用薄弱环节利用互联网软件初步进入工业网络。 互联网化软件可以是用户应用,基础网络实施,一个资产操作系统,防御薄弱等. 为了远程管理和能见度的目的,这种技术的目标可能有意暴露出来。\n\n对手可能试图瞄准公共软件,因为这些软件可直接进入ICS环境或进入ICS网络的能力。 可通过在线工具在互联网上扫描开放的港口和服务,找到公开曝光的应用程序。 暴露应用软件的版本编号可能使对手有能力针对已知的具体脆弱性。 在常用港口发现的曝光控制协议或远程接入端口,可能会引起对手的兴趣.",
    "Data from Information Repositories": "来自信息存储器的数据",
    "Adversaries may target and collect data from information repositories. This can include sensitive data such as specifications, schematics, or diagrams of control system layouts, devices, and processes. Examples of information repositories include reference databases in the process environment, as well as databases in the corporate network that might contain information about the ICS.(Citation: Cybersecurity & Infrastructure Security Agency March 2018)\n\nInformation collected from these systems may provide the adversary with a better understanding of the operational environment, vendors used, processes, or procedures of the ICS.\n\nIn a campaign between 2011 and 2013 against ONG organizations, Chinese state-sponsored actors searched document repositories for specific information such as, system manuals, remote terminal unit (RTU) sites, personnel lists, documents that included the string SCAD*, user credentials, and remote dial-up access information. (Citation: CISA AA21-201A Pipeline Intrusion July 2021)": "爱好者可能瞄准和收集信息储存库的数据。 这可以包括诸如规格,示意图,或者控制系统布局,装置,过程的图表等敏感数据. 信息储存库的例子包括过程环境中的参考数据库,以及公司网络中可能包含科技中心信息的数据库。 (城镇:网络安全和基础设施) 安全局 2018年3月).\n\n从这些系统中收集的信息可使对手更好地了解综合服务中心的业务环境、使用的供应商、流程或程序。\n\n在2011年至2013年针对ONG组织的一场运动中,中国国家赞助的行为者搜索了文件存储库,以获取诸如系统手册、远程终端站点、人员名单、包括字符串SCAD*的文件、用户证书和远程拨号访问信息等具体信息。 (编号:CISA AA21-201A) 管道入侵 2021年7月",
    "Transient Cyber Asset": "移动网络资产",
    "Adversaries may target devices that are transient across ICS networks and external networks. Normally, transient assets are brought into an environment by authorized personnel and do not remain in that environment on a permanent basis. (Citation: North American Electric Reliability Corporation June 2021) Transient assets are commonly needed to support management functions and may be more common in systems where a remotely managed asset is not feasible, external connections for remote access do not exist, or 3rd party contractor/vendor access is required. \n\nAdversaries may take advantage of transient assets in different ways. For instance, adversaries may target a transient asset when it is connected to an external network and then leverage its trusted access in another environment to launch an attack. They may also take advantage of installed applications and libraries that are used by legitimate end-users to interact with control system devices. \n\nTransient assets, in some cases, may not be deployed with a secure configuration leading to weaknesses that could allow an adversary to propagate malicious executable code, e.g., the transient asset may be infected by malware and when connected to an ICS environment the malware propagates onto other systems. ": "逆行者可能瞄准跨ICS网络和外部网络的瞬态设备. 通常,临时资产是由核定人员带入一个环境的,不会长期留在这一环境中。 (批:北美电力可靠性公司2021年6月). 通常需要流动资产来支持管理职能,在远程管理资产不可行、远程访问的外部连接不存在或需要第三方承包商/供应商访问的系统中可能更为常见。\n\n爱好者可能会以不同的方式利用瞬时资产. 例如,对手在与外部网络连接时,可能会瞄准瞬态资产,然后在另一个环境中利用其信任的准入发动攻击。 它们也可以利用已安装的应用程序和合法最终用户用来与控制系统设备互动的库。\n\n在某些情况下,暂时性资产可能没有安全配置,导致缺陷,使对手能够传播恶意可执行代码,例如,暂时性资产可能受到恶意软件的感染,当与ICS环境连接时,恶意软件向其他系统传播.",
    "Manipulate I/O Image": "操纵 I/O 图像",
    "Adversaries may manipulate the I/O image of PLCs through various means to prevent them from functioning as expected. Methods of I/O image manipulation may include overriding the I/O table via direct memory manipulation or using the override function used for testing PLC programs. (Citation: Dr. Kelvin T. Erickson December 2010) During the scan cycle, a PLC reads the status of all inputs and stores them in an image table. (Citation: Nanjundaiah, Vaidyanath) The image table is the PLCs internal storage location where values of inputs/outputs for one scan are stored while it executes the user program. After the PLC has solved the entire logic program, it updates the output image table. The contents of this output image table are written to the corresponding output points in I/O Modules. \n\nOne of the unique characteristics of PLCs is their ability to override the status of a physical discrete input or to override the logic driving a physical output coil and force the output to a desired status.": "爱好者可能通过各种手段操纵PLCs的I/O图像,以防止它们按预期运行. I/O图像操作的方法可能包括通过直接内存操作或使用用于测试PLC程序的覆盖函数来压倒I/O表. (2010年12月开尔文·埃里克森博士) 在扫描周期中,一个PLC读取所有输入的状态,并将其存储在一个图像表格中. (注:南琼达雅,瓦依延纳. 图像表是PLCs内部存储位置,在它执行用户程序时存储一个扫描输入/输出值. 在PLC解决了整个逻辑程序后,它更新了输出图像表. 此输出图像表的内容被写入I/O模块中相应的输出点.\n\nPLCs的独特特征之一是它们能够超越物理离散输入的状态,或超越驱动物理输出线圈的逻辑,并迫使输出达到理想状态.",
    "Network Sniffing": "网络嗅觉",
    "Network sniffing is the practice of using a network interface on a computer system to monitor or capture information (Citation: Enterprise ATT&CK January 2018) regardless of whether it is the specified destination for the information. \n\nAn adversary may attempt to sniff the traffic to gain information about the target. This information can vary in the level of importance. Relatively unimportant information is general communications to and from machines.  Relatively important information would be login information. User credentials may be sent over an unencrypted protocol, such as Telnet, that can be captured and obtained through network packet analysis. \n\nIn addition, ARP and Domain Name Service (DNS) poisoning can be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.": "网络嗅觉(英語:Network snowing)是使用计算机系统上的网络接口来监测或捕捉信息的做法(Citation:Entertainment ATT&CK January 2018),无论信息是否为指定的目的地.\n\n对手可能试图嗅探流量以获取目标信息. 这种信息的重要性可能不同。 相对不重要的信息是机器的一般通信。 相对重要的是登录信息。 用户证书可以通过Telnet等未加密的协议发送,可以通过网络包分析获取.\n\n此外,ARP和域名服务(DNS)中毒可以通过将流量重定向到对手来获取网站,代理和内部系统的资质.",
    "Rootkit": "根基( root)",
    "Adversaries may deploy rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Rootkits are programs that hide the existence of malware by intercepting and modifying operating-system API calls that supply system information. Rootkits or rootkit-enabling functionality may reside at the user or kernel level in the operating system, or lower. (Citation: Enterprise ATT&CK January 2018)   \n\nFirmware rootkits that affect the operating system yield nearly full control of the system. While firmware rootkits are normally developed for the main processing board, they can also be developed for the I/O that is attached to an asset. Compromise of this firmware allows the modification of all of the process variables and functions the module engages in. This may result in commands being disregarded and false information being fed to the main device. By tampering with device processes, an adversary may inhibit its expected response functions and possibly enable [Impact](https://attack.mitre.org/tactics/TA0105).": "爱好者可能会部署rootkits来隐藏程序,文件,网络连接,服务,驱动程序和其他系统组件的存在. Rootkits是通过拦截和修改操作系统API调用提供系统信息来隐藏恶意软件存在的程序. rootkits或rootkit-促进功能可能存在于操作系统中的用户或内核级别,或更低. (批:企业ATT&CK 2018年1月).\n\n影响操作系统的固件根基几乎完全控制了系统。 虽然固件rootkits通常为主处理板开发,但也可以为附着在资产上的I/O开发. 压缩这个固件可以修改模块参与的所有过程变量和功能. 这可能导致无视命令和向主要装置提供虚假信息。 通过篡改设备流程,对手可能会抑制其预期的反应功能,并可能启用[impact](https://sattack.mitre.org/tactics/TA0105).",
    "Automated Collection": "自动收藏",
    "Adversaries may automate collection of industrial environment information using tools or scripts. This automated collection may leverage native control protocols and tools available in the control systems environment. For example, the OPC protocol may be used to enumerate and gather information. Access to a system or interface with these native protocols may allow collection and enumeration of other attached, communicating servers and devices.": "爱好者可以使用工具或脚本自动收集工业环境信息. 这种自动收集可能利用控制系统环境中现有的本地控制协议和工具。 例如,OPC协议可能被用来列举和收集信息. 访问一个系统或与这些本地协议的接口,可以收集和列出其他附着的、通信的服务器和设备.",
    "Block Reporting Message": "块报告信件",
    "Adversaries may block or prevent a reporting message from reaching its intended target. In control systems, reporting messages contain telemetry data (e.g., I/O values) pertaining to the current state of equipment and the industrial process. By blocking these reporting messages, an adversary can potentially hide their actions from an operator.\n\nBlocking reporting messages in control systems that manage physical processes may contribute to system impact, causing inhibition of a response function. A control system may not be able to respond in a proper or timely manner to an event, such as a dangerous fault, if its corresponding reporting message is blocked. (Citation: Bonnie Zhu, Anthony Joseph, Shankar Sastry 2011)  (Citation: Electricity Information Sharing and Analysis Center; SANS Industrial Control Systems March 2016)": "负面因素可能阻碍或阻止报告信息达到预定目标。 在控制系统中,报告信息包含与设备现状和工业过程有关的遥测数据(如I/O值)。 通过封杀这些报道信息,对手有可能向操作者隐瞒自己的行动.\n\n将报告信息屏蔽在管理物理过程的控制系统中,可能会助长系统撞击,导致对响应功能的抑制. 一个控制系统如果其相应的报告信息被屏蔽,可能无法适当或及时地应对某一事件,例如危险的过错. (引文:Bonnie Zhu, Anthony Joseph, Shankar Sastry 2011) (引文:电力信息共享和分析中心;SANS工业控制系统 2016年3月)",
    "Unauthorized Command Message": "未经授权的命令信件",
    "Adversaries may send unauthorized command messages to instruct control system assets to perform actions outside of their intended functionality, or without the logical preconditions to trigger their expected function. Command messages are used in ICS networks to give direct instructions to control systems devices. If an adversary can send an unauthorized command message to a control system, then it can instruct the control systems device to perform an action outside the normal bounds of the device's actions. An adversary could potentially instruct a control systems device to perform an action that will cause an [Impact](https://attack.mitre.org/tactics/TA0105). (Citation: Bonnie Zhu, Anthony Joseph, Shankar Sastry 2011)\n\nIn the Dallas Siren incident, adversaries were able to send command messages to activate tornado alarm systems across the city without an impending tornado or other disaster. (Citation: Zack Whittaker April 2017) (Citation: Benjamin Freed March 2019)": "逆行者可能会发出未经授权的命令信息,指示控制系统资产在其预期功能之外进行动作,或者没有逻辑先决条件来触发其预期功能. 指令信息在ICS网络中用于直接指示控制系统设备. 如果对手可以向控制系统发送未经授权的命令信息,那么它就可以指示控制系统设备在设备动作的正常界限外进行动作. 对手可能指示一个控制系统装置进行会造成[impact]的行动(https://sattack.mitre.org/tactics/TA0105)。 (英文:Bonnie Zhu, Anthony Joseph, Shankar Sastry 2011).\n\n在达拉斯西伦事件中,对手能够发出命令信息,以激活整个城市的龙卷风警报系统,而不会发生即将发生的龙卷风或其他灾难. (英文:Zack Whittaker April 2017) (英文(简体) )",
    "Adversaries may perform data destruction over the course of an operation. The adversary may drop or create malware, tools, or other non-native files on a target system to accomplish this, potentially leaving behind traces of malicious activities. Such non-native files and other data may be removed over the course of an intrusion to maintain a small footprint or as a standard part of the post-intrusion cleanup process. (Citation: Enterprise ATT&CK January 2018)\n\nData destruction may also be used to render operator interfaces unable to respond and to disrupt response functions from occurring as expected. An adversary may also destroy data backups that are vital to recovery after an incident.\n\nStandard file deletion commands are available on most operating system and device interfaces to perform cleanup, but adversaries may use other tools as well. Two examples are Windows Sysinternals SDelete and Active@ Killdisk.": "逆行者可能在行动过程中进行数据破坏. 对手可能在目标系统上放下或创建恶意软件,工具,或其他非本土文件来完成这项工作,有可能留下恶意活动的痕迹. 这种非本土文件和其他数据可能在入侵过程中被移除,以保持小脚印或作为入侵后清理过程的标准部分. (批:企业ATT&CK 2018年1月).\n\n数据破坏还可用于使操作者接口无法响应,并按预期破坏响应功能. 敌方也可能破坏对事故后恢复至关重要的数据备份。\n\n大多数操作系统和设备接口都有标准文件删除命令来进行清理,但对手也可能使用其他工具. 两个例子是Windows SysInternals SDELETE和Active@ Killdisk.",
    "Manipulation of View": "操作视图",
    "Adversaries may attempt to manipulate the information reported back to operators or controllers. This manipulation may be short term or sustained. During this time the process itself could be in a much different state than what is reported. (Citation: Corero) (Citation: Michael J. Assante and Robert M. Lee) (Citation: Tyson Macaulay) \n\nOperators may be fooled into doing something that is harmful to the system in a loss of view situation. With a manipulated view into the systems, operators may issue inappropriate control sequences that introduce faults or catastrophic failures into the system. Business analysis systems can also be provided with inaccurate data leading to bad management decisions.": "不良者可能试图操纵向操作员或控制员报告的信息。 这种操纵可能是短期的或持续的。 在此期间,这一进程本身可能处于与所报告情况大不相同的状态。 (简体中文:科雷罗)(简体中文:迈克尔·J·阿桑特和罗伯特·M·李)(简体中文:泰森·澳门莱)\n\n操作员可能在失去视野的情况下被骗去做对系统有害的事情. 如果对系统有被操纵的视角,操作者可能会发布不适当的控制序列,将断层或灾难性故障引入系统. 还可以向业务分析系统提供不准确的数据,导致管理决策不当.",
    "Data Historian Compromise": "数据历史妥协",
    "Adversaries may compromise and gain control of a data historian to gain a foothold into the control system environment. Access to a data historian may be used to learn stored database archival and analysis information on the control system. A dual-homed data historian may provide adversaries an interface from the IT environment to the OT environment. \n\nDragos has released an updated analysis on CrashOverride that outlines the attack from the ICS network breach to payload delivery and execution.  (Citation: Industroyer - Dragos - 201810) The report summarized that CrashOverride represents a new application of malware, but relied on standard intrusion techniques. In particular, new artifacts include references to a Microsoft Windows Server 2003 host, with a SQL Server. Within the ICS environment, such a database server can act as a data historian. Dragos noted a device with this role should be \"expected to have extensive connections\" within the ICS environment. Adversary activity leveraged database capabilities to perform reconnaissance, including directory queries and network connectivity checks.\n\nPermissions Required: Administrator\n\nContributors: Joe Slowik - Dragos": "逆行者可能会妥协并获得对数据历史学家的控制,以获得进入控制系统环境的立足点. 访问数据历史学家可能被用来学习存储的数据库档案和关于控制系统的分析信息. 一个双重数据历史学家可能为对手提供从信息技术环境到OT环境的接口.\n\nDragos发布了关于CrashOverride的最新分析,其中概述了从ICS网络突破到有效载荷交付和执行的攻击. (Citation: Industroyer - Dragos - 201810) 报告总结了CrashOverride代表恶意软件的新应用,但依赖于标准入侵技术. 特别是,新工艺品包括参考一个微软Windows Server 2003主机,有一个SQL Server. 在ICS环境中,这样的数据库服务器可以充当数据史学家. Dragos指出,具有这种作用的设备应该\"期望在ICS环境中有广泛的联系\". 反常活动利用数据库能力进行侦察,包括目录查询和网络连接检查。\n\n需要权限: 管理员\n\n贡献者: 乔·斯迪克 - 德拉戈斯",
    "Network Service Scanning is the process of discovering services on networked systems.  This can be achieved through a technique called port scanning or probing.  Port scanning interacts with the TCP/IP ports on a target system to determine whether ports are open, closed, or filtered by a firewall.  This does not reveal the service that is running behind the port, but since many common services are run on [https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml specific port numbers], the type of service can be assumed.  More in-depth testing includes interaction with the actual service to determine the service type and specific version.  One of the most-popular tools to use for Network Service Scanning is [https://nmap.org/ Nmap].\n\nAn adversary may attempt to gain information about a target device and its role on the network via Network Service Scanning techniques, such as port scanning.  Network Service Scanning is useful for determining potential vulnerabilities in services on target devices.  Network Service Scanning is closely tied to .\n\nScanning ports can be noisy on a network. In some attacks, adversaries probe for specific ports using custom tools. This was specifically seen in the Triton and PLC-Blaster attacks.": "网络服务 扫描是在网络系统中发现服务的过程. 这可以通过一种叫做端口扫描或探测的技术来实现. 端口扫描在目标系统上与TCP/IP端口交互,以确定端口是开放的,关闭的,还是被防火墙过滤的. 这并不显示在港口后面运行的服务,但由于许多共同事务是在[https://www.iana.org/agissions/ service-names-port-numbers/ service-names-port-numbers.xhtml 上运行的,因此可以假定服务的类型. 更深入的测试包括与实际服务的互动,以确定服务类型和具体版本. 用于网络服务扫描的最流行的工具之一是[https://nmap.org/Nmap].\n\n对手可能试图通过网络服务扫描技术(如端口扫描)获取目标设备及其在网络中的作用的信息. 网络服务扫描有助于确定目标设备服务的潜在弱点。 网络服务扫描与 .\n\n扫描端口在网络上会很吵. 在一些攻击中,对手使用自定义工具对特定端口进行探测. 在Triton和PLC-Blaster攻击中特别看到这一点.",
    "Adversaries may attempt to remove indicators of their presence on a system in an effort to cover their tracks. In cases where an adversary may feel detection is imminent, they may try to overwrite, delete, or cover up changes they have made to the device.": "逆行者可能试图去除他们出现在一个系统中的指标,以努力掩盖他们的踪迹. 如果对手可能感到即将被发现,他们可能会试图覆盖、删除或掩盖他们对设备所作的更改.",
    "I/O Image": "I/O 图像",
    "Adversaries may seek to capture process values related to the inputs and outputs of a PLC. During the scan cycle, a PLC reads the status of all inputs and stores them in an image table. (Citation: Nanjundaiah, Vaidyanath) The image table is the PLCs internal storage location where values of inputs/outputs for one scan are stored while it executes the user program. After the PLC has solved the entire logic program, it updates the output image table. The contents of this output image table are written to the corresponding output points in I/O Modules.\n\nThe Input and Output Image tables described above make up the I/O Image on a PLC. This image is used by the user program instead of directly interacting with physical I/O. (Citation: Spenneberg, Ralf 2016) \n\nAdversaries may collect the I/O Image state of a PLC by utilizing a devices [Native API](https://attack.mitre.org/techniques/T0834) to access the memory regions directly. The collection of the PLCs I/O state could be used to replace values or inform future stages of an attack.": "竞争者可能设法捕捉与项目法律顾问中心的投入和产出有关的流程值。 在扫描周期中,一个PLC读取所有输入的状态,并将其存储在一个图像表格中. (注:南琼达雅,瓦依延纳. 图像表是PLCs内部存储位置,在它执行用户程序时存储一个扫描输入/输出值. 在PLC解决了整个逻辑程序后,它更新了输出图像表. 此输出图像表的内容被写入I/O模块中相应的输出点.\n\n上述输入和输出图像表构成PLC上的I/O图像. 此图像被用户程序使用,而不是直接与物理 I/O 交互. (英文:Spenneberg, 拉尔夫 2016).\n\n爱好者可通过使用设备[Native API](https://sattack.mitre.org/techniques/T0834)直接访问内存区域来收集PLC的I/O图像状态. PLCs I/O状态的集合可用于替换值或为攻击的未来阶段提供信息.",
    "Denial of View": "拒绝查看",
    "Adversaries may cause a denial of view in attempt to disrupt and prevent operator oversight on the status of an ICS environment. This may manifest itself as a temporary communication failure between a device and its control source, where the interface recovers and becomes available once the interference ceases. (Citation: Corero) (Citation: Michael J. Assante and Robert M. Lee) (Citation: Tyson Macaulay) \n\nAn adversary may attempt to deny operator visibility by preventing them from receiving status and reporting messages. Denying this view may temporarily block and prevent operators from noticing a change in state or anomalous behavior. The environment's data and processes may still be operational, but functioning in an unintended or adversarial manner. ": "反面因素可能导致对视线的否定,企图扰乱和防止运营商对ICS环境状况的监督. 这可能表现为一个设备与其控制源之间的临时通信故障,一旦干扰停止,接口就会恢复并可用. (简体中文:科雷罗)(简体中文:迈克尔·J·阿桑特和罗伯特·M·李)(简体中文:泰森·澳门莱)\n\n对手可能试图通过阻止经营者接收状况和报告信息而剥夺其知名度。 否定这种观点可能会暂时封杀并阻止操作者注意到状态或异常行为的改变. 环境的数据和过程可能仍然在运作,但以意想不到或敌对的方式运作.",
    "Execution through API": "通过API执行",
    "Adversaries may attempt to leverage Application Program Interfaces (APIs) used for communication between control software and the hardware. Specific functionality is often coded into APIs which can be called by software to engage specific functions on a device or other software.": "爱好者可能试图利用用于控制软件与硬件之间通信的应用程序程序接口(API). 特定的功能往往被编码成API,可以通过软件调用,在设备或其他软件上操作特定的功能.",
    "Adversaries may perform supply chain compromise to gain control systems environment access by means of infected products, software, and workflows. Supply chain compromise is the manipulation of products, such as devices or software, or their delivery mechanisms before receipt by the end consumer. Adversary compromise of these products and mechanisms is done for the goal of data or system compromise, once infected products are introduced to the target environment. \n\nSupply chain compromise can occur at all stages of the supply chain, from manipulation of development tools and environments to manipulation of developed products and tools distribution mechanisms. This may involve the compromise and replacement of legitimate software and patches, such as on third party or vendor websites. Targeting of supply chain compromise can be done in attempts to infiltrate the environments of a specific audience. In control systems environments with assets in both the IT and OT networks, it is possible a supply chain compromise affecting the IT environment could enable further access to the OT environment.   \n\nCounterfeit devices may be introduced to the global supply chain posing safety and cyber risks to asset owners and operators. These devices may not meet the safety, engineering and manufacturing requirements of regulatory bodies but may feature tagging indicating conformance with industry standards. Due to the lack of adherence to standards and overall lesser quality, the counterfeit products may pose a serious safety and operational risk. (Citation: Control Global May 2019) \n\nYokogawa identified instances in which their customers received counterfeit differential pressure transmitters using the Yokogawa logo. The counterfeit transmitters were nearly indistinguishable with a semblance of functionality and interface that mimics the genuine product. (Citation: Control Global May 2019) \n\nF-Secure Labs analyzed the approach the adversary used to compromise victim systems with Havex. (Citation: Daavid Hentunen, Antti Tikkanen June 2014) The adversary planted trojanized software installers available on legitimate ICS/SCADA vendor websites. After being downloaded, this software infected the host computer with a Remote Access Trojan (RAT).": "规避者可能通过感染的产品、软件和工作流程进行供应链妥协,以获得控制系统环境的准入。 供应链妥协是指在最终消费者收到之前操纵设备或软件等产品或其交付机制. 一旦将受感染的产品引入目标环境,这些产品和机制就是为了实现数据或系统妥协的目标。\n\n供应链妥协可以在供应链的所有阶段发生,从操纵发展工具和环境到操纵发达产品和工具分配机制。 这可能涉及妥协和更换合法软件和补丁,例如第三方或供应商网站。 在试图渗透特定受众的环境时,可以针对供应链妥协。 在信息技术网络和OT网络中拥有资产的控制系统环境中,影响信息技术环境的供应链妥协有可能使进一步进入OT环境。\n\n可将伪造装置引入全球供应链,给资产所有人和运营商带来安全和网络风险。 这些装置可能不符合管理机构的安全、工程和制造要求,但可能带有符合行业标准的标记。 由于不遵守标准和总体质量较低,假冒产品可能构成严重的安全和操作风险。 (英文:Control Global May 2019) (中文(简体) ).\n\n洋子川发现了客户使用洋子川标识接收假差分压力发射机的情况. 假发机几乎与模仿真品的功能和接口相去甚远。 (英文:Control Global May 2019) (中文(简体) ).\n\nF -安全实验室分析了对手用来 破坏受害者系统的方法 和Havex。 (城镇:达维德·亨图恩,安蒂·蒂卡宁 2014年6月). 对手在合法的ICS/SCADA供应商网站安装了Trojan化软件安装器。 在被下载后,这个软件用远程访问特洛伊(RAT)感染了主机.",
    "Serial Connection Enumeration": "串行连接编号",
    "Adversaries may perform serial connection enumeration to gather situational awareness after gaining access to devices in the OT network. Control systems devices often communicate to each other via various types of serial communication mediums. These serial communications are used to facilitate informational communication, as well as commands.  Serial Connection Enumeration differs from I/O Module Discovery, as I/O modules are auxiliary systems to the main system, and devices that are connected via serial connection are normally discrete systems.\n\nWhile IT and OT networks may work in tandem, the exact structure of the OT network may not be discernible from the IT network alone. After gaining access to a device on the OT network, an adversary may be able to enumerate the serial connections. From this perspective, the adversary can see the specific physical devices to which the compromised device is connected to. This gives the adversary greater situational awareness and can influence the actions that the adversary can take in an attack.": "爱好者可能在进入OT网络的设备后进行串行连接计数,以收集情况意识. 控制系统设备经常通过各种系列通信媒介互相通信. 这些系列通信用于便利信息通信以及指令. 串联编号不同于I/O模块发现,因为I/O模块是主系统的辅助系统,通过串联连接连接的设备通常是离散系统.\n\n虽然信息技术网络和OT网络可能协同运作,但仅从IT网络中可能看不出OT网络的确切结构。 在进入OT网络上的某个设备后,对手可能可以列举序列连接. 从这个角度看,对手可以看到受损设备所连接的具体物理装置. 这提高了对手对情况的认识,并能够影响对手在攻击中可以采取的行动.",
    "Loss of Safety": "安全损失",
    "Adversaries may compromise safety system functions designed to maintain safe operation of a process when unacceptable or dangerous conditions occur. Safety systems are often composed of the same elements as control systems but have the sole purpose of ensuring the process fails in a predetermined safe manner. \n\nMany unsafe conditions in process control happen too quickly for a human operator to react to. Speed is critical in correcting these conditions to limit serious impacts such as Loss of Control and Property Damage. \n\nAdversaries may target and disable safety system functions as a prerequisite to subsequent attack execution or to allow for future unsafe conditionals to go unchecked. Detection of a Loss of Safety by operators can result in the shutdown of a process due to strict policies regarding safety systems. This can cause a Loss of Productivity and Revenue and may meet the technical goals of adversaries seeking to cause process disruptions.": "当发生不可接受的或危险的情况时,逆行者可能会损害旨在维持某一过程的安全运行的安全系统功能。 安全系统通常由与控制系统相同的要素组成,但唯一的目的是确保程序以预定的安全方式失败。\n\n控制过程中的许多不安全条件发生得太快,人类操作人员无法作出反应。 速度对于纠正这些状况以限制诸如控制损失和财产损失等严重影响至关重要。\n\n逆行者可能会将安全系统功能作为目标并禁用,作为后续攻击执行的前提条件,或允许未来的不安全条件不受限制. 操作者发现安全损失,由于对安全系统的严格政策,可能导致一个过程的关闭。 这可能造成生产力和收入损失,并可能达到对手试图造成进程中断的技术目标.",
    "Loss of Productivity and Revenue": "生产力和收入损失",
    "Adversaries may cause loss of productivity and revenue through disruption and even damage to the availability and integrity of control system operations, devices, and related processes. This technique may manifest as a direct effect of an ICS-targeting attack or tangentially, due to an IT-targeting attack against non-segregated environments. \n\nIn cases where these operations or services are brought to a halt, the loss of productivity may eventually present an impact for the end-users or consumers of products and services. The disrupted supply-chain may result in supply shortages and increased prices, among other consequences. \n\nA ransomware attack on an Australian beverage company resulted in the shutdown of some manufacturing sites, including precautionary halts to protect key systems. (Citation: Paganini, Pierluigi June 2020) The company announced the potential for temporary shortages of their products following the attack. (Citation: Paganini, Pierluigi June 2020) (Citation: Lion Corporation June 2020) \n\nIn the 2021 Colonial Pipeline ransomware incident, the pipeline was unable to transport approximately 2.5 million barrels of fuel per day to the East Coast.  (Citation: Colonial Pipeline Company May 2021)": "不良因素可能由于控制系统操作、装置和相关流程的可用性和完整性受到干扰甚至损害而导致生产力和收入的损失。 由于信息技术针对非隔离环境的攻击,这种技术可能表现为科技中心针对目标的攻击的直接效果或微乎其微。\n\n如果这些业务或服务停止,生产力的丧失最终可能对产品和服务的最终用户或消费者产生影响。 供应链中断可能造成供应短缺和价格上涨等后果。\n\n对一家澳大利亚饮料公司的赎金袭击导致一些制造厂点关闭,包括为保护关键系统而采取防范性停业措施。 (英文:Paganini, Pierluigi 2020年6月). 该公司宣布,在袭击发生后,他们的产品有可能暂时短缺。 (简体中文:帕格尼尼,皮耶鲁伊吉2020年6月)(简体中文:狮子公司2020年6月)\n\n在2021年殖民管道赎金软件事件中,该管道无法每天运送约250万桶燃料到东海岸. (批:殖民管道公司2021年5月)",
    "Spearphishing Attachment": "引导附件",
    "Adversaries may use a spearphishing attachment, a variant of spearphishing, as a form of a social engineering attack against specific targets. Spearphishing attachments are different from other forms of spearphishing in that they employ malware attached to an email. All forms of spearphishing are electronically delivered and target a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon [User Execution](https://attack.mitre.org/techniques/T0863) to gain execution and access. (Citation: Enterprise ATT&CK October 2019) \n\nA Chinese spearphishing campaign running from December 9, 2011 through February 29, 2012, targeted ONG organizations and their employees. The emails were constructed with a high level of sophistication to convince employees to open the malicious file attachments. (Citation: CISA AA21-201A Pipeline Intrusion July 2021)": "爱好者可以使用长矛捕捉附着,长矛捕捉的变体,作为社会工程攻击特定目标的一种形式. Speophiling附件与其他形式的Speophiling不同,因为它们使用附在电子邮件上的恶意软件。 各种形式的矛头钓鱼均以电子方式投放,针对特定个人、公司或行业。 在这种情景下,对手在Speophilshing电子邮件中附加一个文件,通常依靠[用户执行](https://sattack.mitre.org/techniques/T0863)获得执行和访问. (批:企业ATT&CK 2019年10月)\n\n从2011年12月9日至2012年2月29日, 电子邮件的构建高度精密,以说服员工打开恶意文件附件. (编号:CISA AA21-201A) 管道入侵 2021年7月",
    "Location Identification": "标识",
    "Adversaries may perform location identification using device data to inform operations and targeted impact for attacks. Location identification data can come in a number of forms, including geographic location, location relative to other control system devices, time zone, and current time. An adversary may use an embedded global positioning system (GPS) module in a device to figure out the physical coordinates of a device. NIST SP800-82 recommends that devices utilize GPS or another location determining mechanism to attach appropriate timestamps to log entries (Citation: Guidance - NIST SP800-82). While this assists in logging and event tracking, an adversary could use the underlying positioning mechanism to determine the general location of a device. An adversary can also infer the physical location of serially connected devices by using serial connection enumeration. \n\nAn adversary attempt to attack and cause Impact could potentially affect other control system devices in close proximity. Device local-time and time-zone settings can also provide adversaries a rough indicator of device location, when specific geographic identifiers cannot be determined from the system.": "逆行者可能利用设备数据进行位置识别,为行动提供信息,并对攻击进行有针对性的撞击。 位置识别数据可以有多种形式,包括地理位置,相对于其他控制系统设备的位置,时区,以及当前时间. 对手可以使用设备中的嵌入式全球定位系统模块来计算设备的物理坐标. NIST SP800-82建议设备使用GPS或其他定位确定机制附加适当的时间戳记录条目(Citation: Guideline - NIST SP800-82)。 虽然这有助于记录和事件跟踪,但敌方可以使用基本定位机制来确定设备的一般位置。 对手还可以通过使用串联计数法推断串联设备的物理位置.\n\n敌方企图攻击并造成撞击,可能会影响到邻近的其他控制系统装置。 当系统无法确定具体的地理标识时,设备本地时间和时区设置也可以为对手提供设备位置的粗略指标.",
    "Drive-by Compromise": "驱动妥协",
    "Adversaries may gain access to a system during a drive-by compromise, when a user visits a website as part of a regular browsing session. With this technique, the user's web browser is targeted and exploited simply by visiting the compromised website. \n\nThe adversary may target a specific community, such as trusted third party suppliers or other industry specific groups, which often visit the target website. This kind of targeted attack relies on a common interest, and is known as a strategic web compromise or watering hole attack. \n\nThe National Cyber Awareness System (NCAS) has issued a Technical Alert (TA) regarding Russian government cyber activity targeting critical infrastructure sectors. (Citation: Cybersecurity & Infrastructure Security Agency March 2018) Analysis by DHS and FBI has noted two distinct categories of victims in the Dragonfly campaign on the Western energy sector: staging and intended targets. The adversary targeted the less secure networks of staging targets, including trusted third-party suppliers and related peripheral organizations. Initial access to the intended targets used watering hole attacks to target process control, ICS, and critical infrastructure related trade publications and informational websites.": "当用户访问一个网站作为正常浏览会话的一部分时,爱好者可能会在驱动器折中期间访问一个系统。 有了这一技术,用户的网页浏览器就成了目标,只是通过访问失密的网站来加以利用.\n\n对手可能针对某个特定社区,例如信任的第三方供应商或其他行业特定群体,他们经常访问目标网站。 这种有针对性的攻击依赖于共同利益,被称为战略网络妥协或水洞攻击.\n\n国家网络意识系统发布了关于俄罗斯政府针对关键基础设施部门的网络活动的技术警报。 (Citation: Cybersecurity & Information Security Agency March 2018) 美国国土安全部和联邦调查局的分析发现,在西方能源部门的飞龙运动中,有两类不同的受害者:中转和预定目标. 对手针对的是安全性较低的中转目标网络,包括信任的第三方供应商和相关外围组织。 最初进入预定目标时使用了浇水洞攻击,以控制流程、ICS和与贸易有关的重要基础设施出版物和信息网站为目标.",
    "Damage to Property": "财产损失",
    "Adversaries may cause damage and destruction of property to infrastructure, equipment, and the surrounding environment when attacking control systems. This technique may result in device and operational equipment breakdown, or represent tangential damage from other techniques used in an attack. Depending on the severity of physical damage and disruption caused to control processes and systems, this technique may result in [Loss of Safety](https://attack.mitre.org/techniques/T0880). Operations that result in [Loss of Control](https://attack.mitre.org/techniques/T0827) may also cause damage to property, which may be directly or indirectly motivated by an adversary seeking to cause impact in the form of [Loss of Productivity and Revenue](https://attack.mitre.org/techniques/T0828). \n\n\nThe German Federal Office for Information Security (BSI) reported a targeted attack on a steel mill under an incidents affecting business section of its 2014 IT Security Report. (Citation: BSI State of IT Security 2014)  These targeted attacks affected industrial operations and resulted in breakdowns of control system components and even entire installations. As a result of these breakdowns, massive impact and damage resulted from the uncontrolled shutdown of a blast furnace. \n\nA Polish student used a remote controller device to interface with the Lodz city tram system in Poland. (Citation: John Bill May 2017) (Citation: Shelley Smith February 2008) (Citation: Bruce Schneier January 2008) Using this remote, the student was able to capture and replay legitimate tram signals. This resulted in damage to impacted trams, people, and the surrounding property. Reportedly, four trams were derailed and were forced to make emergency stops. (Citation: Shelley Smith February 2008) Commands issued by the student may have also resulted in tram collisions, causing harm to those on board and the environment outside. (Citation: Bruce Schneier January 2008)": "破坏者在攻击控制系统时可能对基础设施、设备和周围环境造成破坏和破坏。 这一技术可能导致装置和操作设备故障,或造成攻击所用其他技术的微小损害。 根据对控制过程和系统造成的物理损害和干扰的严重程度,这一技术可能导致[安全损失](https://sattack.mitre.org/techniques/T0880)。 造成[管制损失]的行动(https://sattack.mitre.org/techniques/T0827)也可能造成财产损失,这种损害可能直接或间接地受到以[生产力和收入损失]形式(https://sattack.mitre.org/techniques/T0828)造成影响的对手的动机。\n\n\n德国联邦信息安全局(BSI)报告说,在影响其2014年IT安全报告商务部分的事件中,有针对性地袭击了一家钢铁厂。 (案件:2014年BSI信息技术安全状况) 这些有针对性的攻击影响到工业业务,导致控制系统部件甚至整个设施崩溃。 由于这些故障,爆炸炉无控制地关闭,造成了巨大的冲击和破坏。\n\n一名波兰学生使用遥控器设备与波兰的洛兹城市有轨电车系统接口. (注:约翰·比尔2017年5月)(注:雪莱·史密斯2008年2月)(注:布鲁斯·施奈尔2008年1月) 使用这个遥控器,学生能够捕捉和重播合法的有轨电车信号. 这导致受影响的有轨电车、人和周围财产受损。 据报道,有4辆电车脱轨,被迫紧急停车。 (2008年2月,雪莱·史密斯) 学生发布的指令也可能导致有轨电车碰撞,对机上人员及外界环境造成伤害. (2008年1月,布鲁斯·施奈尔)",
    "Spoof Reporting Message": "Spoof 报告消息",
    "Adversaries may spoof reporting messages in control system environments for evasion and to impair process control. In control systems, reporting messages contain telemetry data (e.g., I/O values) pertaining to the current state of equipment and the industrial process. Reporting messages are important for monitoring the normal operation of a system or identifying important events such as deviations from expected values. \n\nIf an adversary has the ability to Spoof Reporting Messages, they can impact the control system in many ways. The adversary can Spoof Reporting Messages that state that the process is operating normally, as a form of evasion. The adversary could also Spoof Reporting Messages to make the defenders and operators think that other errors are occurring in order to distract them from the actual source of a problem. (Citation: Bonnie Zhu, Anthony Joseph, Shankar Sastry 2011) ": "规避者可能在控制系统环境中偷漏报信息,从而损害流程控制。 在控制系统中,报告信息包含与设备现状和工业过程有关的遥测数据(如I/O值)。 报告信息对于监测一个系统的正常运作或确定偏离预期值等重要事件十分重要。\n\n如果对手具有Spoof报告消息的能力,他们可以在许多方面影响控制系统. 对手可以 Spoof 报告消息,声明程序是正常运行的,是一种逃避形式. 对手还可以通过Spoof报告消息,让维权者和运营商认为其他错误正在发生,以分散他们对问题实际根源的注意力. (英文:Bonnie Zhu, Anthony Joseph, Shankar Sastry 2011)",
    "Adversaries may exploit a software vulnerability to take advantage of a programming error in a program, service, or within the operating system software or kernel itself to enable remote service abuse. A common goal for post-compromise exploitation of remote services is for initial access into and lateral movement throughout the ICS environment to enable access to targeted systems. (Citation: Enterprise ATT&CK)\n\nICS asset owners and operators have been affected by ransomware (or disruptive malware masquerading as ransomware) migrating from enterprise IT to ICS environments: WannaCry, NotPetya, and BadRabbit. In each of these cases, self-propagating (wormable) malware initially infected IT networks, but through exploit (particularly the SMBv1-targeting MS17-010 vulnerability) spread to industrial networks, producing significant impacts. (Citation: Joe Slowik April 2019)": "爱好者可能利用软件的脆弱性来利用程序,服务,或操作系统软件或内核本身的编程错误,从而导致远程服务滥用. 妥协后利用远程服务的共同目标是初步进入和横向移动整个ICS环境,以便能够进入目标系统。 (批:企业ATT&CK)\n\nICS资产所有人和运营商受到从企业IT向ICS环境迁移的赎金软件(或伪装成赎金软件的破坏性恶意软件)的影响:WannaCry, NotPetya,和BadRabbbit. 在每一种情况下,自我传播(可驱虫)恶意软件最初都感染了IT网络,但通过利用(特别是SMBv1-目标MS17-010脆弱性)扩散到工业网络,产生了重大影响。 (英文:Joe Slowik April 2019) (英文(简体) )",
    "Default Credentials": "默认证书",
    "Adversaries may leverage manufacturer or supplier set default credentials on control system devices. These default credentials may have administrative permissions and may be necessary for initial configuration of the device. It is general best practice to change the passwords for these accounts as soon as possible, but some manufacturers may have devices that have passwords or usernames that cannot be changed. (Citation: Keith Stouffer May 2015)\n\nDefault credentials are normally documented in an instruction manual that is either packaged with the device, published online through official means, or published online through unofficial means. Adversaries may leverage default credentials that have not been properly modified or disabled.": "爱好者可能会利用制造商或供应商设定控制系统设备的默认证书. 这些默认的证书可能具有行政许可,可能是设备初始配置所必需的. 一般的最佳做法是尽快更改这些账户的密码,但有些制造商可能拥有无法更改的密码或用户名的设备. (英文(简体) Keith Stouffer May 2015).\n\n默认的证书通常被记录在一个指导手册中,该手册要么与设备包装在一起,要么通过官方手段在线发布,要么通过非官方手段在线发布. 爱好者可能会利用未适当修改或禁用过的默认证书.",
    "External Remote Services": "外部远程服务",
    "Adversaries may leverage external remote services as a point of initial access into your network. These services allow users to connect to internal network resources from external locations. Examples are VPNs, Citrix, and other access mechanisms. Remote service gateways often manage connections and credential authentication for these services. (Citation: Daniel Oakley, Travis Smith, Tripwire)\n\nExternal remote services allow administration of a control system from outside the system. Often, vendors and internal engineering groups have access to external remote services to control system networks via the corporate network. In some cases, this access is enabled directly from the internet. While remote access enables ease of maintenance when a control system is in a remote area, compromise of remote access solutions is a liability. The adversary may use these services to gain access to and execute attacks against a control system network. Access to valid accounts is often a requirement. \n\nAs they look for an entry point into the control system network, adversaries may begin searching for existing point-to-point VPN implementations at trusted third party networks or through remote support employee connections where split tunneling is enabled. (Citation: Electricity Information Sharing and Analysis Center; SANS Industrial Control Systems March 2016)\n": "爱好者可能会利用外部远程服务作为初始接入点进入您的网络. 这些服务允许用户从外部地点连接到内部网络资源. 例如VPNs,Citrix以及其他访问机制. 远程服务网关经常管理这些服务的连接和认证. (点击:丹尼尔·奥克利,特拉维斯·史密斯,特里普韦尔)\n\n外部远程服务允许从系统外管理一个控制系统。 供应商和内部工程集团往往可以利用外部远程服务,通过公司网络控制系统网络。 在某些情况下,这种访问直接通过互联网进行。 虽然远程访问使得在控制系统处于偏远地区时可以方便地进行维护,但妥协远程访问解决方案是一种责任。 敌方可利用这些服务进入控制系统网络并对其实施攻击。 获取有效账户往往是一项要求。\n\n在他们寻找进入控制系统网络的入口时,对手可能开始在可信赖的第三方网络中搜索现有的点对点VPN执行,或通过远程支持员工连接,在允许分割隧道的情况下. (点击:电力信息共享分析中心;SANS工业控制系统2016年3月).\n",
    "Brute Force I/O": "暴风雨一/O",
    "Adversaries may repetitively or successively change I/O point values to perform an action. Brute Force I/O may be achieved by changing either a range of I/O point values or a single point value repeatedly to manipulate a process function. The adversary's goal and the information they have about the target environment will influence which of the options they choose. In the case of brute forcing a range of point values, the adversary may be able to achieve an impact without targeting a specific point. In the case where a single point is targeted, the adversary may be able to generate instability on the process function associated with that particular point. \n\nAdversaries may use Brute Force I/O to cause failures within various industrial processes. These failures could be the result of wear on equipment or damage to downstream equipment.": "逆差可能重复或相继改变I/O点值来进行动作. Brute Force I/O可以通过改变一个I/O点值范围或一个单一点值反复操作一个过程函数来实现. 对手的目标以及他们对目标环境掌握的信息将影响他们选择的哪一种选择。 在野蛮地强迫一系列点值的情况下,对手可能能够在不瞄准特定点的情况下取得效果. 如果目标为单一点,对手可能使与该特定点有关的进程功能不稳定。\n\n悖论者可能使用Brute Force I/O在各种工业流程中造成故障. 这些故障可能是设备磨损或下游设备损坏所致.",
    "Detect Program State": "检测方案状态",
    "Adversaries may seek to gather information about the current state of a program on a PLC. State information reveals information about the program, including whether it's running, halted, stopped, or has generated an exception. This information may be leveraged as a verification of malicious program execution or to determine if a PLC is ready to download a new program.": "爱好者可能寻求收集关于PLC上一个程序目前状况的信息. 国家信息揭示了这个计划的信息,包括它是否运行,停止,停止,或者产生了例外. 这些信息可能被用作对恶意程序执行的验证,或用于确定PLC是否准备下载新程序.",
    "Adversaries with privileged network access may seek to modify network traffic in real time using adversary-in-the-middle (AiTM) attacks. (Citation: Gabriel Sanchez October 2017) This type of attack allows the adversary to intercept traffic to and/or from a particular device on the network. If a AiTM attack is established, then the adversary has the ability to block, log, modify, or inject traffic into the communication stream. There are several ways to accomplish this attack, but some of the most-common are Address Resolution Protocol (ARP) poisoning and the use of a proxy. (Citation: Bonnie Zhu, Anthony Joseph, Shankar Sastry 2011)  \n\nAn AiTM attack may allow an adversary to perform the following attacks:  \n[Block Reporting Message](https://attack.mitre.org/techniques/T0804), [Spoof Reporting Message](https://attack.mitre.org/techniques/T0856), [Modify Parameter](https://attack.mitre.org/techniques/T0836), [Unauthorized Command Message](https://attack.mitre.org/techniques/T0855)": "拥有特权网络访问权的流浪者可能试图利用对手在中间(AiTM)攻击来实时修改网络流量. (英文(简体) :Gabriel Sanchez October 2017). 这种类型的攻击使得对手能够拦截网络上某个特定设备的交通往来. 如果AiTM攻击被确定,那么对手就有能力阻断,日志,修改,或者将流量注入通信流. 完成这次攻击有几种方法,但一些最常见的是解决解决协议(ARP)中毒和使用代理. (英文:Bonnie Zhu, Anthony Joseph, Shankar Sastry 2011).\n\n自动取款机攻击可能允许对手进行下列攻击:\n[Block reporting message] (https://sattack.mitre.org/techniques/T0804),, 互联网档案馆的存檔,存档日期2014-09-04. [Spoof报告信息](https://sattack.mitre.org/techniques/T0856),[改进参数](https://sattack.mitre.org/techniques/T0836), [未经授权的命令通 (https://sattack.mitre.org/techniques/T0855)",
    "Exploitation for Evasion": "剥削撤离",
    "Adversaries may exploit a software vulnerability to take advantage of a programming error in a program, service, or within the operating system software or kernel itself to evade detection. Vulnerabilities may exist in software that can be used to disable or circumvent security features.  \n\nAdversaries may have prior knowledge through [Remote System Information Discovery](https://attack.mitre.org/techniques/T0888) about security features implemented on control devices. These device security features will likely be targeted directly for exploitation. There are examples of firmware RAM/ROM consistency checks on control devices being targeted by adversaries to enable the installation of malicious [System Firmware](https://attack.mitre.org/techniques/T0857).": "爱好者可能会利用软件的脆弱性来利用程序,服务,或操作系统软件或内核本身的编程错误来逃避检测. 在可用于禁用或规避安全特性的软件中可能存在脆弱性。\n\n爱好者可能通过[检索系统信息发现](https://sattack.mitre.org/techniques/T0888)事先了解控制设备上实施的安全特性. 这些装置的安全性能很可能成为直接开发的目标。 有一些实例表明,敌方正在对控制装置进行固件RAM/ROM一致性检查,以便能够安装恶意[系统固件](https://sattack.mitre.org/techniques/T0857).",
    "Loss of Control": "失去控制权",
    "Adversaries may seek to achieve a sustained loss of control or a runaway condition in which operators cannot issue any commands even if the malicious interference has subsided. (Citation: Corero) (Citation: Michael J. Assante and Robert M. Lee) (Citation: Tyson Macaulay)\n\nThe German Federal Office for Information Security (BSI) reported a targeted attack on a steel mill in its 2014 IT Security Report.(Citation: BSI State of IT Security 2014) These targeted attacks affected industrial operations and resulted in breakdowns of control system components and even entire installations. As a result of these breakdowns, massive impact resulted in damage and unsafe conditions from the uncontrolled shutdown of a blast furnace.": "逆行者可能寻求实现持续失去控制,或出现运营者即使恶意干扰已经平息也无法发布任何命令的逃逸状况. (简体中文:科雷罗)(简体中文:迈克尔·J·阿桑特和罗伯特·M·李)(简体中文:泰森·澳门莱)\n\n德国联邦信息安全局(BSI)在其2014年IT安全报告(Citation:BSI Station of IT Security 2014)中报告了对一家钢铁厂的定点袭击. 这些有针对性的攻击影响到工业业务,导致控制系统部件甚至整个设施崩溃。 由于这些故障,爆炸炉无节制地关闭,造成大量破坏和不安全条件.",
    "Change Program State": "更改程序状态",
    "Adversaries may attempt to change the state of the current program on a control device. Program state changes may be used to allow for another program to take over control or be loaded onto the device.": "爱好者可能会试图改变控制设备上当前程序的状态. 程序状态变化可能被用于允许另一个程序接管控制或被加载到设备上.",
    "Adversaries may hook into application programming interface (API) functions used by processes to redirect calls for execution and privilege escalation means. Windows processes often leverage these API functions to perform tasks that require reusable system resources. Windows API functions are typically stored in dynamic-link libraries (DLLs) as exported functions. (Citation: Enterprise ATT&CK)\n\nOne type of hooking seen in ICS involves redirecting calls to these functions via import address table (IAT) hooking. IAT hooking uses modifications to a process IAT, where pointers to imported API functions are stored. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)": "逆行者可能会将应用编程接口(API)的功能钩入进程用于重定向执行的调用和特权升级手段. Windows进程经常利用这些API功能来执行需要可重复使用的系统资源的任务. Windows API功能一般作为导出功能存储在动态链接库(DLL)中. (批:企业ATT&CK)\n\n在ICS中看到的一类钩子是通过导入地址表(IAT)钩子将呼叫重定向到这些函数. IAT悬钩使用修改过程IAT,其中对导入的API函数的指针被存储. (案件:Nicolas Falliere、Liam O Murchu、Eric Chien 2011年2月)",
    "Control Device Identification": "控制设备识别",
    "Adversaries may perform control device identification to determine the make and model of a target device. Management software and device APIs may be utilized by the adversary to gain this information. By identifying and obtaining device specifics, the adversary may be able to determine device vulnerabilities. This device information can also be used to understand device functionality and inform the decision to target the environment.": "爱好者可能进行控制设备识别以确定目标设备的制作和模型. 管理软件和设备API可能被对手用来获取这些信息. 通过识别和获取设备细节,对手可能能够确定设备的弱点。 这种设备信息也可以用来理解设备的功能,并告知针对环境的决定.",
    "Program Organization Units": "方案组织单位",
    "Program Organizational Units (POUs) are block structures used within PLC programming to create programs and projects. (Citation: Guidance - IEC61131) POUs can be used to hold user programs written in IEC 61131-3 languages: Structured text, Instruction list, Function block, and Ladder logic. (Citation: Guidance - IEC61131) Application - 201203 They can also provide additional functionality, such as establishing connections between the PLC and other devices using TCON. (Citation: PLCBlaster - Spenneberg)\n  \nStuxnet uses a simple code-prepending infection technique to infect Organization Blocks (OB). For example, the following sequence of actions is performed when OB1 is infected  (Citation: Stuxnet - Symantec - 201102):\n*Increase the size of the original block.\n*Write malicious code to the beginning of the block.\n*Insert the original OB1 code after the malicious code.": "方案组织单位(POU)是PLC编程中用于创建方案和项目的块结构. (分类:指导-IEC61131). POU可用于持有以 IEC 61131-3 语言编写的用户程序: 结构化文本,指令列表,函数块,以及梯形逻辑. (批:指导 - IEC61131) 应用 - 201203 它们也可以提供额外的功能,如在PLC与使用TCON的其他设备之间建立连接. (英文:PLCBlaster - Spenneberg).\n\nStuxnet使用简单的密码预置感染技术感染组织块(OB). 例如,OB1被感染时会进行以下一系列动作(Citation: Stuxnet - Symantec - 201102):\n* 增加原区块的面积。\n*写恶意代码到块的开头.\n* 在恶意代码后插入原始的OB1代码.",
    "Graphical User Interface": "图形用户界面",
    "Adversaries may attempt to gain access to a machine via a Graphical User Interface (GUI) to enhance execution capabilities. Access to a GUI allows a user to interact with a computer in a more visual manner than a CLI. A GUI allows users to move a cursor and click on interface objects, with a mouse and keyboard as the main input devices, as opposed to just using the keyboard.\n\nIf physical access is not an option, then access might be possible via protocols such as VNC on Linux-based and Unix-based operating systems, and RDP on Windows operating systems. An adversary can use this access to execute programs and applications on the target machine.": "爱好者可能试图通过图形用户界面(GUI)获取一台机器,以提高执行能力. 访问GUI可以让用户以比CLI更视觉的方式与计算机互动. 一个GUI允许用户移动光标并点击界面对象,以鼠标和键盘为主要输入设备,而不是仅仅使用键盘.\n\n如果物理访问不是一个选项,那么通过协议,比如基于Linux和Unix的操作系统的VNC,以及Windows操作系统的RDP,访问就可能实现. 对手可以利用此权限执行目标机上的程序和应用.",
    "Rogue Master": "流氓大师",
    "Adversaries may setup a rogue master to leverage control server functions to communicate with outstations. A rogue master can be used to send legitimate control messages to other control system devices, affecting processes in unintended ways. It may also be used to disrupt network communications by capturing and receiving the network traffic meant for the actual master. Impersonating a master may also allow an adversary to avoid detection. \n\nIn the case of the 2017 Dallas Siren incident, adversaries used a rogue master to send command messages to the 156 distributed sirens across the city, either through a single rogue transmitter with a strong signal, or using many distributed repeaters. (Citation: Bastille April 2017) (Citation: Zack Whittaker April 2017)": "爱好者可能会设置一个无赖主机来利用控制服务器功能来与外站通信. 流氓大师可以用来向其他控制系统设备发送合法的控制信息,以意想不到的方式影响进程. 也可以通过捕捉和接收为实际主人准备的网络流量来破坏网络通信. 冒充主人也可能让对手逃避发现.\n\n在2017年达拉斯西伦事件方面,对手使用流氓大师向全市156个分布式警笛发送指令信息,要么通过一个具有强大信号的单一无赖发射机,要么使用许多分布式中继器. (简体中文:巴士底市 2017年4月)(简体中文:Zack Whittaker 2017年4月)",
    "Adversaries may directly interact with the native OS application programming interface (API) to access system functions. Native APIs provide a controlled means of calling low-level OS services within the kernel, such as those involving hardware/devices, memory, and processes. (Citation: The MITRE Corporation May 2017) These native APIs are leveraged by the OS during system boot (when other system components are not yet initialized) as well as carrying out tasks and requests during routine operations. \n\nFunctionality provided by native APIs are often also exposed to user-mode applications via interfaces and libraries. For example, functions such as memcpy and direct operations on memory registers can be used to modify user and system memory space.": "爱好者可能直接与本土OS应用程序编程接口(API)互动,以访问系统功能. 原生API提供了在内核内调用低级OS服务的可控手段,如涉及硬件/devices,内存,和进程等. (简体中文:MITRE公司 2017年5月). 这些原生的API在系统启动(当其他系统组件尚未初始化时)以及常规操作中执行任务和请求时被OS利用.\n\n本地API提供的功能性也经常通过界面和库接触用户-mode应用程序. 例如,内存登记册上的memcpy和直接操作等功能可用于修改用户和系统内存空间.",
    "Loss of Availability": "丧失可用性",
    "Adversaries may attempt to disrupt essential components or systems to prevent owner and operator from delivering products or services. (Citation: Corero) (Citation: Michael J. Assante and Robert M. Lee) (Citation: Tyson Macaulay) \n\nAdversaries may leverage malware to delete or encrypt critical data on HMIs, workstations, or databases.\n\nIn the 2021 Colonial Pipeline ransomware incident, pipeline operations were temporally halted on May 7th and were not fully restarted until May 12th. (Citation: Colonial Pipeline Company May 2021)": "不良者可能试图破坏基本部件或系统,以防止所有者和运营者提供产品或服务。 (简体中文:科雷罗)(简体中文:迈克尔·J·阿桑特和罗伯特·M·李)(简体中文:泰森·澳门莱)\n\n不良者可能会利用恶意软件来删除或加密HMIs,工作站或数据库上的关键数据.\n\n在2021年殖民管道赎金器械事件中,管道业务于5月7日暂时停止,直到5月12日才全面重启. (批:殖民管道公司2021年5月)",
    "Theft of Operational Information": "盗窃业务信息",
    "Adversaries may steal operational information on a production environment as a direct mission outcome for personal gain or to inform future operations. This information may include design documents, schedules, rotational data, or similar artifacts that provide insight on operations.    In the Bowman Dam incident, adversaries probed systems for operational data. (Citation: Mark Thompson March 2016) (Citation: Danny Yadron December 2015)": "爱好者可能盗取生产环境的业务信息,作为直接的任务结果,以谋取个人利益或为未来的行动提供信息. 这些信息可能包括设计文件,时间表,旋转数据,或者提供操作见解的类似文物. 在鲍曼水坝事件中,对手对操作数据系统进行了探测. (英文(简体) Mark Thompson March 2016) (英文(简体) )",
    "System Firmware": "系统固件",
    "System firmware on modern assets is often designed with an update feature. Older device firmware may be factory installed and require special reprograming equipment. When available, the firmware update feature enables vendors to remotely patch bugs and perform upgrades. Device firmware updates are often delegated to the user and may be done using a software update package. It may also be possible to perform this task over the network. \n\nAn adversary may exploit the firmware update feature on accessible devices to upload malicious or out-of-date firmware. Malicious modification of device firmware may provide an adversary with root access to a device, given firmware is one of the lowest programming abstraction layers. (Citation: Basnight, Zachry, et al.)": "现代资产上的系统固件往往具有更新功能。 旧设备固件可能是工厂安装的,需要特殊重编设备. 可用时,固件更新功能使销售商能够远程补补错误并进行升级. 设备固件更新经常被委托给用户,可能使用软件更新包完成. 也可能通过网络执行这项任务。\n\n对手可能利用无障碍设备上的固件更新功能上传恶意或过时固件. 设备固件的恶意修改可能会为对手提供对设备的根访问,因为固件是最低编程抽象层之一. (引文使用过时参数coauthors (帮助) Basnight, Zachry, et al",
    "Masquerading": "化妆",
    "Adversaries may use masquerading to disguise a malicious application or executable as another file, to avoid operator and engineer suspicion. Possible disguises of these masquerading files can include commonly found programs, expected vendor executables and configuration files, and other commonplace application and naming conventions. By impersonating expected and vendor-relevant files and applications, operators and engineers may not notice the presence of the underlying malicious content and possibly end up running those masquerading as legitimate functions. \n\nApplications and other files commonly found on Windows systems or in engineering workstations have been impersonated before. This can be as simple as renaming a file to effectively disguise it in the ICS environment.": "爱好者可能利用伪装来伪装恶意应用程序或可执行文件作为另一个文件,以避免操作员和工程师的怀疑. 这些假冒文件的可能伪装可以包括常见的程序,预期的供应商可执行文件和配置文件,以及其他常见的应用和命名惯例. 通过冒充预期的和与供应商有关的文件和应用程序,操作员和工程师可能不会注意到潜在的恶意内容的存在,并可能最终将这些假冒为合法功能运行。\n\n通常在Windows系统或工程工作站上发现的应用程序和其他文件之前就已被冒充. 这可以和重命名一个文件一样简单,在ICS环境中有效伪装.",
    "Program Download": "程序下载",
    "Adversaries may perform a program download to transfer a user program to a controller. \n\nVariations of program download, such as online edit and program append, allow a controller to continue running during the transfer and reconfiguration process without interruption to process control. However, before starting a full program download (i.e., download all) a controller may need to go into a stop state. This can have negative consequences on the physical process, especially if the controller is not able to fulfill a time-sensitive action. Adversaries may choose to avoid a download all in favor of an online edit or program append to avoid disrupting the physical process. An adversary may need to use the technique Detect Operating Mode or Change Operating Mode to make sure the controller is in the proper mode to accept a program download.\n\nThe granularity of control to transfer a user program in whole or parts is dictated by the management protocol (e.g., S7CommPlus, TriStation) and underlying controller API. Thus, program download is a high-level term for the suite of vendor-specific API calls used to configure a controllers user program memory space.  \n\n[Modify Controller Tasking](https://attack.mitre.org/techniques/T0821) and [Modify Program](https://attack.mitre.org/techniques/T0889) represent the configuration changes that are transferred to a controller via a program download.": "爱好者可以进行程序下载,将用户程序转移给控制器.\n\n程序下载的变异,如在线编辑和程序附加,允许一个控制器在传输和重组过程中不间断地运行,以处理控制. 然而,在开始完整程序下载(即全部下载)之前,控制器可能需要进入停止状态. 这可能会对物理过程产生负面的影响,特别是如果控制器无法完成一个对时间敏感的动作. 爱好者可能选择避免所有有利于在线编辑或程序附加的下载,以避免扰乱物理过程. 对手可能需要使用技术检测操作模式或更改操作模式,以确保控制器处于接受程序下载的适当模式.\n\n全部或部分传输用户程序的控制权的颗粒性由管理协议(如S7CommPlus,TriStation)和基础控制器API所决定. 因此,程序下载是用于配置控制器用户程序存储空间的供应商专用API呼叫套件的高端术语.\n\n[修改控制器任务](https://sattack.mitre.org/techniques/T0821)和[修改程序](https://sattack.mitre.org/techniques/T0889)代表通过程序下载转移到控制器的配置变化.",
    "Adversaries may move onto systems, such as those separated from the enterprise network, by copying malware to removable media which is inserted into the control systems environment. The adversary may rely on unknowing trusted third parties, such as suppliers or contractors with access privileges, to introduce the removable media. This technique enables initial access to target devices that never connect to untrusted networks, but are physically accessible.     \n\nOperators of the German nuclear power plant, Gundremmingen, discovered malware on a facility computer not connected to the internet. (Citation: Kernkraftwerk Gundremmingen April 2016) (Citation: Trend Micro April 2016) The malware included Conficker and W32.Ramnit, which were also found on eighteen removable disk drives in the facility. (Citation: Christoph Steitz, Eric Auchard April 2016) (Citation: Catalin Cimpanu April 2016) (Citation: Peter Dockrill April 2016) (Citation: Lee Mathews April 2016) (Citation: Sean Gallagher April 2016) (Citation: Dark Reading Staff April 2016) The plant has since checked for infection and cleaned up more than 1,000 computers. (Citation: BBC April 2016) An ESET researcher commented that internet disconnection does not guarantee system safety from infection or payload execution. (Citation: ESET April 2016)": "通过复制恶意软件,将插入控制系统环境中的可移动介质复制到可移动介质,不良者可能会移动到系统上,例如那些从企业网络中分离出来的系统。 对手可以依靠不知情的可信任第三方,如享有访问特权的供应商或承包商,来引入可移动媒体。 这一技术使得能够初步访问目标设备,这些设备从未连接到不信任的网络,但可以实际使用。\n\n德国核电站的运营商Gundremmingen在一台没有与互联网连接的设施计算机上发现了恶意软件. (英文)Kernkraftwerk Gundremmingen 2016年4月 (中文(简体) ). 恶意软件包括Conficker和W32.Ramnit,在设施内的18个可移动磁盘驱动器上也发现了它们. (简体中文)克里斯托夫·施泰茨(英语:Christoph Steitz, Eric Auchard April 2016)(简体中文:Catalin Cimpanu April 2016)(简体中文:彼得·多克里尔 2016年4月)(简体中文:李·马修斯 2016年4月)(简体中文:肖恩·加拉格尔 2016年4月)(简体中文:黑暗阅读工作人员 2016年4月) 该厂此后检查了感染情况,清理了1000多台计算机. (英文(简体) : BBC April 2016). 一名ESET研究者评论说,互联网断开并不能保证系统安全,避免感染或有效载荷执行。 (简体中文:ESET April 2016)",
    "Adversaries may attempt to perform screen capture of devices in the control system environment. Screenshots may be taken of workstations, HMIs, or other devices that display environment-relevant process, device, reporting, alarm, or related data. These device displays may reveal information regarding the ICS process, layout, control, and related schematics. In particular, an HMI can provide a lot of important industrial process information. (Citation: ICS-CERT October 2017) Analysis of screen captures may provide the adversary with an understanding of intended operations and interactions between critical devices.": "爱好者可能试图在控制系统环境中对设备进行屏幕捕获. 可能拍摄到工作站、HMI或其他显示与环境有关的工艺、设备、报告、警报或相关数据的设备的截图。 这些设备显示可能揭示有关ICS过程,布局,控制,以及相关示意图的信息. 特别是,一个HMI可以提供许多重要的工业过程信息. (注:ICS-CERT 2017年10月). 对屏幕捕获的分析可使对手了解预定操作和关键设备之间的相互作用.",
    "Hardcoded Credentials": "硬码证书",
    "Adversaries may leverage credentials that are hardcoded in software or firmware to gain an unauthorized interactive user session to an asset. Examples credentials that may be hardcoded in an asset include:\n\n* Username/Passwords\n* Cryptographic keys/Certificates\n* API tokens\n\nUnlike [Default Credentials](https://attack.mitre.org/techniques/T0812), these credentials are built into the system in a way that they either cannot be changed by the asset owner, or may be infeasible to change because of the impact it would cause to the control system operation. These credentials may be reused across whole product lines or device models and are often not published or known to the owner and operators of the asset. \n\nAdversaries may utilize these hardcoded credentials to move throughout the control system environment or provide reliable access for their tools to interact with industrial assets. \n": "爱好者可能利用软件或固件中硬码的资质,将未经授权的交互式用户会话获得资产. 可在资产中硬化编码的证书的例子包括:\n\n* 用户名/名词\n* 密码密钥/证书\n* API 符号\n\n与[default Certification](https://fattle.mitre.org/techniques/T0812)不同的是,这些证书在系统中的构建方式要么是资产所有人不能更改,要么可能因为会对控制系统操作产生影响而无法更改. 这些证书可能在整个产品线或设备模型中重复使用,而且往往不公布或为资产所有人和运营人所知。\n\n爱好者可能利用这些硬码证书在整个控制系统环境中移动,或为其工具提供与工业资产互动的可靠途径。\n.",
    "Valid Accounts": "有效账户",
    "Adversaries may steal the credentials of a specific user or service account using credential access techniques. In some cases, default credentials for control system devices may be publicly available. Compromised credentials may be used to bypass access controls placed on various resources on hosts and within the network, and may even be used for persistent access to remote systems. Compromised and default credentials may also grant an adversary increased privilege to specific systems and devices or access to restricted areas of the network. Adversaries may choose not to use malware or tools, in conjunction with the legitimate access those credentials provide, to make it harder to detect their presence or to control devices and send legitimate commands in an unintended way. \n\nAdversaries may also create accounts, sometimes using predefined account names and passwords, to provide a means of backup access for persistence. (Citation: Booz Allen Hamilton) \n\nThe overlap of credentials and permissions across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator)  and possibly between the enterprise and operational technology environments. Adversaries may be able to leverage valid credentials from one system to gain access to another system.": "爱好者可能利用证书访问技术窃取特定用户或服务账户的资信. 在某些情况下,控制系统设备的默认证书可能公开提供。 折中证书可能被用来绕过对主机和网络内各种资源设置的访问控制,甚至可能被用于持续访问远程系统. 保密和默认的证书还可能使对手对特定系统和装置或进入网络禁区享有更多的特权。 逆客可能选择不使用恶意软件或工具,结合这些证书提供的合法访问,使其更难发现其存在或控制设备,并以意想不到的方式发送合法命令.\n\n爱好者也可能创建账户,有时使用预先定义的账户名称和密码,为持久性提供备份访问手段. (电话:Booz Allen Hamilton)\n\n整个系统网络的证书和许可的重叠令人关切,因为对手可能能够跨越账户和系统,进入高水平(即域或企业管理人),并可能进入企业与业务技术环境。 爱好者也许能够利用一个系统的有效证书进入另一个系统.",
    "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions. (Citation: The MITRE Corporation) \n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods. (Citation: The MITRE Corporation)": "爱好者可能利用软件的脆弱性,试图提升特权. 当对手利用程序、服务、操作系统软件或内核本身的编程错误来执行对手控制的代码时,就会利用软件的脆弱性。 诸如许可级别等安全结构往往会阻碍获取信息和使用某些技术,因此对手可能需要进行特权升级,包括利用软件来规避这些限制。 (点击:MITRE公司)\n\n在最初进入某一系统时,对手可能在较低特权的程序中运作,这将会妨碍他们利用该系统的某些资源。 脆弱性可能存在,通常存在于操作系统组件和通常在更高权限下运行的软件中,这些组件和软件可以被利用来获得更高水平的系统访问. 这可以使某人从无特权或用户级别的权限转移到系统或根权限,这取决于脆弱的组件。 这对于对手损害一个已经适当配置并限制其他特权升级方法的终点系统来说,可能是必要的一步。 (点击:MITRE公司)",
    "Remote System Discovery": "远程系统发现",
    "Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for subsequent Lateral Movement or Discovery techniques. Functionality could exist within adversary tools to enable this, but utilities available on the operating system or vendor software could also be used. (Citation: Enterprise ATT&CK January 2018)": "爱好者可能会试图通过IP地址,主机名或其他逻辑标识符,在一个网络上获得其他系统的列表,用于后续的横向移动或发现技术. 敌对工具内可能存在功能,但操作系统或供应商软件上的公用事业也可以使用。 (批:企业ATT&CK 2018年1月)",
    "Engineering Workstation Compromise": "工程工作站妥协",
    "Adversaries will compromise and gain control of an engineering workstation for Initial Access into the control system environment. Access to an engineering workstation may occur through or physical means, such as a Valid Accounts with privileged access or infection by removable media. A dual-homed engineering workstation may allow the adversary access into multiple networks. For example, unsegregated process control, safety system, or information system networks. An Engineering Workstation is designed as a reliable computing platform that configures, maintains, and diagnoses control system equipment and applications. Compromise of an engineering workstation may provide access to, and control of, other control system applications and equipment. In the Maroochy attack, the adversary utilized a computer, possibly stolen, with proprietary engineering software to communicate with a wastewater system.": "逆行者将损害并控制初步进入控制系统环境的工程工作站。 进入工程工作站可能通过或采取实际手段,如可移动媒体特许进入或感染的有效账户。 双家园工程工作站可能允许对手进入多个网络。 例如,未分离的流程控制,安全系统,或信息系统网络. 工程工作站被设计为一个可靠的计算平台,用于配置、维护和诊断控制系统设备和应用程序。 工程工作站的妥协可以提供获取和控制其他控制系统应用程序和设备的机会。 在Marouchy袭击中,对手使用了一台电脑,可能被盗,并配有专有的工程软件,与废水系统通信.",
    "Connection Proxy": "连接代理",
    "Adversaries may use a connection proxy to direct network traffic between systems or act as an intermediary for network communications.\n\nThe definition of a proxy can also be expanded to encompass trust relationships between networks in peer-to-peer, mesh, or trusted connections between networks consisting of hosts or systems that regularly communicate with each other.\n\nThe network may be within a single organization or across multiple organizations with trust relationships. Adversaries could use these types of relationships to manage command and control communications, to reduce the number of simultaneous outbound network connections, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between victims to avoid suspicion. (Citation: Enterprise ATT&CK January 2018)": "爱好者可能使用连接代理来引导系统之间的网络流量,或者充当网络通信的中介.\n\n一个代理的定义还可以扩展,以包括网络在对等,网格,或由主机或系统组成的网络之间的信任关系,它们之间由经常相互交流的网络组成.\n\n该网络可能存在于一个单一组织或多个具有信任关系的组织之间。 爱好者可以利用这些类型的关系来管理指挥与控制通信,减少同步外出网络连接的数量,在面对连接损失时提供耐力,或者搭乘受害者之间的现有可信赖的通信路径以避免怀疑. (批:企业ATT&CK 2018年1月)",
    "Standard Application Layer Protocol": "标准应用层协议",
    "Adversaries may establish command and control capabilities over commonly used application layer protocols such as HTTP(S), OPC, RDP, telnet, DNP3, and modbus. These protocols may be used to disguise adversary actions as benign network traffic. Standard protocols may be seen on their associated port or in some cases over a non-standard port.  Adversaries may use these protocols to reach out of the network for command and control, or in some cases to other infected devices within the network.": "爱好者可能建立对HTTP(S),OPC,RDP,telnet,DNP3和modbus等常用应用层协议的指挥和控制能力. 这些协议可能被用来将对手的行为伪装成良性网络流量. 标准协议可以在其相关港口或在某些情况下在非标准港口上看到。 爱好者可能利用这些协议从网络中伸出来进行指挥与控制,或者在某些情况下接触网络中其他被感染的装置.",
    "Modify Control Logic": "修改控制逻辑",
    "Adversaries may place malicious code in a system, which can cause the system to malfunction by modifying its control logic. Control system devices use programming languages (e.g. relay ladder logic) to control physical processes by affecting actuators, which cause machines to operate, based on environment sensor readings. These devices often include the ability to perform remote control logic updates. \n\nProgram code is normally edited in a vendor-specific Integrated Development Environment (IDE) that relies on proprietary tools and features. These IDEs allow an engineer to perform host target development and may have the ability to run the code on the machine it is programmed for. The IDE will transmit the control logic to the testing device, and will perform the required device-specific functions to apply the changes and make them active.\n\nAn adversary may attempt to use this host target IDE to modify device control logic. Even though proprietary tools are often used to edit and update control logic, the process can usually be reverse-engineered and reproduced with open-source tools.\n\nAn adversary can de-calibrate a sensor by removing functions in control logic that account for sensor error. This can be used to change a control process without actually spoofing command messages to a controller or device. \n\nIt is believed this process happened in the lesser known over-pressurizer attacks build into Stuxnet. Pressure sensors are not perfect at translating pressure into an analog output signal, but their errors can be corrected by calibration. The pressure controller can be told what the “real” pressure is for given analog signals and then automatically linearize the measurement to what would be the “real” pressure. If the linearization is overwritten by malicious code on the S7-417 controller, analog pressure readings will be “corrected” during the attack by the pressure controller, which then interprets all analog pressure readings as perfectly normal pressure no matter how high or low their analog values are. The pressure controller then acts accordingly by never opening the stage exhaust valves. In the meantime, actual pressure keeps rising. (Citation: Stuxnet - Langner - 201311)\n\nIn the Maroochy Attack, Vitek Boden gained remote computer access to the control system and altered data so that whatever function should have occurred at affected pumping stations did not occur or occurred in a different way. The software program installed in the laptop was one developed by Hunter Watertech for its use in changing configurations in the PDS computers. This ultimately led to 800,000 liters of raw sewage being spilled out into the community. (Citation: Maroochy - MITRE - 200808)": "悖论者可能会将恶意代码放置在一个系统中,这可以通过修改其控制逻辑来引起系统故障. 控制系统设备使用编程语言(如继电器梯子逻辑),通过影响激活器来控制物理过程,导致机器在环境传感器读数的基础上运行. 这些设备往往包括执行遥控逻辑更新的能力.\n\n程序代码通常在供应商特有的综合发展环境(IDE)中编辑,该环境依赖于专有工具和特性. 这些IDE允许工程师进行主机目标开发,并可能具备在它编程的机器上运行代码的能力. IDE会将控制逻辑传输到测试设备,并会履行所需的设备特定功能来应用修改并使它们激活.\n\n一个对手可能会试图使用这个主机目标IDE来修改设备控制逻辑. 虽然专有工具常用于编辑和更新控制逻辑,但这一过程通常可以逆向设计,并以开源工具复制.\n\n对手可以通过去除控制逻辑中导致传感器错误的函数来解析传感器. 这可以用来改变一个控制过程,而实际上不向控制器或设备窃取命令消息.\n\n据信这个过程发生在 Stuxnet 中较不为人知的超压器攻击中。 压力传感器在将压力转换成模拟输出信号时并不完美,但其错误可以通过校准来纠正. 压力控制器可以被告知给定的模拟信号的“实际”压力是什么,然后自动将测量线性化到什么是“实际”压力。 如果线性化在S7-417控制器上被恶意代码所覆盖,模拟压力读数会在压力控制器攻击时被\"修正\",然后将所有模拟压力读数解释为完全正常的压力,不管其模拟值有多高或有多低. 压力控制器随后通过不打开舞台排气阀来相应操作. 在此期间,实际压力持续上升. (简体中文:Stuxnet - Langner - 201311).\n\n在Maroochy攻击中,Vitek Boden获得了远程计算机对控制系统的访问,并修改了数据,这样受影响的泵站本来应该发生的任何功能都不会以不同的方式发生或发生. 安装在笔记本电脑中的软件程序是由Hunter Watertech开发的,用于PDS计算机中的改变配置. 这最终导致80万升的原始污水溢入社区。 (英文:Maroochy - MITRE - 200808) (中文(简体) )",
    "Remote Services": "远程服务",
    "Adversaries may leverage remote services to move between assets and network segments. These services are often used to allow operators to interact with systems remotely within the network, some examples are RDP, SMB, SSH, and other similar mechanisms. (Citation: Blake Johnson, Dan Caban, Marina Krotofil, Dan Scali, Nathan Brubaker, Christopher Glyer December 2017) (Citation: Dragos December 2017) (Citation: Joe Slowik April 2019) \n\nRemote services could be used to support remote access, data transmission, authentication, name resolution, and other remote functions. Further, remote services may be necessary to allow operators and administrators to configure systems within the network from their engineering or management workstations. An adversary may use this technique to access devices which may be dual-homed (Citation: Blake Johnson, Dan Caban, Marina Krotofil, Dan Scali, Nathan Brubaker, Christopher Glyer December 2017) to multiple network segments, and can be used for [Program Download](https://attack.mitre.org/techniques/T0843) or to execute attacks on control devices directly through [Valid Accounts](https://attack.mitre.org/techniques/T0859).\n\nSpecific remote services (RDP & VNC) may be a precursor to enable [Graphical User Interface](https://attack.mitre.org/techniques/T0823) execution on devices such as HMIs or engineering workstation software.\n\nBased on incident data, CISA and FBI assessed that Chinese state-sponsored actors also compromised various authorized remote access channels, including systems designed to transfer data and/or allow access between corporate and ICS networks.  (Citation: CISA AA21-201A Pipeline Intrusion July 2021)": "爱好者可能利用远程服务在资产和网络段之间移动。 这些服务常用于允许运营商与网络内部的系统远程互动,一些例子有RDP,SMB,SSH等类似机制. (城镇:布莱克·约翰逊,丹·卡班,玛丽娜·克罗托菲尔,丹·斯卡利,内森·布鲁贝克,克里斯托弗·格莱尔 2017年12月)(城镇:德拉戈斯 2017年12月)(城镇:乔·斯凯蒂克 2019年4月).\n\n远程服务可用于支持远程访问、数据传输、认证、名称分辨率和其他远程功能。 此外,可能有必要提供远程服务,使运营商和管理人员能够从其工程或管理工作站配置网络内的系统。 对手可以使用这一技术进入可能双主控的设备(Citation:Blake Johnson, Dan Caban, Marina Krotofil, Dan Scali, Nathan Brubaker, Christopher Glyer December 2017)到多个网络段,并可用于[程序下载](https://sattack.mitre.org/techniques/T0843)或直接通过[Valid账户](https://s://sattack.mitre.org/techniques/T0859)对控制设备进行攻击。\n\n特定的远程服务(RDP & VNC)可能是在HMIs或工程工作站软件等设备上执行[Graphical User 接口](https://sattack.mitre.org/techniques/T0823)的前奏.\n\n根据事件数据,CISA和FBI评估认为,中国国家赞助的行为者还破坏了各种授权的远程访问渠道,包括旨在传输数据和(或)允许公司和ICS网络之间访问的系统. (编号:CISA AA21-201A) 管道入侵 2021年7月",
    "I/O Module Discovery": "I/O 模块发现",
    "Adversaries may use input/output (I/O) module discovery to gather key information about a control system device. An I/O module is a device that allows the control system device to either receive or send signals to other devices. These signals can be analog or digital, and may support a number of different protocols. Devices are often able to use attachable I/O modules to increase the number of inputs and outputs that it can utilize. An adversary with access to a device can use native device functions to enumerate I/O modules that are connected to the device. Information regarding the I/O modules can aid the adversary in understanding related control processes.": "爱好者可能利用输入/输出(I/O)模块发现来收集控制系统设备的关键信息. I/O模块是允许控制系统设备接收或向其他设备发送信号的设备. 这些信号可以是模拟的或数字的,可能支持一些不同的协议. 设备往往能够使用可附加的I/O模块,以增加其可以利用的投入和产出数量. 一个可以访问设备的对手可以使用本地设备函数来列举连接到设备的I/O模块. 有关I/O模块的信息可以帮助对手了解相关的控制程序.",
    "Denial of Control": "拒绝控制",
    "Adversaries may cause a denial of control to temporarily prevent operators and engineers from interacting with process controls. An adversary may attempt to deny process control access to cause a temporary loss of communication with the control device or to prevent operator adjustment of process controls. An affected process may still be operating during the period of control loss, but not necessarily in a desired state. (Citation: Corero) (Citation: Michael J. Assante and Robert M. Lee) (Citation: Tyson Macaulay)\n\nIn the 2017 Dallas Siren incident operators were unable to disable the false alarms from the Office of Emergency Management headquarters. (Citation: Mark Loveless April 2017)": "不良因素可能导致拒绝控制,从而暂时阻止操作者和工程师与过程控制互动. 对手可能试图拒绝程序控制访问,造成与控制设备暂时失去联系,或阻止操作员调整程序控制. 在失去控制期间,受影响的程序可能仍在运作,但不一定处于预期状态。 (简体中文:科雷罗)(简体中文:迈克尔·J·阿桑特和罗伯特·M·李)(简体中文:泰森·澳门莱)\n\n2017年达拉斯西伦事件运营商无法从应急管理办公室总部禁用假警报. (简体中文:Mark Loveless April 2017)",
    "Modify Alarm Settings": "修改提醒设置",
    "Adversaries may modify alarm settings to prevent alerts that may inform operators of their presence or to prevent responses to dangerous and unintended scenarios. Reporting messages are a standard part of data acquisition in control systems. Reporting messages are used as a way to transmit system state information and acknowledgements that specific actions have occurred. These messages provide vital information for the management of a physical process, and keep operators, engineers, and administrators aware of the state of system devices and physical processes. \n\nIf an adversary is able to change the reporting settings, certain events could be prevented from being reported. This type of modification can also prevent operators or devices from performing actions to keep the system in a safe state. If critical reporting messages cannot trigger these actions then a [Impact](https://attack.mitre.org/tactics/TA0105) could occur. \n\nIn ICS environments, the adversary may have to use [Alarm Suppression](https://attack.mitre.org/techniques/T0878) or contend with multiple alarms and/or alarm propagation to achieve a specific goal to evade detection or prevent intended responses from occurring. (Citation: Jos Wetzels, Marina Krotofil 2019)  Methods of suppression often rely on modification of alarm settings, such as modifying in memory code to fixed values or tampering with assembly level instruction code. ": "逆行者可能修改警报设置,以防止可能告知操作者其存在的警报,或防止对危险和意外情况作出反应。 报告信息是在控制系统中获取数据的标准部分. 报告信息被用作传送系统信息的一种方式,并承认已经采取了具体行动。 这些信息为物理过程的管理提供了重要信息,并使操作员、工程师和管理者了解系统设备和物理过程的状况。\n\n如果对手能够改变报告设置,可以防止某些事件被报告。 这种类型的修改也可以阻止操作员或设备进行动作,使系统处于安全状态. 如果批评性报告信息不能触发这些行动,则可能发生[impact](https://sattack.mitre.org/tactics/TA0105)。\n\n在ICS环境中,对手可能必须使用[armament Presult](https://sattack.mitre.org/techniques/T0878)或与多重警报和(或)警报传播对抗,以实现逃避探测或防止发生预期反应的具体目标。 (英文:Jos Wetzels, Marina Krotofil 2019). 压制方法往往依赖于对提醒设置的修改,比如内存代码修改为固定值或者篡改组装级指令代码.",
    "Adversaries may communicate over a commonly used port to bypass firewalls or network detection systems and to blend in with normal network activity, to avoid more detailed inspection. They may use the protocol associated with the port, or a completely different protocol. They may use commonly open ports, such as the examples provided below. \n \n * TCP:80 (HTTP) \n * TCP:443 (HTTPS) \n * TCP/UDP:53 (DNS) \n * TCP:1024-4999 (OPC on XP/Win2k3) \n * TCP:49152-65535 (OPC on Vista and later) \n * TCP:23 (TELNET) \n * UDP:161 (SNMP) \n * TCP:502 (MODBUS) \n * TCP:102 (S7comm/ISO-TSAP) \n * TCP:20000 (DNP3) \n * TCP:44818 (Ethernet/IP)": "爱好者可能通过一个常用的端口进行沟通,绕过防火墙或网络检测系统,并与正常的网络活动融合,以避免更详细的检查. 他们可能使用与端口相关的协议,或者完全不同的协议. 它们可能使用通常开放的港口,例如下文提供的例子。\n\n* TCP:80 (HTTP) (中文(简体) ).\n* TCP:443(HTTPS)\n* TCP/UDP:53(DNS)\n* TCP:1024-4999(XP/Win2k3上的OPC)\n* TCP:49152-65535(OPC on Vista和后来)\n* TCP:23(电信网)\n* UDP: 161 (SNMP)\n* TCP:502(MODBUS)\n* TCP:102(S7comm/ISO-TSAP)\n* TCP:20000(DNP3)\n* TCP:44818(以太网/IP)",
    "Project File Infection": "项目文件感染",
    "Adversaries may attempt to infect project files with malicious code. These project files may consist of objects, program organization units, variables such as tags, documentation, and other configurations needed for PLC programs to function. (Citation: Beckhoff) Using built in functions of the engineering software, adversaries may be able to download an infected program to a PLC in the operating environment enabling further [Execution](https://attack.mitre.org/tactics/TA0104) and [Persistence](https://attack.mitre.org/tactics/TA0110) techniques. (Citation: PLCdev) \n\nAdversaries may export their own code into project files with conditions to execute at specific intervals. (Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011) Malicious programs allow adversaries control of all aspects of the process enabled by the PLC. Once the project file is downloaded to a PLC the workstation device may be disconnected with the infected project file still executing. (Citation: PLCdev)": "不良者可能试图用恶意代码感染项目文件. 这些项目文件可能包括对象,程序组织单位,标记,文档等变量,以及PLC程序运行所需的其他配置. (citation: Beckhoff) 利用工程软件的功能,对手可能能够在操作环境中将一个受感染的程序下载到PLC,从而进一步[Execution](https:// sattack.mitre.org/tractics/TA0104)和[Persistence](https://sattack.mitre.org/tractics/TA0110)技术. (点击:PLCdev)\n\n爱好者可能会将自己的代码导出到项目文件中,并具备在特定间隔执行的条件. (citation: Nicolas Falliere, Liam O Murchu, Eric Chien 2011年2月) 恶意程序允许对手控制PLC允许的进程的所有方面. 工程文件下载到PLC后,工作站设备可能会与仍在执行的被感染的项目文件断开. (点击:PLCdev)",
    "Network Connection Enumeration": "网络连接编号",
    "Adversaries may perform network connection enumeration to discover information about device communication patterns. If an adversary can inspect the state of a network connection with tools, such as Netstat(Citation: Netstat), in conjunction with [System Firmware](https://attack.mitre.org/techniques/T0857), then they can determine the role of certain devices on the network  (Citation: MITRE). The adversary can also use [Network Sniffing](https://attack.mitre.org/techniques/T0842) to watch network traffic for details about the source, destination, protocol, and content.": "爱好者可能进行网络连接计数,以发现关于设备通信模式的信息. 如果对手可以与[System Firmware](https://sattack.mitre.org/techniques/T0857)一起检查Netstat(Citation:Netstat)等工具的网络连接状态,那么他们就可以确定某些设备在网络中的作用(Citation:MITRE). 对手还可以使用[Network Sniffing](https://sattack.mitre.org/techniques/T0842)观看网络流量,了解来源,目的地,协议和内容的细节.",
    "Lateral Tool Transfer": "横向工具传输",
    "Adversaries may transfer tools or other files from one system to another to stage adversary tools or other files over the course of an operation. (Citation: Enterprise ATT&CK) Copying of files may also be performed laterally between internal victim systems to support Lateral Movement with remote Execution using inherent file sharing protocols such as file sharing over SMB to connected network shares. (Citation: Enterprise ATT&CK)\n\nIn control systems environments, malware may use SMB and other file sharing protocols to move laterally through industrial networks.": "逆袭者可能将一个系统的工具或其他文件转移到另一个系统,在操作过程中为对手工具或其他文件进行阶段. (批:企业ATT&CK) 还可以在内部受害人系统之间横向复制文件,以便利用固有的文件共享协议,例如文件在SMB上共享到连接的网络共享,支持横向移动。 (批:企业ATT&CK)\n\n在控制系统环境中,恶意软件可能使用SMB和其他文件共享协议,通过工业网络横向移动.",
    "Module Firmware": "模块固件",
    "Adversaries may install malicious or vulnerable firmware onto modular hardware devices. Control system devices often contain modular hardware devices. These devices may have their own set of firmware that is separate from the firmware of the main control system equipment.   \n\nThis technique is similar to [System Firmware](https://attack.mitre.org/techniques/T0857), but is conducted on other system components that may not have the same capabilities or level of integrity checking. Although it results in a device re-image, malicious device firmware may provide persistent access to remaining devices. (Citation: Daniel Peck,  Dale Peterson January 2009)  \n\nAn easy point of access for an adversary is the Ethernet card, which may have its own CPU, RAM, and operating system. The adversary may attack and likely exploit the computer on an Ethernet card. Exploitation of the Ethernet card computer may enable the adversary to accomplish additional attacks, such as the following: (Citation: Daniel Peck,  Dale Peterson January 2009)  \n\n* Delayed Attack - The adversary may stage an attack in advance and choose when to launch it, such as at a particularly damaging time.  \n* Brick the Ethernet Card - Malicious firmware may be programmed to result in an Ethernet card failure, requiring a factory return.  \n* Random Attack or Failure - The adversary may load malicious firmware onto multiple field devices. Execution of an attack and the time it occurs is generated by a pseudo-random number generator.   \n* A Field Device Worm - The adversary may choose to identify all field devices of the same model, with the end goal of performing a device-wide compromise.  \n* Attack Other Cards on the Field Device - Although it is not the most important module in a field device, the Ethernet card is most accessible to the adversary and malware. Compromise of the Ethernet card may provide a more direct route to compromising other modules, such as the CPU module.": "爱好者可能会在模块化硬件设备上安装恶意或脆弱的固件. 控制系统设备往往包含模块化硬件设备. 这些装置可能有它们自己的一套固件,与主控制系统设备的固件分开.\n\n这种技术类似于[系统固件](https://sattack.mitre.org/techniques/T0857),但是在可能不具备相同能力或完整性检查水平的其他系统组件上进行的。 虽然它会导致一个设备重映,但恶意设备固件可能提供持续访问剩余设备的机会. (案件:丹尼尔·佩克,戴尔·彼得森,2009年1月)\n\n一个对手的容易访问点是以太网卡,它可能拥有自己的CPU,RAM,和操作系统. 对手可能攻击并可能利用以太网卡上的计算机。 利用以太网卡计算机可以使对手完成更多的攻击,例如: (案件:丹尼尔·佩克,戴尔·彼得森,2009年1月)\n\n* 延迟攻击 - 敌方可以事先发动攻击,选择何时发动攻击,例如在特别有害的时刻发动攻击。\n* Brick the Ethernet Card - 恶意固件可能编程导致Ethernet卡故障,需要工厂返回.\n* 随机攻击或失败- 对手可以将恶意固件装入多个战地设备. 攻击的执行及其发生时间由假随机数生成器产生.\n* 一个字段设备蠕虫 - 对手可以选择识别同一型号的所有场装置,最终目标是实现全装置的妥协。\n*攻击战地设备上的其他卡——虽然它不是战地设备中最重要的模块,但以太网卡对对手和恶意软件来说是最容易访问的. 以太网卡的妥协可能为损害其他模块,如CPU模块提供更直接的路由.",
    "Internet Accessible Device": "互联网可访问设备",
    "Adversaries may gain access into industrial environments through systems exposed directly to the internet for remote access rather than through [External Remote Services](https://attack.mitre.org/techniques/T0822). Internet Accessible Devices are exposed to the internet unintentionally or intentionally without adequate protections. This may allow for adversaries to move directly into the control system network. Access onto these devices is accomplished without the use of exploits, these would be represented within the [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T0819) technique.\n\nAdversaries may leverage built in functions for remote access which may not be protected or utilize minimal legacy protections that may be targeted. (Citation: NCCIC January 2014) These services may be discoverable through the use of online scanning tools. \n\nIn the case of the Bowman dam incident, adversaries leveraged access to the dam control network through a cellular modem. Access to the device was protected by password authentication, although the application was vulnerable to brute forcing. (Citation: NCCIC January 2014) (Citation: Danny Yadron December 2015) (Citation: Mark Thompson March 2016)\n\nIn Trend Micros manufacturing deception operations adversaries were detected leveraging direct internet access to an ICS environment through the exposure of operational protocols such as Siemens S7, Omron FINS, and EtherNet/IP, in addition to misconfigured VNC access. (Citation: Stephen Hilt, Federico Maggi, Charles Perine, Lord Remorin, Martin Rsler, and Rainer Vosseler)": "逆行者可通过直接接触互联网的系统,而不是通过[外部远程服务](https://sattack.mitre.org/techniques/T0822),进入工业环境。 互联网无障碍设备无意或有意地暴露在互联网上,没有适当的保护。 这可能允许对手直接进入控制系统网络. 进入这些装置无需利用利用,这些装置将在[开发公共-档案应用](https://fattle.mitre.org/techniques/T0819)技术中加以体现。\n\n爱好者可能利用为远程访问而建立的功能,这些功能可能得不到保护,或利用可能针对的最低限度的遗产保护。 (日期:2014年1月) 这些服务可以通过使用在线扫描工具来发现。\n\n在Bowman水坝事件中,对手通过手机调制解调器利用了对水坝控制网络的准入。 密码认证可以保护设备的进入,尽管应用程序很容易被野蛮强迫。 (英文:NCCIC January 2014) (英文:Danny Yadron December 2015) (英文:Mark Thompson March 2016).\n\n在Trend Micros制造欺骗操作中,通过曝光Siemens S7、Omron FINS和EtherNet/IP等操作协议,发现对手利用互联网直接接入ICS环境,此外还有配置错误的VNC访问。 (引文使用过时参数coauthors (帮助) Stephen Hilt, Federico Maggi, Charles Perine, Lord Remorin, Martin Rsler, 以及Rainer Vosseler)",
    "Adversaries may target and collect data from local system sources, such as file systems, configuration files, or local databases. This can include sensitive data such as specifications, schematics, or diagrams of control system layouts, devices, and processes.\n\nAdversaries may do this using [Command-Line Interface](https://attack.mitre.org/techniques/T0807) or [Scripting](https://attack.mitre.org/techniques/T0853) techniques to interact with the file system to gather information. Adversaries may also use [Automated Collection](https://attack.mitre.org/techniques/T0802) on the local system. ": "逆行者可能瞄准并收集来自本地系统来源的数据,如文件系统,配置文件,或本地数据库. 这可以包括诸如规格,示意图,或者控制系统布局,装置,过程的图表等敏感数据.\n\n爱好者可能使用[Command-Line Interface](https://sattack.mitre.org/techniques/T0807)或[scripting](https://sattack.mitre.org/techniques/T0853)技术与文件系统互动以收集信息. 爱好者还可在当地系统使用[自动收集](https://sattack.mitre.org/techniques/T0802).",
    "Change Credential": "更改证书",
    "Adversaries may modify software and device credentials to prevent operator and responder access. Depending on the device, the modification or addition of this password could prevent any device configuration actions from being accomplished and may require a factory reset or replacement of hardware. These credentials are often built-in features provided by the device vendors as a means to restrict access to management interfaces.\n\nAn adversary with access to valid or hardcoded credentials could change the credential to prevent future authorized device access. Change Credential may be especially damaging when paired with other techniques such as Modify Program, Data Destruction, or Modify Controller Tasking. In these cases, a device’s configuration may be destroyed or include malicious actions for the process environment, which cannot not be removed through normal device configuration actions. \n\nAdditionally, recovery of the device and original configuration may be difficult depending on the features provided by the device. In some cases, these passwords cannot be removed onsite and may require that the device be sent back to the vendor for additional recovery steps.\n\n\nA chain of incidents occurred in Germany, where adversaries locked operators out of their building automation system (BAS) controllers by enabling a previously unset BCU key. (Citation: German BAS Lockout Dec 2021) \n": "爱好者可能会修改软件和装置证书,以防止操作者和响应者访问. 视设备而定,修改或添加此密码会阻止任何设备配置动作完成,可能需要工厂重置或更换硬件. 这些证书往往是设备供应商作为限制访问管理接口的手段所提供的内置特性。\n\n能够访问有效或硬码证书的对手可以改变证书,以防止今后的授权设备访问。 与修改程序、数据销毁或修改控制器任务等其他技术配对时,修改证书可能特别有害。 在这种情况下,一个设备的配置可能会被破坏,或者包括对过程环境的恶意动作,这些动作不能通过正常的设备配置动作去掉.\n\n此外,根据设备提供的特性,可能难以回收该装置和原始配置。 在某些情况下,这些密码不能在现场删除,可能要求将设备送回供应商,以便采取额外的回收步骤。\n\n\n德国发生了一系列事件,对手将操作员锁在大楼自动化系统控制器之外,使一个以前未设的BCU密钥成为可能。 (批注:德国BAS锁定2021年12月)\n",
    "Modify Program": "修改程序",
    "Adversaries may modify or add a program on a controller to affect how it interacts with the physical process, peripheral devices and other hosts on the network. Modification to controller programs can be accomplished using a Program Download in addition to other types of program modification such as online edit and program append. \n\nProgram modification encompasses the addition and modification of instructions and logic contained in Program Organization Units (POU)  (Citation: IEC February 2013) and similar programming elements found on controllers. This can include, for example, adding new functions to a controller, modifying the logic in existing functions and making new calls from one function to another. \n\nSome programs may allow an adversary to interact directly with the native API of the controller to take advantage of obscure features or vulnerabilities.": "爱好者可能在控制器上修改或添加一个程序,以影响其与物理过程,外围设备以及网络上其他主机的相互作用. 除了在线编辑和程序附件等其他类型的程序修改之外,还可以使用程序下载完成控制程序的修改.\n\n程序修改包括增加和修改程序组织单位(POU)(Citation:IEC February 2013)中所载的指令和逻辑,以及在控制器上发现的类似编程元素. 例如,这可以包括增加控制器的新功能,修改现有函数的逻辑,以及从一个函数到另一个函数发出新的呼叫.\n\n一些程序可能允许对手直接与控制器的原生API互动,以利用模糊的特征或弱点.",
    "2015 Ukraine Electric Power Attack": "2015 (英语). 乌克兰电力攻击",
    "[2015 Ukraine Electric Power Attack](https://attack.mitre.org/campaigns/C0028) was a [Sandworm Team](https://attack.mitre.org/groups/G0034) campaign during which they used [BlackEnergy](https://attack.mitre.org/software/S0089) (specifically BlackEnergy3) and [KillDisk](https://attack.mitre.org/software/S0607) to target and disrupt transmission and distribution substations within the Ukrainian power grid. This campaign was the first major public attack conducted against the Ukrainian power grid by Sandworm Team.": "[2015年乌克兰电力攻击](https://sattack.mitre.org/campaigns/C0028)是一场[沙虫小组](https://sattack.mitre.org/groups/G0034)运动,期间他们使用[黑能源](https://sattack.mitre.org/software/S0089)(具体来说是黑能源3)和[KillDisk](https://sattack.mitre.org/software/S0607)瞄准和干扰乌克兰电网内的输配分站. 这次运动是沙虫队对乌克兰电网进行的第一次重大公开攻击.",
    "Oldsmar Treatment Plant Intrusion": "Oldsmar治疗厂入侵",
    "[Oldsmar Treatment Plant Intrusion](https://attack.mitre.org/campaigns/C0009) was a cyber incident involving a water treatment facility in Florida. During this incident, unidentified threat actors leveraged features of the system to access and modify setpoints for a specific chemical required in the treatment process. The incident was detected immediately and prevented before it could cause any harm to the public.(Citation: Pinellas County Sheriffs Office February 2021)(Citation: CISA AA21-042A Water Treatment Intrusion Feb 2021)(Citation: Dragos Oldsmar Feb 2021)": "[Oldsmar President Intrusion](https://state.mitre.org/campaigns/C0009)是一起涉及佛罗里达州水处理设施的网络事件. 在这次事件中,身份不明的威胁行为体利用该系统的特性,进入并修改处理过程中需要的特定化学品的设定点。 该事件在对公众造成任何伤害之前被立即发现并预防. (城镇:皮内拉斯县警长办公室,2021年2月)(城镇:CISA AA21-042A) 2021年2月水处理侵入(城镇:Dragos Oldsmar 2021年2月)",
    "Maroochy Water Breach": "马洛奇河断水事件",
    "[Maroochy Water Breach](https://attack.mitre.org/campaigns/C0020) was an incident in 2000 where an adversary leveraged the local government’s wastewater control system and stolen engineering equipment to disrupt and eventually release 800,000 liters of raw sewage into the local community.(Citation: Marshall Abrams July 2008)": "[Maroochy Water Breach](https://sattack.mitre.org/campaigns/C0020)是2000年的一起事件,一名对手利用地方政府的废水控制系统和被盗的工程设备破坏并最终向当地社区排放80万升的原始污水. (2008年7月,马歇尔·阿布拉姆斯)",
    "2016 Ukraine Electric Power Attack": "2016 (英语). 乌克兰电力攻击",
    "[2016 Ukraine Electric Power Attack](https://attack.mitre.org/campaigns/C0025) was a [Sandworm Team](https://attack.mitre.org/groups/G0034) campaign during which they used [Industroyer](https://attack.mitre.org/software/S0604) malware to target and disrupt distribution substations within the Ukrainian power grid. This campaign was the second major public attack conducted against Ukraine by [Sandworm Team](https://attack.mitre.org/groups/G0034).(Citation: ESET Industroyer)(Citation: Dragos Crashoverride 2018)": "[2016年乌克兰电力攻击](https://sattle.mitre.org/campaigns/C0025)是一场[沙虫队](https://sattle.mitre.org/groups/G0034)运动,期间他们利用[Industroyer](https://sattle.mitre.org/software/S0604)恶意软件瞄准和扰乱乌克兰电网内的配电分站. 这次运动是[沙虫队](https://sattack.mitre.org/groups/G0034)对乌克兰发动的第二次重大公开攻击. (Citation:ESET Industroyer)(Citation: Dragos Crashoverride 2018)",
    "Application Isolation and Sandboxing": "应用程序隔离和沙箱",
    "Restrict the execution of code to a virtual environment on or in-transit to an endpoint system.": "将代码的执行限制在虚拟环境上或中转到端点系统中.",
    "Filter Network Traffic": "过滤网络流量",
    "Use network appliances to filter ingress or egress traffic and perform protocol-based filtering. Configure software on endpoints to filter network traffic.   Perform inline allow/denylisting of network messages based on the application layer (OSI Layer 7) protocol, especially for automation protocols. Application allowlists are beneficial when there are well-defined communication sequences, types, rates, or patterns needed during expected system operations. Application denylists may be needed if all acceptable communication sequences cannot be defined, but instead a set of known malicious uses can be denied (e.g., excessive communication  attempts, shutdown messages, invalid commands).  Devices performing these functions are often referred to as deep-packet inspection (DPI) firewalls, context-aware firewalls, or firewalls blocking specific automation/SCADA protocol aware firewalls. (Citation: Centre for the Protection of National Infrastructure February 2005)": "使用网络设备过滤入侵或入侵流量,并进行基于协议的过滤. 配置端点上的软件来过滤网络流量. 执行基于应用程序层(OSI Layer 7)协议的网络消息的内置允许/拒绝列表,特别是用于自动化协议. 如果在预期的系统操作中存在定义明确的通信序列,类型,费率或模式,应用程序允许列表是有利的. 如果无法定义所有可接受的通信序列,则可能需要应用程序否定列表,但可以拒绝一组已知的恶意用途(例如过度的通信尝试,关闭消息,无效的命令). 执行这些功能的设备通常被称为深包检查(DPI)防火墙,上下文感知防火墙,或者阻断特定自动化/SCADA协议意识防火墙的防火墙. (2005年2月成为国家基础设施保护中心)",
    "Restrict Web-Based Content": "限制基于网络的内容",
    "Restrict use of certain websites, block downloads/attachments, block Javascript, restrict browser extensions, etc.": "限制某些网站的使用,块下载/附图,块Javascript,限制浏览器扩展等.",
    "Validate Program Inputs": "验证程序输入",
    "Devices and programs designed to interact with control system parameters should validate the format and content of all user inputs and actions to ensure the values are within intended operational ranges. These values should be evaluated and further enforced through the program logic running on the field controller. If a problematic or invalid input is identified, the programs should either utilize a predetermined safe value or enter a known safe state, while also logging or alerting on the event.(Citation: PLCTop20 Mar 2023)": "为与控制系统参数互动而设计的设备和程序应验证所有用户投入和行动的格式和内容,以确保数值在预定的操作范围内。 这些值应当通过运行在战地控制器上的程序逻辑来评价并进一步执行. 如果发现有问题或无效的输入,程序应使用预定的安全值或进入已知的安全状态,同时记录或提醒事件。 (编号:PLCTop20 Mar 2023)",
    "Network Segmentation": "网络分割",
    "Architect sections of the network to isolate critical systems, functions, or resources. Use physical and logical segmentation to prevent access to potentially sensitive systems and information. Use a DMZ to contain any internet-facing services that should not be exposed from the internal network.  Restrict network access to only required systems and services. In addition, prevent systems from other networks or business functions (e.g., enterprise) from accessing critical process control systems. For example, in IEC 62443, systems within the same secure level should be grouped into a zone, and access to that zone is restricted by a conduit, or mechanism to restrict data flows between zones by segmenting the network. (Citation: IEC February 2019) (Citation: IEC August 2013)": "网络的架构部分,以隔离关键系统,功能,或资源. 使用物理和逻辑分解方法,防止接触潜在的敏感系统和信息。 使用一个DMZ,以包含任何不应从内部网络中曝光的互联网接口服务. 限制网络进入仅需要的系统和服务. 此外,防止来自其他网络或业务功能(如企业)的系统访问关键流程控制系统. 例如,在IEC 62443中,同一安全级别内的系统应组合成一个区,通过管道或机制限制进入该区,通过分割网络限制各区之间的数据流动。 (日期:2019年2月) (日期:2013年8月)",
    "Restrict Library Loading": "限制库装入",
    "Prevent abuse of library loading mechanisms in the operating system and software to load untrusted code by configuring appropriate library loading mechanisms and investigating potential vulnerable software.": "通过配置适当的图书馆加载机制和调查潜在的脆弱软件,防止在操作系统和软件中滥用图书馆加载机制来装入不信任的代码.",
    "Active Directory Configuration": "活动目录配置",
    "Configure Active Directory to prevent use of certain techniques; use security identifier (SID) Filtering, etc.": "配置活动目录以防止使用某些技术;使用安全标识符(SID)过滤等.",
    "Network Intrusion Prevention": "网络侵入预防",
    "Use intrusion detection signatures to block traffic at network boundaries.  In industrial control environments, network intrusion prevention should be configured so it will not disrupt protocols and communications responsible for real-time functions related to control or safety.": "使用入侵检测签名阻断网络边界的流量. 在工业控制环境中,网络入侵预防应加以配置,使其不会干扰负责与控制或安全有关的实时功能的协议和通信.",
    "Restrict Registry Permissions": "限制注册权限",
    "Restrict the ability to modify certain hives or keys in the Windows Registry.": "限制Windows注册中修改某些蜂巢或密钥的能力.",
    "Data Loss Prevention": "数据损失预防",
    "Data Loss Prevention (DLP) technologies can be used to help identify adversarial attempts to exfiltrate operational information, such as engineering plans, trade secrets, recipes, intellectual property, or process telemetry. DLP functionality may be built into other security products such as firewalls or standalone suites running on the network and host-based agents. DLP may be configured to prevent the transfer of information through corporate resources such as email, web, and physical media such as USB for host-based solutions.": "数据损失预防(DLP)技术可以用来帮助识别对操作信息进行过滤的对抗性尝试,例如工程计划,商业秘密,秘方,知识产权,或处理遥测. DLP功能可能建在其他安全产品上,如防火墙或独立套件运行在网络上,以及基于主机的代理. DLP的配置可能是为了防止通过电子邮件,网络等公司资源以及USB等物理媒体进行信息传输,用于基于主机的解决方案.",
    "Access Management": "访问管理",
    "Access Management technologies can be used to enforce authorization polices and decisions, especially when existing field devices do not provided sufficient capabilities to support user identification and authentication. (Citation: McCarthy, J et al. July 2018) These technologies typically utilize an in-line network device or gateway system to prevent access to unauthenticated users, while also integrating with an authentication service to first verify user credentials. (Citation: Centre for the Protection of National Infrastructure November 2010)": "访问管理技术可用于执行授权政策和决定,特别是在现有外地设备没有提供足够的能力支持用户识别和认证的情况下. (注:麦卡锡,J等. 2018年7月 (中文(简体) ). 这些技术一般使用线内网络设备或网关系统,以防止未认证的用户访问,同时与认证服务整合,首先验证用户的资质. (批:2010年11月国家基础设施保护中心)",
    "Mitigation Limited or Not Effective": "缓解有限或不有效",
    "This type of attack technique cannot be easily mitigated with preventative controls since it is based on the abuse of system features.": "这种攻击技术不能轻易通过预防性控制来减轻,因为它是基于滥用系统特性.",
    "Exploit Protection": "保护剥削",
    "Use capabilities to detect and block conditions that may lead to or be indicative of a software exploit occurring.": "利用能力探测和阻断可能导致或显示软件开发的情况.",
    "Limit Access to Resource Over Network": "限制对资源网络的访问",
    "Prevent access to file shares, remote access to systems, unnecessary services. Mechanisms to limit access may include use of network concentrators, RDP gateways, etc.": "防止访问文件共享,远程访问系统,不必要的服务. 限制访问的机制可能包括使用网络集聚器,RDP网关等.",
    "Execution Prevention": "预防处决",
    "Block execution of code on a system through application control, and/or script blocking.": "通过应用程序控制和/或脚本屏蔽系统执行代码.",
    "Static Network Configuration": "静态网络配置",
    "Configure hosts and devices to use static network configurations when possible, protocols that require dynamic discovery/addressing (e.g., ARP, DHCP, DNS) can be used to manipulate network message forwarding and enable various AiTM attacks. This mitigation may not always be usable due to limited device features or challenges introduced with different network configurations.": "配置主机和设备在可能时使用静态网络配置,需要动态发现/地址(如ARP,DHCP,DNS)的协议可以用来操纵网络消息转发,并允许各种AiTM攻击. 由于不同网络配置的装置特性有限或遇到挑战,这种缓解可能并不总是可以使用.",
    "Password Policies": "密码政策",
    "Set and enforce secure password policies for accounts.": "设置和执行账户的安全密码政策.",
    "Privileged Account Management": "专用账户管理",
    "Manage the creation, modification, use, and permissions associated to privileged accounts, including SYSTEM and root.": "管理与包括System和root在内的特权账户相关的创建、修改、使用和权限.",
    "Human User Authentication": "人类用户认证",
    "Require user authentication before allowing access to data or accepting commands to a device. While strong multi-factor authentication is preferable, it is not always feasible within ICS environments. Performing strong user authentication also requires additional security controls and processes which are often the target of related adversarial techniques (e.g., Valid Accounts, Default Credentials). Therefore, associated ATT&CK mitigations should be considered in addition to this, including [Multi-factor Authentication](https://attack.mitre.org/mitigations/M0932), [Account Use Policies](https://attack.mitre.org/mitigations/M0936), [Password Policies](https://attack.mitre.org/mitigations/M0927), [User Account Management](https://attack.mitre.org/mitigations/M0918), [Privileged Account Management](https://attack.mitre.org/mitigations/M0926), and [User Account Control](https://attack.mitre.org/mitigations/M1052).": "在允许访问数据或接受设备命令之前,需要用户认证. 虽然强有力的多要素认证更为可取,但在科技中心环境中并不总是可行的。 进行强有力的用户认证还需要额外的安全控制和流程,这些通常成为相关对抗技术(如有效账户、默认证书)的目标。 因此,除此以外,还应考虑相关的ATT&CK缓解措施,包括[多要素认证](https://sattack.mitre.org/mitigations/M0932), [账户使用政策](https://state.mitre.org/mitigations/M0936),[Password Policy](https://state.mitre.org/mitigations/M0927), [用户账户管理](https://state.mitre.org/mitigations/M0918)、[Privileged 账户管理](https://state.mitre.org/mitigations/M0926)和[用户账户控制](https://state.mitre.org/mitigations/M1052).",
    "SSL/TLS Inspection": "SSL/TLS 检查",
    "Break and inspect SSL/TLS sessions to look at encrypted web traffic for adversary activity.": "中断和检查 SSL/ TLS 会话, 查看对手活动的加密网络流量 .",
    "Code Signing": "代码签名",
    "Enforce binary and application integrity with digital signature verification to prevent untrusted code from executing.": "强制二进制和应用程序完整性,同时进行数字签名验证,以防止不可信代码的执行.",
    "Software Process and Device Authentication": "软件程序和设备认证",
    "Require the authentication of devices and software processes where appropriate. Devices that connect remotely to other systems should require strong authentication to prevent spoofing of communications. Furthermore, software processes should also require authentication when accessing APIs.": "要求酌情认证设备和软件流程。 远程连接到其他系统的设备需要强有力的认证,以防止通信被窃。 此外,软件流程在访问API时也需要认证.",
    "Encrypt Network Traffic": "加密网络流量",
    "Utilize strong cryptographic techniques and protocols to prevent eavesdropping on network communications.": "利用强大的密码技术和协议防止窃听网络通信.",
    "Account Use Policies": "账户使用政策",
    "Configure features related to account use like login attempt lockouts, specific login times, etc.": "配置与账户使用相关的功能,如登录尝试关闭,特定登录时间等.",
    "Application Developer Guidance": "应用程序开发者指南",
    "This mitigation describes any guidance or training given to developers of applications to avoid introducing security weaknesses that an adversary may be able to take advantage of.": "这种减轻影响的做法说明了为应用程序开发者提供的任何指导或培训,以避免引入一个对手可能利用的安全弱点.",
    "Boot Integrity": "Bot 诚信",
    "Use secure methods to boot a system and verify the integrity of the operating system and loading mechanisms.": "使用安全方法启动一个系统,并验证操作系统的完整性和加载机制.",
    "Mechanical Protection Layers": "机械保护层",
    "Utilize a layered protection design based on physical or mechanical protection systems to prevent damage to property, equipment, human safety, or the environment. Examples include interlocks, rupture disk, release values, etc. (Citation: A G Foord, W G Gulland, C R Howard, T Kellacher, W H Smith 2004) ": "利用基于物理或机械保护系统的分层保护设计,防止对财产、设备、人身安全或环境的损害。 例子包括间锁,破裂磁盘,释放值等. (编辑:A G Foord,W G Gulland,C R Howard,T Kellacher,W H Smith 2004)",
    "Update Software": "更新软件",
    "Perform regular software updates to mitigate exploitation risk. Software updates may need to be scheduled around operational down times.": "定期更新软件,以减轻开采风险。 软件更新可能需要在下行时间前后安排.",
    "Watchdog Timers": "观察者计时器",
    "Utilize watchdog timers to ensure devices can quickly detect whether a system is unresponsive.": "使用监视计时器确保设备能够快速检测系统是否无响应.",
    "Operational Information Confidentiality": "业务信息保密",
    "Deploy mechanisms to protect the confidentiality of information related to operational processes, facility locations, device configurations, programs, or databases that may have information that can be used to infer organizational trade-secrets, recipes, and other intellectual property (IP).": "建立机制,保护与业务程序、设施位置、设备配置、程序或数据库有关的信息的保密性,这些信息可能具有用于推断组织贸易秘密、秘方和其他知识产权的信息.",
    "Operating System Configuration": "操作系统配置",
    "Make configuration changes related to the operating system or a common feature of the operating system that result in system hardening against techniques.": "进行与操作系统有关的配置改变,或作为操作系统的共同特征,导致系统硬化与技术相对.",
    "Limit Hardware Installation": "限制硬件安装",
    "Block users or groups from installing or using unapproved hardware on systems, including USB devices.": "屏蔽用户或组别安装或使用未经批准的硬件在系统,包括USB设备上.",
    "Encrypt Sensitive Information": "加密敏感信息",
    "Protect sensitive data-at-rest with strong encryption.": "以强大的加密保护敏感的存储数据.",
    "Network Allowlists": "网络许可列表",
    "Network allowlists can be implemented through either host-based files or system hosts files to specify what connections (e.g., IP address, MAC address, port, protocol) can be made from a device. Allowlist techniques that operate at the  application layer (e.g., DNP3, Modbus, HTTP) are addressed in [Filter Network Traffic](https://attack.mitre.org/mitigations/M0937) mitigation.": "网络允许列表可以通过基于主机的文件或系统主机文件执行,以指定哪些连接(如IP地址,MAC地址,端口,协议)可以通过一个设备实现. 在应用层运行的允许列表技术(如DNP3,Modbus,HTTP)在[Filter 网络交通](https://fattle.mitre.org/mitigations/M0937)中处理.",
    "Supply Chain Management": "供应链管理",
    "Implement a supply chain management program, including policies and procedures to ensure all devices and components originate from a trusted supplier and are tested to verify their integrity.": "实施供应链管理方案,包括政策和程序,以确保所有装置和部件都来自受信任的供应商,并经过测试以核实其完整性.",
    "Data Backup": "数据备份",
    "Take and store data backups from end user systems and critical servers. Ensure backup and storage systems are hardened and kept separate from the corporate network to prevent compromise.   Maintain and exercise incident response plans  (Citation: Department of Homeland Security October 2009), including the management of  'gold-copy' back-up images and configurations for key systems to enable quick recovery and response from adversarial activities that impact control, view, or availability.": "从终端用户系统和关键服务器中获取并存储数据备份. 确保将备份和储存系统加固,并与公司网络分开,以防止妥协。 维护和实施事件应对计划(Citation:Security Department of Homeland Security October 2009),包括管理关键系统的\"黄金拷贝\"备份图像和配置,以便能够从影响控制,查看,或可用性的对抗活动中快速恢复和应对.",
    "Out-of-Band Communications Channel": "银行外通信 频道",
    "Have alternative methods to support communication requirements during communication failures and data integrity attacks. (Citation: National Institute of Standards and Technology April 2013) (Citation: Defense Advanced Research Projects Agency)": "在通信故障和数据完整性攻击期间,有其他方法支持通信要求。 (单位:国家标准与技术研究院,2013年4月) (单位:国防先进研究项目局)",
    "Audit": "审计",
    "Perform audits or scans of systems, permissions, insecure software, insecure configurations, etc. to identify potential weaknesses. Perform periodic integrity checks of the device to validate the correctness of the firmware, software, programs, and configurations. Integrity checks, which typically include cryptographic hashes or digital signatures, should be compared to those obtained at known valid states, especially after events like device reboots, program downloads, or program restarts.": "对系统,权限,不安全软件,不安全配置等进行审核或扫描,找出潜在的弱点. 对设备进行定期完整性检查,以验证固件、软件、程序和配置的正确性。 完整性检查通常包括密码散列或数字签名,应当与已知有效状态下获得的检查进行比较,特别是在设备重boots,程序下载或程序重启等事件之后.",
    "Communication Authenticity": "通信认证",
    "When communicating over an untrusted network, utilize secure network protocols that both authenticate the message sender and can verify its integrity. This can be done either through message authentication codes (MACs) or digital signatures, to detect spoofed network messages and unauthorized connections.": "在通过一个不信任的网络进行通信时,使用既认证消息发送者又能够验证其完整性的安全网络协议. 这可以通过消息认证代码(MAC)或数字签名来实现,以检测被窃取的网络信息和未经授权的连接.",
    "Disable or Remove Feature or Program": "禁用或删除特性或程序",
    "Remove or deny access to unnecessary and potentially vulnerable software to prevent abuse by adversaries.": "取消或拒绝使用不必要的和可能脆弱的软件,以防止对手滥用.",
    "Threat Intelligence Program": "威胁情报方案",
    "A threat intelligence program helps an organization generate their own threat intelligence information and track trends to inform defensive priorities to mitigate risk.": "一个威胁情报方案帮助一个组织生成自己的威胁情报信息并跟踪趋势,为防御性的优先事项提供信息,以减少风险.",
    "Safety Instrumented Systems": "安全仪器系统",
    "Utilize Safety Instrumented Systems (SIS) to provide an additional layer of protection to hazard scenarios that may cause property damage. A SIS will typically include sensors, logic solvers, and a final control element that can be used to automatically respond to an hazardous condition  (Citation: A G Foord, W G Gulland, C R Howard, T Kellacher, W H Smith 2004) . Ensure that all SISs are segmented from operational networks to prevent them from being targeted by additional adversarial behavior.": "利用安全仪器系统(SIS)为可能造成财产损失的危险情况提供额外的保护。 一个SIS通常包括传感器,逻辑解析器,以及一个最终的控制元件,可以用来自动应对一个危险条件(Citation:A G Foord,W G Gulland,C R Howard,T Kellacher,W H Smith 2004). 确保所有信息系统从业务网络中分离出来,防止它们成为其他敌对行为的目标.",
    "User Training": "用户培训",
    "Train users to be aware of access or manipulation attempts by an adversary to reduce the risk of successful spearphishing, social engineering, and other techniques that involve user interaction.": "培训用户了解对手试图获取或操纵的情况,以减少成功使用长矛、社会工程和其他涉及用户互动的技术的风险.",
    "Multi-factor Authentication": "多要素认证",
    "Use two or more pieces of evidence to authenticate to a system; such as username and password in addition to a token from a physical smart card or token generator.  Within industrial control environments assets such as low-level controllers, workstations, and HMIs have real-time operational control and safety requirements which may restrict the use of multi-factor.": "使用两件或多件证据来认证一个系统;例如用户名和密码,以及物理智能卡或信使生成器的令牌. 在工业控制环境内,诸如低级控制器、工作站和HMI等资产具有实时操作控制和安全要求,可能限制多要素的使用.",
    "Vulnerability Scanning": "脆弱性扫描",
    "Vulnerability scanning is used to find potentially exploitable software vulnerabilities to remediate them.": "利用脆弱性扫描来发现可加以利用的软件弱点,以弥补这些弱点.",
    "Authorization Enforcement": "执行",
    "The device or system should restrict read, manipulate, or execute privileges to only authenticated users who require access based on approved security policies.  Role-based Access Control (RBAC) schemes can help reduce the overhead of assigning permissions to the large number of devices within an ICS. For example, IEC 62351 provides examples of roles used to support common system operations within the electric power sector  (Citation: International Electrotechnical Commission July 2020), while IEEE 1686 defines standard permissions for users of IEDs. (Citation: Institute of Electrical and Electronics Engineers January 2014)": "该设备或系统应仅限制根据核准的安全政策需要访问的经认证的用户阅读、操纵或执行权限。 基于角色的接入控制(RBAC)计划可以帮助减少在ICS内为大量设备分配许可的间接费用. 例如,IEC 62351提供了用于支持电力部门内部的共同制度运行的角色实例(Citation:International Electronic Technical Committee 2020年7月),而IEEE 1686定义了IEDs用户的标准权限. (批:电气电子工程师学院2014年1月)",
    "User Account Management": "用户账户管理",
    "Manage the creation, modification, use, and permissions associated to user accounts.": "管理与用户账户相关的创建,修改,使用和权限.",
    "Redundancy of Service": "离职",
    "Redundancy could be provided for both critical ICS devices and services, such as back-up devices or hot-standbys.": "对关键的ICS装置和服务,如备用装置或热备用装置,都可以提供冗余.",
    "Restrict File and Directory Permissions": "限制文件和目录权限",
    "Restrict access by setting directory and file permissions that are not specific to users or privileged accounts.": "通过设置目录和文件权限来限制访问,这些权限并非针对用户或特权账户.",
    "Software Configuration": "软件配置",
    "Implement configuration changes to software (other than the operating system) to mitigate security risks associated with how the software operates.": "实施软件(除操作系统外)配置变化,以减轻与软件操作方式相关的安全风险.",
    "Antivirus/Antimalware": "抗病毒/抗疟疾软件",
    "Use signatures or heuristics to detect malicious software.  Within industrial control environments, antivirus/antimalware installations should be limited to assets that are not involved in critical or real-time operations. To minimize the impact to system availability, all products should first be validated within a representative test environment before deployment to production systems. (Citation: NCCIC August 2018)": "使用签名或heuristics来检测恶意软件. 在工业控制环境中,抗病毒/抗原装置应限于不参与关键或实时操作的资产。 为了尽量减少对系统可用性的影响,所有产品首先应在具有代表性的试验环境中进行验证,然后再部署到生产系统。 (简体中文:NCCIC 2018年8月)",
    "Minimize Wireless Signal Propagation": "最小化无线信号传播",
    "Wireless signals frequently propagate outside of organizational boundaries, which provide opportunities for adversaries to monitor or gain unauthorized access to the wireless network. (Citation: CISA March 2010) To minimize this threat, organizations should implement measures to detect, understand, and reduce unnecessary RF propagation. (Citation: DHS  National Urban Security Technology Laboratory April 2019)": "无线信号经常在组织范围以外传播,为对手监测或擅自进入无线网络提供了机会。 (2010年3月) 为了尽量减少这种威胁,各组织应采取措施,发现、了解和减少不必要的区域渔业传播。 2019年4月国家城市安全技术实验室",
    "APT38": "APT38 请检查DATE=中的日期值 (帮助)",
    "[APT38](https://attack.mitre.org/groups/G0082) is a North Korean state-sponsored threat group that specializes in financial cyber operations; it has been attributed to the Reconnaissance General Bureau.(Citation: CISA AA20-239A BeagleBoyz August 2020) Active since at least 2014, [APT38](https://attack.mitre.org/groups/G0082) has targeted banks, financial institutions, casinos, cryptocurrency exchanges, SWIFT system endpoints, and ATMs in at least 38 countries worldwide. Significant operations include the 2016 Bank of Bangladesh heist, during which [APT38](https://attack.mitre.org/groups/G0082) stole $81 million, as well as attacks against Bancomext (2018) and Banco de Chile (2018); some of their attacks have been destructive.(Citation: CISA AA20-239A BeagleBoyz August 2020)(Citation: FireEye APT38 Oct 2018)(Citation: DOJ North Korea Indictment Feb 2021)(Citation: Kaspersky Lazarus Under The Hood Blog 2017)\n\nNorth Korean group definitions are known to have significant overlap, and some security researchers report all North Korean state-sponsored cyber activity under the name [Lazarus Group](https://attack.mitre.org/groups/G0032) instead of tracking clusters or subgroups.": "[APT38](https://sattack.mitre.org/groups/G0082)是朝鲜国家赞助的威胁集团,专门从事金融网络业务;被归结于侦察总局. (编号:CISA AA20-239A) Beagle Boyz 2020年8月 (英语). [APT38](https://fattle.mitre.org/groups/G0082)至少从2014年起就针对全世界至少38个国家的银行,金融机构,赌场,密码货币交易所,SWIFT系统端点和自动取款机. 重大业务包括2016年孟加拉国银行抢劫案,期间[APT38](https://sattack.mitre.org/groups/G0082)盗走8100万美元,以及对Bancomext(2018年)和Banco de Chile(2018年)的袭击;其中一些袭击具有破坏性. (编号:CISA AA20-239A) Beagle Boyz August 2020 (简体中文). Citation: FireEye APT38 October 2018 (简体中文) DOJ 朝鲜起诉书 2月 2021 (简体中文) Kaspersky Lazarus Under The Hood Blog 2017).\n\n朝鲜群体定义已知有显著的重叠,一些安全研究者以[Lazarus Group](https://sattack.mitre.org/groups/G0032)的名称报告所有朝鲜国家赞助的网络活动,而不是跟踪集群或分组.",
    "NICKEL GLADSTONE": "尼克尔·格拉斯顿",
    "BeagleBoyz": "比格尔·博伊兹",
    "Bluenoroff": "蓝诺洛夫",
    "Stardust Chollima": "星尘肖利马",
    "ALLANITE": "阿利亚尼特",
    "[ALLANITE](https://attack.mitre.org/groups/G1000) is a suspected Russian cyber espionage group, that has primarily targeted the electric utility sector within the United States and United Kingdom. The group's tactics and techniques are reportedly similar to [Dragonfly](https://attack.mitre.org/groups/G0035), although [ALLANITE](https://attack.mitre.org/groups/G1000)s technical capabilities have not exhibited disruptive or destructive abilities. It has been suggested that the group maintains a presence in ICS for the purpose of gaining understanding of processes and to maintain persistence. (Citation: Dragos)": "[ALLANITE](https://sattack.mitre.org/groups/G1000)是一个俄罗斯网络间谍集团,主要针对美国和联合王国的电力公用事业部门. 据报告,该团体的战术和技术类似于[Dragonfly](https://sattack.mitre.org/groups/G0035),尽管[ALLANITE](https://sattack.mitre.org/groups/G1000)的技术能力没有表现出破坏性或破坏性的能力。 有人建议该小组在科技中心保持存在,以便了解进程并保持持久性。 (城镇:德拉戈斯)",
    "Palmetto Fusion": "帕尔梅托融合",
    "Dragonfly": "飞龙",
    "[Dragonfly](https://attack.mitre.org/groups/G0035) is a cyber espionage group that has been attributed to Russia's Federal Security Service (FSB) Center 16.(Citation: DOJ Russia Targeting Critical Infrastructure March 2022)(Citation: UK GOV FSB Factsheet April 2022) Active since at least 2010, [Dragonfly](https://attack.mitre.org/groups/G0035) has targeted defense and aviation companies, government entities, companies related to industrial control systems, and critical infrastructure sectors worldwide through supply chain, spearphishing, and drive-by compromise attacks.(Citation: Symantec Dragonfly)(Citation: Secureworks IRON LIBERTY July 2019)(Citation: Symantec Dragonfly Sept 2017)(Citation: Fortune Dragonfly 2.0 Sept 2017)(Citation: Gigamon Berserk Bear October 2021)(Citation: CISA AA20-296A Berserk Bear December 2020)(Citation: Symantec Dragonfly 2.0 October 2017)": "[Dragonfly](https://sattack.mitre.org/groups/G0035)是一个网络间谍集团,被归于俄罗斯联邦安全局(FSB)16中心(Citation:DOJ). 俄罗斯 2022年3月目标关键基础设施(城镇:联合王国GOV FSB 概况介绍 2022年4月) 至少从2010年起,[Dragonfly](https://sattack.mitre.org/groups/G0035)就通过供应链、矛头钓鱼和驾车折中攻击,针对国防和航空公司、政府实体、与工业控制系统有关的公司以及全世界关键基础设施部门。 (英文:Symantec Drawfly) (英文:Secureworks IRON LIBERTY July 2019)(英文:Symantec Drawfly September 2017)(英文:Fortune Drawfly 2.0 September 2017)(英文:Gigamon Berserk Bear October 2021)(英文:CISA A20-296A) 贝瑟克熊2020年12月 (中文(简体) ). Symantec Drawfly 2.0 October 2017",
    "TEMP.Isotope": "TEMP.Isotope (英语)",
    "DYMALLOY": "迪玛莉",
    "Berserk Bear": "贝瑟克熊",
    "TG-4192": "TG-4192型飞机",
    "Crouching Yeti": "蹲着叶蒂",
    "IRON LIBERTY": "独立自由",
    "Energetic Bear": "敏锐熊",
    "FIN6": "财务信息6",
    "[FIN6](https://attack.mitre.org/groups/G0037) is a cyber crime group that has stolen payment card data and sold it for profit on underground marketplaces. This group has aggressively targeted and compromised point of sale (PoS) systems in the hospitality and retail sectors.(Citation: FireEye FIN6 April 2016)(Citation: FireEye FIN6 Apr 2019)": "[FIN6](https://fattle.mitre.org/groups/G0037)是一个网络犯罪集团,盗用支付卡数据,在地下市场出售以牟利. 该集团对招待和零售部门的销售点系统进行攻击和破坏。 (英文:FireEye FIN6 April 2016) (中文(简体) )",
    "Magecart Group 6": "马杰卡特第6组",
    "ITG08": "ITG08 请检查ACCESS-DATE=中的日期值 (帮助)",
    "Skeleton Spider": "斯凯尔顿蜘蛛",
    "FIN7": "财务信息7",
    "[FIN7](https://attack.mitre.org/groups/G0046) is a financially-motivated threat group that has been active since 2013. [FIN7](https://attack.mitre.org/groups/G0046) has primarily targeted the retail, restaurant, hospitality, software, consulting, financial services, medical equipment, cloud services, media, food and beverage, transportation, and utilities industries in the U.S. A portion of [FIN7](https://attack.mitre.org/groups/G0046) was run out of a front company called Combi Security and often used point-of-sale malware for targeting efforts. Since 2020, [FIN7](https://attack.mitre.org/groups/G0046) shifted operations to a big game hunting (BGH) approach including use of [REvil](https://attack.mitre.org/software/S0496) ransomware and their own Ransomware as a Service (RaaS), Darkside. FIN7 may be linked to the [Carbanak](https://attack.mitre.org/groups/G0008) Group, but there appears to be several groups using [Carbanak](https://attack.mitre.org/software/S0030) malware and are therefore tracked separately.(Citation: FireEye FIN7 March 2017)(Citation: FireEye FIN7 April 2017)(Citation: FireEye CARBANAK June 2017)(Citation: FireEye FIN7 Aug 2018)(Citation: CrowdStrike Carbon Spider August 2021)(Citation: Mandiant FIN7 Apr 2022)": "[FIN7](https://sattack.mitre.org/groups/G0046)是一个自2013年起活跃于金融动机的威胁集团. [FIN7](https://sattack.mitre.org/groups/G0046)主要针对美国零售,餐厅,招待,软件,咨询,金融服务,医疗设备,云服务,媒体,食品和饮料,交通,公用事业等行业. [FIN7](https://sattack.mitre.org/groups/G0046)的一部分从一家名为Combi Security的幌子公司耗尽,并经常使用销售点恶意软件来瞄准目标. 2020年起,[FIN7](https://sattack.mitre.org/groups/G0046)将业务转向大游戏狩猎(BGH)方式,包括使用[Revil](https://sattack.mitre.org/software/S0496)赎金软件和他们自己的Ransomware作为服务(RaaS),Darkside. FIN7可能与[Carbanak]链接(https://sattack.mitre.org/groups/G0008). 团体,但似乎有多个团体使用[Carbanak](https://state.mitre.org/software/S0030)恶意软件,因此被单独跟踪. (英文:FireEye FIN7 March 2017) (中文(简体) ). Eye CARBANAK 2017年6月 (中文(简体) ). Eye: FireEye FIN7 2018年8月 (简体). Edge: CrowdStrike Carbon Spider August 2021 (简体中文). Edge: Mandiant FIN7 Apr 2022 (简体中文)",
    "GOLD NIAGARA": "几内亚",
    "ITG14": "第14工作队",
    "Carbon Spider": "碳蜘蛛",
    "Sandworm Team": "沙虫小组",
    "[Sandworm Team](https://attack.mitre.org/groups/G0034) is a destructive threat group that has been attributed to Russia's General Staff Main Intelligence Directorate (GRU) Main Center for Special Technologies (GTsST) military unit 74455.(Citation: US District Court Indictment GRU Unit 74455 October 2020)(Citation: UK NCSC Olympic Attacks October 2020) This group has been active since at least 2009.(Citation: iSIGHT Sandworm 2014)(Citation: CrowdStrike VOODOO BEAR)(Citation: USDOJ Sandworm Feb 2020)(Citation: NCSC Sandworm Feb 2020)\n\nIn October 2020, the US indicted six GRU Unit 74455 officers associated with [Sandworm Team](https://attack.mitre.org/groups/G0034) for the following cyber operations: the 2015 and 2016 attacks against Ukrainian electrical companies and government organizations, the 2017 worldwide [NotPetya](https://attack.mitre.org/software/S0368) attack, targeting of the 2017 French presidential campaign, the 2018 [Olympic Destroyer](https://attack.mitre.org/software/S0365) attack against the Winter Olympic Games, the 2018 operation against the Organisation for the Prohibition of Chemical Weapons, and attacks against the country of Georgia in 2018 and 2019.(Citation: US District Court Indictment GRU Unit 74455 October 2020)(Citation: UK NCSC Olympic Attacks October 2020) Some of these were conducted with the assistance of GRU Unit 26165, which is also referred to as [APT28](https://attack.mitre.org/groups/G0007).(Citation: US District Court Indictment GRU Oct 2018)": "[沙虫队](https://sattack.mitre.org/groups/G0034)是俄罗斯总参谋部主要情报局(GRU)主要特种技术中心(GTsST)军事单位74455. (案件:美国地区法院起诉GRU股2020年10月7日)(案件:英国NCSC奥林匹克攻击2020年10月) 这个团体至少从2009年开始活跃. (引文:iSIGHT 沙虫2014)(引文:CrowdStrike VOODO BEAR)(引文:UDOJ 沙虫2020年2月)(引文:NCSC 沙虫2020年2月)\n\n2020年10月,美国起诉了6名与[山虫队]有关的GRU部队74455名军官(https://sattack.mitre.org/groups/G0034),罪名是以下网络行动:2015年和2016年对乌克兰电气公司和政府组织的袭击,2017年全球范围的[NotPetya](https://sattack.mitre.org/software/S0368)袭击,目标是2017年法国总统竞选,2018年[奥运会破坏者](https://sattack.mitre.org/software/S0365)袭击冬季奥林匹克运动会,2018年对禁止化学武器组织的行动,以及2018年和2019年对格鲁吉亚国家的袭击. (案件:美国地区法院起诉GRU股2020年10月7日)(案件:英国NCSC奥林匹克攻击2020年10月) 其中一些是在GRU Unit 26165的协助下进行的,它也被称为[APT28](https://state.mitre.org/groups/G0007). (Citation:美国地区法院起诉书 GRU October 2018)",
    "ELECTRUM": "电子",
    "Telebots": "远程机器人",
    "IRON VIKING": "(原始内容存档于2018-09-21) (英语). IRON VIKING",
    "BlackEnergy (Group)": "黑能源( 组)",
    "Quedagh": "贵达",
    "Voodoo Bear": "巫师熊",
    "IRIDIUM": "伊拉克",
    "OilRig": "油头",
    "[OilRig](https://attack.mitre.org/groups/G0049) is a suspected Iranian threat group that has targeted Middle Eastern and international victims since at least 2014. The group has targeted a variety of sectors, including financial, government, energy, chemical, and telecommunications. It appears the group carries out supply chain attacks, leveraging the trust relationship between organizations to attack their primary targets. FireEye assesses that the group works on behalf of the Iranian government based on infrastructure details that contain references to Iran, use of Iranian infrastructure, and targeting that aligns with nation-state interests.(Citation: Palo Alto OilRig April 2017)(Citation: ClearSky OilRig Jan 2017)(Citation: Palo Alto OilRig May 2016)(Citation: Palo Alto OilRig Oct 2016)(Citation: Unit42 OilRig Playbook 2023)(Citation: FireEye APT34 Dec 2017)(Citation: Unit 42 QUADAGENT July 2018)": "[OilRig](https://sattack.mitre.org/groups/G0049)是伊朗的一个疑似威胁团体,自2014年起至少针对中东和国际受害者. 该小组以金融、政府、能源、化学和电信等多个部门为目标。 看来该团体进行供应链攻击,利用各组织之间的信任关系攻击其主要目标。 开火 Eye评估说,该集团代表伊朗政府开展工作,其基础是基础设施细节,其中提及伊朗、使用伊朗基础设施以及针对符合民族国家利益的目标。 (英文)Palo Alto OilRig 2017年4月 (英文)Citation:ClearSky OilRig Jan 2017年 (英文)Citation:Palo Alto OilRig May 2016年 (英文)Citation:Palo Alto OilRig Octo Octo 2016年10月 (英文)Citation:Unit 42 OilRig Playbook 2023 (英文)Citation: FireEye APT34 2017年12月 (英文)Citation:Unit 42 QUADAGENT 2018年7月 (英文) Citation:UUUADAGENT 20",
    "COBALT GYPSY": "科博特・吉佩西",
    "IRN2": "IRN2 (英语)",
    "APT34": "APT34 请检查URL=值 (帮助)",
    "Helix Kitten": "螺旋猫",
    "Evasive Serpens": "潜逃的塞彭斯",
    "Dragonfly 2.0": "飞龙2.0",
    "[Dragonfly 2.0](https://attack.mitre.org/groups/G0074) is a suspected Russian group that has targeted government entities and multiple U.S. critical infrastructure sectors since at least December 2015. (Citation: US-CERT TA18-074A) (Citation: Symantec Dragonfly Sept 2017) There is debate over the extent of overlap between [Dragonfly 2.0](https://attack.mitre.org/groups/G0074) and [Dragonfly](https://attack.mitre.org/groups/G0035), but there is sufficient evidence to lead to these being tracked as two separate groups. (Citation: Fortune Dragonfly 2.0 Sept 2017)(Citation: Dragos DYMALLOY )": "[Dragonfly 2.0](https://sattack.mitre.org/groups/G0074)是俄罗斯的一个疑似团体,自2015年12月起至少针对政府实体和美国多个关键基础设施部门. (简体中文:US-CERT TA18-074A) (简体中文:Symantec Drawfly September 2017). 对于[Dragonfly 2.0](https://sattack.mitre.org/groups/G0074)和[Dragonfly](https://sattack.mitre.org/groups/G0035)之间的重叠程度存在争论,但有足够的证据导致这些重叠被作为两个独立的组进行跟踪. (简体中文:福龙飞2.0 2017年9月) (简体中文)",
    "TEMP.Veles": "腾讯网. 曲线",
    "[TEMP.Veles](https://attack.mitre.org/groups/G0088) is a Russia-based threat group that has targeted critical infrastructure. The group has been observed utilizing [TRITON](https://attack.mitre.org/software/S0609), a malware framework designed to manipulate industrial safety systems.(Citation: FireEye TRITON 2019)(Citation: FireEye TEMP.Veles 2018)(Citation: FireEye TEMP.Veles JSON April 2019)": "[TEMP.Veles](https://sattack.mitre.org/groups/G0088)是一个以俄罗斯为基地的威胁集团,以关键基础设施为目标. 观察到该小组使用了[TRITON](https://fattle.mitre.org/software/S0609)这一旨在操纵工业安全系统的恶意软件框架。 (歌词:FireEye TRITON 2019)(歌词:FireEye TEMP.Veles 2018)(歌词:火 Eye TEMP.Veles JSON 2019年4月 (英语)",
    "XENOTIME": "赤道几内亚",
    "GOLD SOUTHFIELD": "南方黄金",
    "[GOLD SOUTHFIELD](https://attack.mitre.org/groups/G0115) is a financially motivated threat group active since at least 2018 that operates the [REvil](https://attack.mitre.org/software/S0496) Ransomware-as-a Service (RaaS). [GOLD SOUTHFIELD](https://attack.mitre.org/groups/G0115) provides backend infrastructure for affiliates recruited on underground forums to perpetrate high value deployments. By early 2020, [GOLD SOUTHFIELD](https://attack.mitre.org/groups/G0115) started capitalizing on the new trend of stealing data and further extorting the victim to pay for their data to not get publicly leaked.(Citation: Secureworks REvil September 2019)(Citation: Secureworks GandCrab and REvil September 2019)(Citation: Secureworks GOLD SOUTHFIELD)(Citation: CrowdStrike Evolution of Pinchy Spider July 2021)": "[GOLD SouthFIELD](https://sattle.mitre.org/groups/G0115)是至少自2018年起活跃在金融上的威胁集团,运营着[Revil](https://sattle.mitre.org/software/S0496). Ransomware-as-a服务(RaaS). [GOLD SouthFIELD](https://sattack.mitre.org/groups/G0115)为地下论坛招聘的子公司提供后端基础设施,以进行高价值部署. 到2020年初,[GOLD SouthFIELD](https://sattack.mitre.org/groups/G0115)开始利用盗取数据的新趋势,并进一步敲诈受害者支付数据费用以免被公开泄露. (Citation: Secureworks Revil 2019年9月)(Citation: Secureworks GandCrab and Revil 2019年9月)(Citation: Secureworks GOLD SouthFIELD)(Citation: CrowdStrike Evolution of Pinchy Spider 2021 July 2021) (英语)",
    "Pinchy Spider": "平齐蜘蛛",
    "Lazarus Group": "拉扎鲁斯集团",
    "[Lazarus Group](https://attack.mitre.org/groups/G0032) is a North Korean state-sponsored cyber threat group that has been attributed to the Reconnaissance General Bureau.(Citation: US-CERT HIDDEN COBRA June 2017)(Citation: Treasury North Korean Cyber Groups September 2019) The group has been active since at least 2009 and was reportedly responsible for the November 2014 destructive wiper attack against Sony Pictures Entertainment as part of a campaign named Operation Blockbuster by Novetta. Malware used by [Lazarus Group](https://attack.mitre.org/groups/G0032) correlates to other reported campaigns, including Operation Flame, Operation 1Mission, Operation Troy, DarkSeoul, and Ten Days of Rain. (Citation: Novetta Blockbuster)\n\nNorth Korean group definitions are known to have significant overlap, and some security researchers report all North Korean state-sponsored cyber activity under the name [Lazarus Group](https://attack.mitre.org/groups/G0032) instead of tracking clusters or subgroups, such as [Andariel](https://attack.mitre.org/groups/G0138), [APT37](https://attack.mitre.org/groups/G0067), [APT38](https://attack.mitre.org/groups/G0082), and [Kimsuky](https://attack.mitre.org/groups/G0094).   ": "[Lazarus Group](https://state.mitre.org/groups/G0032)是朝鲜国家赞助的网络威胁集团,被归结于侦察总局. (网易:美国-CERT HIDDEN COBRA 2017年6月) (网易:财政部朝鲜网络集团 2019年9月). 该团体至少从2009年开始活跃,据报道对2014年11月对索尼影视娱乐的毁灭性擦拭攻击负责,作为诺威塔名为\"Blockbuster行动\"的运动的一部分. [Lazarus Group]使用的恶意软件(https://sattack.mitre.org/groups/G0032)与其他报道的运动有关,包括火焰行动、第一使命行动、特洛伊行动、DarkSeoul行动和十天雨。 (网易:诺威塔·布洛克斯特)\n\n朝鲜群体定义已知存在重大重叠,一些安全研究者以[Lazarus Group](https://sattack.mitre.org/groups/G0032)的名称报告朝鲜国家赞助的所有网络活动,而不是追踪集群或分组,如[Andariel](https://sattack.mitre.org/groups/G0138),[APT37](https://sattack.mitre.org/groups/G0067),[APT38](https://sattack.mitre.org/groups/G0082),和[Kimsuky](https://sattack.mitre.org/groups/0094).",
    "Labyrinth Chollima": "迷宫肖利玛",
    "HIDDEN COBRA": "黑顿眼镜蛇",
    "Guardians of Peace": "和平卫士",
    "ZINC": "兹尼",
    "NICKEL ACADEMY": "尼克尔学院",
    "Wizard Spider": "向导蜘蛛",
    "[Wizard Spider](https://attack.mitre.org/groups/G0102) is a Russia-based financially motivated threat group originally known for the creation and deployment of [TrickBot](https://attack.mitre.org/software/S0266) since at least 2016. [Wizard Spider](https://attack.mitre.org/groups/G0102) possesses a diverse aresenal of tools and has conducted ransomware campaigns against a variety of organizations, ranging from major corporations to hospitals.(Citation: CrowdStrike Ryuk January 2019)(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020)(Citation: CrowdStrike Wizard Spider October 2020)": "[Wizard Spider](https://sattack.mitre.org/groups/G0102)是俄罗斯的一个金融动机的威胁集团,最初以至少从2016年起创建和部署[TrickBot](https://sattack.mitre.org/software/S0266)而闻名. [Wizard Spider](https://sattack.mitre.org/groups/G0102)拥有多种工具,并对各种组织,包括大公司和医院,开展了赎金活动。 (城镇:2019年1月路克(城镇:DHS/CISA) (英文) Ransomware Goaling Health Care October 2020 (Citation: CrowdStrike Wizard Spider October 2020) (中文(中国大陆) )",
    "UNC1878": "UNC1878 联合国",
    "TEMP.MixMaster": "腾讯网. 混合主机",
    "Grim Spider": "闪光蜘蛛",
    "FIN12": "芬兰12",
    "GOLD BLACKBURN": "黄金碎块",
    "ITG23": "23国联",
    "Periwinkle Tempest": "佩里温克勒暴风雨",
    "HEXANE": "洪都拉斯",
    "[HEXANE](https://attack.mitre.org/groups/G1001) is a cyber espionage threat group that has targeted oil & gas, telecommunications, aviation, and internet service provider organizations since at least 2017. Targeted companies have been located in the Middle East and Africa, including Israel, Saudi Arabia, Kuwait, Morocco, and Tunisia. [HEXANE](https://attack.mitre.org/groups/G1001)'s TTPs appear similar to [APT33](https://attack.mitre.org/groups/G0064) and [OilRig](https://attack.mitre.org/groups/G0049) but due to differences in victims and tools it is tracked as a separate entity.(Citation: Dragos Hexane)(Citation: Kaspersky Lyceum October 2021)(Citation: ClearSky Siamesekitten August 2021)(Citation: Accenture Lyceum Targets November 2021)": "[HEXANE](https://sattack.mitre.org/groups/G1001)是一个网络间谍威胁集团,自2017年起至少针对石油天然气,电信,航空,互联网服务提供商组织. 目标公司分布在中东和非洲,包括以色列、沙特阿拉伯、科威特、摩洛哥和突尼斯。 [HEXANE] (https://state.mitre.org/groups/G1001)'s. TTP与[APT33](https://sattack.mitre.org/groups/G0064)和[OilRig](https://sattack.mitre.org/groups/G0049)类似,但由于受害者和工具的不同,它作为一个单独的实体被跟踪. (英文:Dragos Hexene)(英文:Kaspersky Lyceum October 2021)(英文:ClearSky Siamesekitten August 2021)(英文:Accenture Lyceum Targets 11月 2021) (中文(简体) )",
    "Lyceum": "中学",
    "Siamesekitten": "暹罗语Name",
    "Spirlin": "螺旋体",
    "APT33": "APT33 请检查DATE=中的日期值 (帮助)",
    "[APT33](https://attack.mitre.org/groups/G0064) is a suspected Iranian threat group that has carried out operations since at least 2013. The group has targeted organizations across multiple industries in the United States, Saudi Arabia, and South Korea, with a particular interest in the aviation and energy sectors. (Citation: FireEye APT33 Sept 2017) (Citation: FireEye APT33 Webinar Sept 2017)": "[APT33](https://sattack.mitre.org/groups/G0064)是伊朗的一个疑似威胁团体,至少自2013年起开展行动. 该小组针对美国、沙特阿拉伯和韩国多个行业的组织,特别关注航空和能源部门。 (简体中文:FireEye APT33 September 2017) (简体中文:FireEye APT33 Webinar September 2017)",
    "HOLMIUM": "霍尔米乌姆",
    "Elfin": "埃尔芬",
    "EKANS": "埃及",
    "[EKANS](https://attack.mitre.org/software/S0605) is ransomware variant written in Golang that first appeared in mid-December 2019 and has been used against multiple sectors, including energy, healthcare, and automotive manufacturing, which in some cases resulted in significant operational disruptions. [EKANS](https://attack.mitre.org/software/S0605) has used a hard-coded kill-list of processes, including some associated with common ICS software platforms (e.g., GE Proficy, Honeywell HMIWeb, etc), similar to those defined in [MegaCortex](https://attack.mitre.org/software/S0576).(Citation: Dragos EKANS)(Citation: Palo Alto Unit 42 EKANS)": "[EKANS](https://fattle.mitre.org/software/S0605)是用戈兰格写成的赎金软件变体,最早出现于2019年12月中旬,曾被用于多个部门,包括能源,医疗保健,汽车制造等,在某些情况下导致重大运营中断. [EKANS](https://fattle.mitre.org/software/S0605)使用了一个硬编码的杀程列表,包括一些与通用的ICS软件平台(如GE Proficy,Honeywell HMIWeb等)相关的程序,类似于[MegaCortex](https://fattle.mitre.org/software/S0576)中定义的程序. (Citation: Dragos EKANS) (Citation: Palo Alto Unit 42 EKANS)",
    "SNAKEHOSE": "性爱",
    "Backdoor.Oldrea": "后门. 奥尔德里亚",
    "[Backdoor.Oldrea](https://attack.mitre.org/software/S0093) is a modular backdoor that used by [Dragonfly](https://attack.mitre.org/groups/G0035) against energy companies since at least 2013. [Backdoor.Oldrea](https://attack.mitre.org/software/S0093) was distributed via supply chain compromise, and included specialized modules to enumerate and map ICS-specific systems, processes, and protocols.(Citation: Symantec Dragonfly)(Citation: Gigamon Berserk Bear October 2021)(Citation: Symantec Dragonfly Sept 2017)": "[Backdoor.Oldrea](https://sattack.mitre.org/software/S0093)是[Dragonfly](https://sattack.mitre.org/groups/G0035)至少从2013年起针对能源公司的模块式后门. [Backdoor.Oldrea](https://sattle.mitre.org/software/S0093)是通过供应链妥协方式分发的,其中包括专门模块,用于列举和绘制ICS特有的系统、流程和协议。 (简体中文:Symantec Drawfly) (简体中文:Gigamon Besserk Bear October 2021) (简体中文:Symantec Drawfly September 2017)",
    "Havex": "发光",
    "Stuxnet": "钢网",
    "[Stuxnet](https://attack.mitre.org/software/S0603) was the first publicly reported piece of malware to specifically target industrial control systems devices. [Stuxnet](https://attack.mitre.org/software/S0603) is a large and complex piece of malware that utilized multiple different behaviors including multiple zero-day vulnerabilities, a sophisticated Windows rootkit, and network infection routines.(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)(Citation: CISA ICS Advisory ICSA-10-272-01)(Citation: ESET Stuxnet Under the Microscope)(Citation: Langer Stuxnet) [Stuxnet](https://attack.mitre.org/software/S0603) was discovered in 2010, with some components being used as early as November 2008.(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011) ": "[Stuxnet](https://sattack.mitre.org/software/S0603)是第一个公开报告的恶意软件,专门针对工业控制系统装置. [Stuxnet](https://sattack.mitre.org/software/S0603)是一款大型而复杂的恶意软件,它使用了多种不同的行为,包括多个零日弱点,一个复杂的Windows rootkit,以及网络感染常规. (城镇:尼古拉·法里耶尔,利亚姆·奥·穆尔丘, Eric Chien 2011年2月)(Citation: CISA ICS咨询 ICSA-10-272-01)(Citation: ESET Stuxnet Under the Microscope)(Citation: Langer Stuxnet) [Stuxnet](https://sattack.mitre.org/software/S0603)于2010年被发现,一些组件早在2008年11月就被使用. (城镇:尼古拉·法里耶尔,利亚姆·奥·穆尔丘, Eric Chien 2011年2月 (英语)",
    "W32.Stuxnet": "W32. Stuxnet (英语)",
    "Industroyer": "印度工业家",
    "[Industroyer](https://collaborate.mitre.org/attackics/index.php/Software/S0001) is a sophisticated piece of malware designed to cause an [Impact](https://collaborate.mitre.org/attackics/index.php/Impact) to the working processes of Industrial Control Systems (ICS), specifically ICSs used in electrical substations.(Citation: ESET Win32/Industroyer) Industroyer was alleged to be used in the attacks on the Ukrainian power grid in December 2016.(Citation: Dragos Crashoverride)(Citation: CISA Alert (TA17-163A))(Citation: Dragos Crashoverride 2018)(Citation: Dragos Crashoverride 2019)": "[Industroyer](https://collaborate.mitre.org/servics/index.php/Software/S0001)是一款精密的恶意软件,旨在对工业控制系统(ICS)的工作流程造成[impact](https://collaborate.mitre.org/servics/index.php/Impact),具体来说是电气分站使用的ICS. (英文:ESET Win32/Industroyer) Industroyer据称被用于2016年12月对乌克兰电网的袭击. (英文)Dragos Crashoverride) (英文)Citation: CISA Alert (TA17-163A) (英文)Citation: Dragos Crashoverride 2018 (英文)Citation: Dragos Crashoverride 2019 (简体中文)Citation: Dragos Crashoverride 2019",
    "CRASHOVERRIDE": "疯子",
    "Bad Rabbit": "烂兔子",
    "[Bad Rabbit](https://collaborate.mitre.org/attackics/index.php/Software/S0005) is a self-propagating (“wormable”) ransomware that affected the transportation sector in Ukraine. (Citation: ESET Bad Rabbit Oct 2017)": "[Bad Rabbit](https://collaborate.mitre.org/sattackics/index.php/Software/S0005)是一种自行传播的赎金软件,影响了乌克兰的运输部门. (英文:ESET Bad Rabbit October 2017) (英文(简体) )",
    "Diskcoder.D": "D. 磁盘编码器",
    "[Bad Rabbit](https://attack.mitre.org/software/S0606) is a self-propagating ransomware that affected the Ukrainian transportation sector in 2017. [Bad Rabbit](https://attack.mitre.org/software/S0606) has also targeted organizations and consumers in Russia. (Citation: Secure List Bad Rabbit)(Citation: ESET Bad Rabbit)(Citation: Dragos IT ICS Ransomware) ": "[Bad Rabbit](https://fattle.mitre.org/software/S0606)是2017年影响乌克兰交通部门的自传赎金软件. [Bad Rabbit](https://sattack.mitre.org/software/S0606)也针对俄罗斯的组织和消费者. (分类:安全列表坏兔子) (分类:ESET坏兔子) (分类:Dragos IT ICS Ransomware)",
    "Win32/Diskcoder.D": "Win32/ Diskcoder. D (英语)",
    "[Stuxnet](https://collaborate.mitre.org/attackics/index.php/Software/S0010) was the first publicly reported piece of malware to specifically target industrial control systems devices. Stuxnet is a large and complex piece of malware that utilized multiple different complex tactics including multiple zero-day vulnerabilites, a sophisticated Windows rootkit, and network infection routines.(Citation: Wired W32.Stuxnet Dossier Feb 2011)(Citation: Symantec W32.Stuxnet Writeup)(Citation: CISA ICS Advisory (ICSA-10-238-01B))(Citation: SCADAhacker Stuxnet Mitigation Jan 2014)": "[Stuxnet](https://collaborate.mitre.org/sattackics/index.php/Software/S0010)是第一个公开报道的专门针对工业控制系统装置的恶意软件. Stuxnet是一款大型而复杂的恶意软件,使用了多种不同的复杂战术,包括多个零天的Vulnerabilits,一个精密的Windows rootkit,以及网络感染常规. (网易:Wired W32.Stuxnet Dossier Feb 2011) (网易:Symantec W32.Stuxnet Writeup) (网易:CISA ICS咨询(ICSA-10-238-01B)) (网易:SCADAhacker Stuxnet 缓解2014年1月)",
    "Conficker": "装填器",
    "[Conficker](https://collaborate.mitre.org/attackics/index.php/Software/S0012) is a computer worm that targets Microsoft Windows and was first detected in November 2008. It targets a vulnerability (MS08-067) in Windows OS software and dictionary attacks on administrator passwords to propagate while forming a botnet. Conficker made its way onto computers and removable disk drives in a nuclear power plant. (Citation: Malware Shuts Down German Nuclear Power Plant on Chernobyl's 30th Anniversary)": "[Conficker](https://collaborate.mitre.org/sattackics/index.php/Software/S0012)是一种计算机蠕虫,目标是Microsoft Windows,于2008年11月首次被发现. 它针对的是Windows OS软件中的一个弱点(MS08-067)和对管理员密码的攻击,以便在形成botnet的同时进行传播. Conficker在核电站里爬上了计算机和可移动磁盘驱动器。 (切尔诺贝利核电站30周年纪念日 恶意关闭德国核电站)",
    "Downadup": "降级",
    "Kido": "木户",
    "PLC-Blaster": "PLC 爆破机",
    "[PLC-Blaster](https://attack.mitre.org/software/S1006) is a piece of proof-of-concept malware that runs on Siemens S7 PLCs. This worm locates other Siemens S7 PLCs on the network and attempts to infect them.  Once this worm has infected its target and attempted to infect other devices on the network, the worm can then run one of many modules. (Citation: Spenneberg, Ralf, Maik Brggemann, and Hendrik Schwartke March 2016) (Citation: Spenneberg, Ralf 2016) ": "[PLC-Blaster](https://sattack.mitre.org/software/S1006)是一套在西门子S7PLCs上运行的概念恶意软件的证明. 这种蠕虫在网络上找到其他西门子S7 PLC并试图感染它们. 一旦这种蠕虫感染了目标并试图感染网络上的其他设备,蠕虫就可以运行许多模块中的一个. (英文:Spenneberg, Ralf, Maik Brggemann, and Hendrik Schwartke March 2016) (中文(简体) )",
    "BlackEnergy": "黑能源",
    "[BlackEnergy](https://attack.mitre.org/software/S0089) is a malware toolkit that has been used by both criminal and APT actors. It dates back to at least 2007 and was originally designed to create botnets for use in conducting Distributed Denial of Service (DDoS) attacks, but its use has evolved to support various plug-ins. It is well known for being used during the confrontation between Georgia and Russia in 2008, as well as in targeting Ukrainian institutions. Variants include BlackEnergy 2 and BlackEnergy 3. (Citation: F-Secure BlackEnergy 2014)": "[Black Energy](https://sattack.mitre.org/software/S0089)是犯罪及APT两个角色都使用过的恶意软件工具包. 它至少可以追溯到2007年,最初旨在创建用于进行分布式拒绝服务(DDoS)攻击的botnet,但其用途已经演变为支持各种插件. 2008年格鲁吉亚与俄罗斯对峙期间以及在针对乌克兰机构时使用这一工具,是众所周知的。 变体包括黑能源2和黑能源3(Citation:F-Secure Black Energy 2014)",
    "Black Energy": "黑色能源",
    "NotPetya": "不是佩蒂亚",
    "[NotPetya](https://attack.mitre.org/software/S0368) is malware that was used by [Sandworm Team](https://attack.mitre.org/groups/G0034) in a worldwide attack starting on June 27, 2017. While [NotPetya](https://attack.mitre.org/software/S0368) appears as a form of ransomware, its main purpose was to destroy data and disk structures on compromised systems; the attackers never intended to make the encrypted data recoverable. As such, [NotPetya](https://attack.mitre.org/software/S0368) may be more appropriately thought of as a form of wiper malware. [NotPetya](https://attack.mitre.org/software/S0368) contains worm-like features to spread itself across a computer network using the SMBv1 exploits EternalBlue and EternalRomance.(Citation: Talos Nyetya June 2017)(Citation: US-CERT NotPetya 2017)(Citation: ESET Telebots June 2017)(Citation: US District Court Indictment GRU Unit 74455 October 2020)": "[NotPetya](https://sattle.mitre.org/software/S0368)是[山虫队](https://sattle.mitre.org/groups/G0034)在2017年6月27日开始的世界性攻击中使用的恶意软件. 虽然[NotPetya](https://sattack.mitre.org/software/S0368)似乎是一种赎金软件,但其主要目的是破坏受损系统上的数据和磁盘结构;攻击者从未打算使加密数据可以收回. 因此,[NotPetya](https://fattle.mitre.org/software/S0368)可能更适合被认为是一种擦拭恶意软件. [NotPetya](https://fattle.mitre.org/software/S0368)含有类似蠕虫的特性,可以利用SMBv1利用永恒蓝和永恒罗马斯在计算机网络中扩散. (注:Talos Nyetya June 2017) (注:US-CERT NotPetya 2017) (注:ESET Telebots 2017) (注:美国地区法院起诉书GRU Unit 74455 2020年10月)",
    "ExPetr": "ExPetr 服务器",
    "Diskcoder.C": "磁盘编码器. C级",
    "GoldenEye": "金眼",
    "Petrwrap": "包装",
    "Nyetya": "尼特亚",
    "[Conficker](https://attack.mitre.org/software/S0608) is a computer worm first detected in October 2008 that targeted Microsoft Windows using the MS08-067 Windows vulnerability to spread.(Citation: SANS Conficker) In 2016, a variant of [Conficker](https://attack.mitre.org/software/S0608) made its way on computers and removable disk drives belonging to a nuclear power plant.(Citation: Conficker Nuclear Power Plant)": "[Conficker](https://fattle.mitre.org/software/S0608)是2008年10月首次检测到的一种计算机蠕虫,它使用MS08-067 Windows的脆弱性瞄准了Microsoft Windows进行传播. (点击:SANS Conficker) 2016年,[Conficker](https://sattack.mitre.org/software/S0608)的一个变体在属于核电厂的计算机和可移动磁盘驱动器上成功. (电厂:Conficker核电厂)",
    "LockerGoga": "洛克尔戈加",
    "[LockerGoga](https://attack.mitre.org/software/S0372) is ransomware that was first reported in January 2019, and has been tied to various attacks on European companies, including industrial and manufacturing firms.(Citation: Unit42 LockerGoga 2019)(Citation: CarbonBlack LockerGoga 2019)": "[LockerGoga](https://sattack.mitre.org/software/S0372)是2019年1月首次报道的赎金软件,一直与针对包括工业和制造企业在内的欧洲公司的各种袭击有关. (英文:Unit 42 LockerGoga 2019)(英文:Carbon Black LockerGoga 2019) (中文(简体) )",
    "VPNFilter": "VPNFilter 软件",
    "[VPNFilter](https://attack.mitre.org/software/S1010) is a multi-stage, modular platform with versatile capabilities to support both intelligence-collection and destructive cyber attack operations. [VPNFilter](https://attack.mitre.org/software/S1010) modules such as its packet sniffer ('ps') can collect traffic that passes through an infected device, allowing the theft of website credentials and monitoring of Modbus SCADA protocols. (Citation: William Largent June 2018) (Citation: Carl Hurd March 2019)": "[VPNFilter](https://sattack.mitre.org/software/S1010)是一个多阶段,模块化的平台,具有多功能能力,既支持情报收集,又支持破坏性网络攻击行动. [VPNFilter](https://sattack.mitre.org/software/S1010)模块,比如它的包嗅器('ps')可以收集通过受感染设备的流量,允许窃取网站资信和监测Modbus SCADA协议. (英文(简体) : William Largent June 2018) (英文(简体) : Carl Hurd March 2019)",
    "Duqu": "杜库",
    "[Duqu](https://attack.mitre.org/software/S0038) is a malware platform that uses a modular approach to extend functionality after deployment within a target network. (Citation: Symantec W32.Duqu)": "[Duqu](https://sattack.mitre.org/software/S0038)是一个恶意软件平台,在目标网络内部署后使用模块化方法扩展功能. (简体中文:Symantec W32. Duqu)",
    "Industroyer2": "印度工业家2",
    "[Industroyer2](https://attack.mitre.org/software/S1072) is a compiled and static piece of malware that has the ability to communicate over the IEC-104 protocol. It is similar to the IEC-104 module found in [Industroyer](https://attack.mitre.org/software/S0604). Security researchers assess that [Industroyer2](https://attack.mitre.org/software/S1072) was designed to cause impact to high-voltage electrical substations. The initial [Industroyer2](https://attack.mitre.org/software/S1072) sample was compiled on 03/23/2022 and scheduled to execute on 04/08/2022, however it was discovered before deploying, resulting in no impact.(Citation: Industroyer2 Blackhat ESET)": "[Industroyer2](https://sattle.mitre.org/software/S1072)是一款编译而静态的恶意软件,能够通过IEC-104协议进行通信. 它与[Industroyer](https://sattle.mitre.org/software/S0604)中发现的IEC-104模块类似. 安全研究者认为,[Industroyer2](https://sattack.mitre.org/software/S1072)的设计目的是对高压电子站造成撞击. 最初的[Industroyer2](https://fattle.mitre.org/software/S1072)样本是在03/23/2022上编成的,计划在04/08/2022上执行,然而在部署前被发现,未造成任何影响. (英语:Industroyer2 Blackhat ESET)",
    "Killdisk": "杀死盘",
    "In 2015 the BlackEnergy malware contained a component called KillDisk. KillDisk's main functionality is to overwrite files with random data, rendering the OS unbootable. (Citation: ESET BlackEnergy Jan 2016)": "2015年,黑能源恶意软件包含一个名为KillDisk的组件. KillDisk的主要功能是用随机数据覆盖文件,使得OS无法启动. (英文:ESET Black Energy Jan 2016) (英文(简体) )",
    "WannaCry": "韦恩哭",
    "[WannaCry](https://attack.mitre.org/software/S0366) is ransomware that was first seen in a global attack during May 2017, which affected more than 150 countries. It contains worm-like features to spread itself across a computer network using the SMBv1 exploit EternalBlue.(Citation: LogRhythm WannaCry)(Citation: US-CERT WannaCry 2017)(Citation: Washington Post WannaCry 2017)(Citation: FireEye WannaCry 2017)": "[WannaCry](https://state.mitre.org/software/S0366)是2017年5月全球袭击中首次见到的赎金软件,影响了150多个国家. 它包含类似蠕虫的特性,可以利用SMBv1开发永恒蓝,在计算机网络中扩散自己. (简体中文:LogRhythm WannaCry) (简体中文:US-CERT WannaCry 2017) (简体中文:华盛顿邮报WannaCry 2017) (简体中文:火眼WannaCry 2017)",
    "WanaCry": "瓦纳克莱",
    "WanaCrypt": "瓦纳晶体",
    "WanaCrypt0r": "Wana 计算机0r",
    "WCry": "克里语Name",
    "Triton": "特里顿",
    "[Triton](https://attack.mitre.org/software/S1009) is an attack framework built to interact with Triconex Safety Instrumented System (SIS) controllers.(Citation: Blake Johnson, Dan Caban, Marina Krotofil, Dan Scali, Nathan Brubaker, Christopher Glyer December 2017)(Citation: Dragos December 2017)(Citation: DHS CISA February 2019)(Citation: Schneider Electric January 2018)(Citation: Julian Gutmanis March 2019)(Citation: Schneider December 2018)(Citation: Jos Wetzels January 2018)": "[Triton](https://fattle.mitre.org/software/S1009)是一个与Triconex安全仪器系统(SIS)控制器交互而建立的攻击框架. (评论:布莱克·约翰逊,丹·卡班,玛丽娜·克罗托菲尔,丹·斯卡利,内森·布鲁贝克,克里斯托弗·格莱尔 2017年12月)(评论:德拉戈斯 2017年12月)(评论:DHS CISA 2019年2月)(评论:施耐德电气 2018年1月)(评论:朱利安·古特马尼斯 2019年3月)(评论:施耐德 2018年12月)(评论:Jos Wetzels January 2018)",
    "TRISIS": "特里西尔",
    "HatMan": "帽子侠",
    "BlackEnergy 3": "黑能源3",
    "[BlackEnergy 3](https://collaborate.mitre.org/attackics/index.php/Software/S0004) is a malware toolkit that has been used by both criminal and APT actors. It support various plug-ins including a variant of KillDisk. It is known to have been used against the Ukrainian power grid. (Citation: Booz Allen Hamilton)": "[黑能源3](https://collaborate.mitre.org/sattackics/index.php/Software/S0004)是一款恶意软件工具包,被犯罪分子和APT演员都使用过. 它支持各种插件,包括KillDisk的一个变体. 众所周知,它被用于对付乌克兰电网。 (电话:Booz Allen Hamilton)",
    "[EKANS](https://collaborate.mitre.org/attackics/index.php/Software/S0017) is ransomware that was first seen December 2019 and later reported to have impacted operations at Honda automotive production facilities.(Citation: Forbes Snake Ransomware June 2020)(Citation: MalwareByes Honda and Enel Ransomware June 2020)(Citation: Dragos EKANS February 2020) EKANS has a hard-coded kill-list of processes, including some associated with common ICS software platforms (e.g., GE Proficy historian, Honeywell HMIWeb).(Citation: Dragos EKANS February 2020) If the malware discovers these processes on the target system, it will stop, encrypt, and rename the process to prevent the program from restarting. This malware should not be confused with the “Snake” malware associated with the Turla group. The ICS processes documented within the malware’s kill-list is similar to those defined by the MEGACORTEX software.(Citation: FireEye OT Ransomware July 2020)(Citation: Pylos January 2020)(Citation: Dragos EKANS June 2020)The ransomware was initially reported as “Snake”, however, to avoid confusion with the unrelated Turla APT group security researchers spelled it backwards as EKANS.": "[EKANS](https://collaborate.mitre.org/sattackics/index.php/Software/S0017)是一种赎金器械,首次出现于2019年12月,后来据报道影响了本田汽车生产设施的运营. (Citation: Forbes Snake Ransomware June 2020) (Citation:Malwares Byes Honda and Enel Ransomware June 2020) (Citation: Dragos EKANS February 2020) EKANS有一个硬编码的杀程列表,其中包括一些与通用的ICS软件平台相关的程序(如GE Proficy历史学家,Honeywell HMIWeb). (城镇:德拉戈斯 EKANS 2020年2月). 如果恶意软件在目标系统上发现这些进程,它将停止,加密,并重命名进程以防止程序重启. 这一恶意软件不应与Turla集团的“Snake”恶意软件相混淆。 恶意软件的杀机列表中记录的ICS流程与MEGACORTEX软件定义的流程类似. (简体中文:FireEye OT Ransomware 2020年7月) (简体中文:Pylos January 2020) (简体中文:Dragos EKANS 2020年6月) 然而,赎金软件最初被报告为“Snake”,以避免与无关的Turla APT团体安全研究人员混淆,将其反写为EKANS.",
    "Ryuk": " Ryu",
    "[Ryuk](https://attack.mitre.org/software/S0446) is a ransomware designed to target enterprise environments that has been used in attacks since at least 2018. [Ryuk](https://attack.mitre.org/software/S0446) shares code similarities with Hermes ransomware.(Citation: CrowdStrike Ryuk January 2019)(Citation: FireEye Ryuk and Trickbot January 2019)(Citation: FireEye FIN6 Apr 2019)": "[Ryuk](https://sattack.mitre.org/software/S0446)是一种旨在针对至少2018年以来用于袭击的企业环境的赎金软件. [Ryuk](https://fattle.mitre.org/software/S0446)与赫尔梅斯赎金软件共享代码相似. 2019年1月 (中文(简体) )",
    "ACAD/Medre.A": "ACAD/女演员. 页:1",
    "[ACAD/Medre.A](https://attack.mitre.org/software/S1000) is a worm that steals operational information. The worm collects AutoCAD files with drawings. [ACAD/Medre.A](https://attack.mitre.org/software/S1000) has the capability to be used for industrial espionage.(Citation: ESET)": "[ACAD/Medre.A](https://sattack.mitre.org/software/S1000)是一种窃取操作信息的蠕虫. 蠕虫用图纸收集自动CAD文件. [ACAD/Medre.A](https://sattack.mitre.org/software/S1000)具有用于工业间谍活动的能力. (电话:ESET)",
    "REvil": "瑞维尔",
    "[REvil](https://attack.mitre.org/software/S0496) is a ransomware family that has been linked to the [GOLD SOUTHFIELD](https://attack.mitre.org/groups/G0115) group and operated as ransomware-as-a-service (RaaS) since at least April 2019. [REvil](https://attack.mitre.org/software/S0496), which as been used against organizations in the manufacturing, transportation, and electric sectors, is highly configurable and shares code similarities with the GandCrab RaaS.(Citation: Secureworks REvil September 2019)(Citation: Intel 471 REvil March 2020)(Citation: Group IB Ransomware May 2020)": "[Revil](https://fattle.mitre.org/software/S0496)是一个赎金软件家族,与[GOLD SouthFIELD](https://fattle.mitre.org/groups/G0115)集团有联系,至少从2019年4月起作为赎金软件-as-a-service(RaaS)运营. [Revil](https://fattle.mitre.org/software/S0496),曾用于打击制造,运输和电力行业的组织,其造型与GandCrab RaaS(Citation: Secretworks Revil September 2019)非常相似,并共享代码相似(Citation:Intel 471 Revil 2020 (Citation: Group IB Ransomware 2020 May)",
    "Sodin": "索丁语Name",
    "Sodinokibi": "索迪诺基比语Name",
    "INCONTROLLER": "密码",
    "[INCONTROLLER](https://attack.mitre.org/software/S1045) is custom malware that includes multiple modules tailored towards ICS devices and technologies, including Schneider Electric and Omron PLCs as well as OPC UA, Modbus, and CODESYS protocols. [INCONTROLLER](https://attack.mitre.org/software/S1045) has the ability to discover specific devices, download logic on the devices, and exploit platform-specific vulnerabilities. As of September 2022, some security researchers assessed [INCONTROLLER](https://attack.mitre.org/software/S1045) was developed by CHERNOVITE.(Citation: CISA-AA22-103A)(Citation: Brubaker-Incontroller)(Citation: Dragos-Pipedream)(Citation: Schneider-Incontroller)(Citation: Wylie-22) ": "[INCONTROLLER](https://sattle.mitre.org/software/S1045)是定制的恶意软件,包括针对ICS设备和技术定制的多个模块,包括Schneider Electric和Omron PLCs以及OPC UA,Modbus,和CODESYS协议. [INCONTROLLER](https://sattack.mitre.org/software/S1045)具有发现特定设备,下载设备上的逻辑,以及利用平台特定弱点的能力. 截至2022年9月,一些安全研究者评估[INCONTROLLER](https://sattack.mitre.org/software/S1045)是由CHERNOVITE开发的. (Citation: CISA-AA22-103A) (Citation: Brubaker-Incontroller) (Citation: Dragos-Pipedream) (Citation: Schneider-Incontroller) (Citation: Wylie-22)",
    "PIPEDREAM": "钢琴",
    "KillDisk": "杀死磁盘",
    "[KillDisk](https://attack.mitre.org/software/S0607) is a disk-wiping tool designed to overwrite files with random data to render the OS unbootable. It was first observed as a component of [BlackEnergy](https://attack.mitre.org/software/S0089) malware during cyber attacks against Ukraine in 2015. [KillDisk](https://attack.mitre.org/software/S0607) has since evolved into stand-alone malware used by a variety of threat actors against additional targets in Europe and Latin America; in 2016 a ransomware component was also incorporated into some [KillDisk](https://attack.mitre.org/software/S0607) variants.(Citation: KillDisk Ransomware)(Citation: ESEST Black Energy Jan 2016)(Citation: Trend Micro KillDisk 1)(Citation: Trend Micro KillDisk 2)": "[KillDisk](https://sattack.mitre.org/software/S0607)是一个磁盘擦拭工具,旨在用随机数据覆盖文件,使OS无法启动. 在2015年针对乌克兰的网络攻击中,首次观察到它是[黑能源](https://sattack.mitre.org/software/S0089)恶意软件的一个组成部分. [KillDisk](https://sattack.mitre.org/software/S0607)从此演变成独立恶意软件,由各种威胁行为方针对欧洲和拉丁美洲的其他目标使用;2016年,赎金软件组件也被纳入一些[KillDisk](https://sattack.mitre.org/software/S0607)变体. (Citation: KillDisk Ransomware) (Citation: EESEST Black Energy Jan 2016) (Citation: Trend Micro KillDisk 1) (Citation: Trend MicroKillDisk 2)",
    "Win32/KillDisk.NBI": "Win32/KillDisk.NBI (英语)",
    "Win32/KillDisk.NBH": "Win32/KillDisk.NBH (英语)",
    "Win32/KillDisk.NBD": "Win32/ KillDisk.NBD (英语)",
    "Win32/KillDisk.NBC": "Win32/KillDisk.NBC (英语)",
    "Win32/KillDisk.NBB": "Win32/ KillDisk.NBB",
    "[Industroyer](https://attack.mitre.org/software/S0604) is a sophisticated malware framework designed to cause an impact to the working processes of Industrial Control Systems (ICS), specifically components used in electrical substations.(Citation: ESET Industroyer) [Industroyer](https://attack.mitre.org/software/S0604) was used in the attacks on the Ukrainian power grid in December 2016.(Citation: Dragos Crashoverride 2017) This is the first publicly known malware specifically designed to target and impact operations in the electric grid.(Citation: Dragos Crashoverride 2018)": "[Industroyer](https://sattle.mitre.org/software/S0604)是一个精密的恶意软件框架,旨在对工业控制系统(ICS)的工作流程产生影响,具体来说是电气分站所使用的组件. (citation:ESET Industroyer) [Industroyer](https://sattack.mitre.org/software/S0604)被用于2016年12月乌克兰电网的攻击中. (英文(简体) Dragos Crashoverride 2017). 这是第一个被公开的恶意软件,专门设计在电网中瞄准和撞击操作. (简体中文:Dragos Crashoverride 2018)",
    "Win32/Industroyer": "温32/印度工业家",
    "Flame": "火焰",
    "[Flame](https://attack.mitre.org/software/S0143) is a sophisticated toolkit that has been used to collect information since at least 2010, largely targeting Middle East countries. (Citation: Kaspersky Flame)": "[flame](https://sattack.mitre.org/software/S0143)是一个精密的工具包,自2010年以来,该工具包一直用于收集信息,主要针对中东国家. (符号:卡斯珀斯基火焰)",
    "Flamer": "火焰",
    "sKyWIper": "syWiper (英语)",
    "Inhibit Response Function": "Inhibit 响应函数",
    "The adversary is trying to prevent your safety, protection, quality assurance, and operator intervention functions from responding to a failure, hazard, or unsafe state.\n\nInhibit Response Function consists of techniques that adversaries use to hinder the safeguards put in place for processes and products. This may involve the inhibition of safety, protection, quality assurance, or operator intervention functions to disrupt safeguards that aim to prevent the loss of life, destruction of equipment, and disruption of production. These techniques aim to actively deter and prevent expected alarms and responses that arise due to statuses in the ICS environment. Adversaries may modify or update system logic, or even outright prevent responses with a denial-of-service. They may result in the prevention, destruction, manipulation, or modification of programs, logic, devices, and communications. As prevention functions are generally dormant, reporting and processing functions can appear fine, but may have been altered to prevent failure responses in dangerous scenarios. Unlike [Evasion](https://attack.mitre.org/tactics/TA0103), Inhibit Response Function techniques may be more intrusive, such as actively preventing responses to a known dangerous scenario. Adversaries may use these techniques to follow through with or provide cover for [Impact](https://attack.mitre.org/tactics/TA0105) techniques.": "对手试图阻止你的安全,保护,质量保证,操作员干预功能对失败,危险或不安全状态作出反应.\n\nInhibit 反应函数包括对手用来阻碍为工艺和产品制定的保障措施的技术。 这可能涉及抑制安全、保护、质量保证或操作者干预功能,以破坏旨在防止人员伤亡、设备破坏和生产中断的保障措施。 这些技术旨在积极遏制和防止因在科技中心环境中的地位而出现的预期警报和反应。 反常者可能会修改或更新系统逻辑,甚至直接阻止以拒绝服务的方式作出反应。 它们可能导致预防、销毁、操纵或修改程序、逻辑、装置和通信。 由于预防功能一般处于休眠状态,报告和处理功能可能看起来很好,但可能已经改变以防止在危险情况下出现故障。 与[Evasion]不同的是(https://sattack.mitre.org/tactics/TA0103),Inhibit反应函数技术可能更具有侵入性,例如积极防止对已知的危险情景作出反应. 对抗者可能使用这些技术来跟踪或掩护[impact]技术(https://sattack.mitre.org/tactics/TA0105).",
    "Privilege Escalation": "特权升级",
    "The adversary is trying to gain higher-level permissions.\n\nPrivilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities.": "对手试图获得更高的许可。\n\nPrivilege Escalation是由对手用来在系统或网络上获得更高水平权限的技术组成. 爱好者往往可以进入和探索一个拥有非特权访问的网络,但需要更高的权限来完成他们的目标. 共同做法是利用系统弱点、错位和脆弱性.",
    "Lateral Movement": "横向运动",
    "The adversary is trying to move through your ICS environment.\n\nLateral Movement consists of techniques that adversaries use to enter and control remote systems on a network. These techniques abuse default credentials, known accounts, and vulnerable services, and may also leverage dual-homed devices and systems that reside on both the IT and OT networks. The adversary uses these techniques to pivot to their next point in the environment, positioning themselves to where they want to be or think they should be. Following through on their primary objective often requires [Discovery](https://attack.mitre.org/tactics/TA0102) of the network and [Collection](https://attack.mitre.org/tactics/TA0100) to develop awareness of unique ICS devices and processes, in order to find their target and subsequently gain access to it. Reaching this objective often involves pivoting through multiple systems, devices, and accounts. Adversaries may install their own remote tools to accomplish Lateral Movement or leverage default tools, programs, and manufacturer set or other legitimate credentials native to the network, which may be stealthier.": "对手正试图穿过你的ICS环境\n\n横向移动包括对手用来进入和控制网络上的远程系统的技术。 这些技术滥用默认证书、已知账户和弱势服务,还可能利用信息技术和OT网络上的双主装置和系统。 对手利用这些技术在环境的下一个点进行支点,将自己定位到他们想要的地方或认为他们应该去的地方. 贯彻其主要目标,往往需要网络的[发现](https://sattack.mitre.org/tactics/TA0102)和[collection](https://sattack.mitre.org/tactics/TA0100)来培养对独特的ICS装置和过程的认识,以便找到其目标并随后进入. 实现这一目标往往需要通过多个系统、装置和账户进行支点。 爱好者可能安装自己的远程工具来完成横向移动或者杠杆化默认工具,程序,以及厂商设定或者网络内的其他合法证书,这些可能更隐蔽.",
    "Discovery": "发现",
    "The adversary is locating information to assess and identify their targets in your environment.\n\nDiscovery consists of techniques that adversaries use to survey your ICS environment and gain knowledge about the internal network, control system devices, and how their processes interact. These techniques help adversaries observe the environment and determine next steps for target selection and Lateral Movement. They also allow adversaries to explore what they can control and gain insight on interactions between various control system processes. Discovery techniques are often an act of progression into the environment which enable the adversary to orient themselves before deciding how to act. Adversaries may use Discovery techniques that result in Collection, to help determine how available resources benefit their current objective. A combination of native device communications and functions, and custom tools are often used toward this post-compromise information-gathering objective.": "对手正在寻找信息 来评估和确定你们环境中的目标\n\n发现包括对手用来调查你的ICS环境的技术,并获得关于内部网络,控制系统设备的知识,以及它们的过程如何相互作用. 这些技术有助于对手观察环境,并确定今后选择目标和横向移动的步骤。 它们也允许对手探索他们能控制什么,并了解各种控制系统进程之间的相互作用。 发现技术常常是进入环境的一种行为,使对手在决定如何行动之前能够自我定位。 爱好者可能使用导致收集的发现技术,以帮助确定现有资源如何有利于他们目前的目标。 本地设备的通讯和功能,以及定制工具的结合,往往被用于这一妥协后的信息收集目标.",
    "Initial Access": "初始访问",
    "The adversary is trying to get into your ICS environment.\n\nInitial Access consists of techniques that adversaries may use as entry vectors to gain an initial foothold within an ICS environment. These techniques include compromising operational technology assets, IT resources in the OT network, and external remote services and websites. They may also target third party entities and users with privileged access. In particular, these initial access footholds may include devices and communication mechanisms with access to and privileges in both the IT and OT environments. IT resources in the OT environment are also potentially vulnerable to the same attacks as enterprise IT systems. Trusted third parties of concern may include vendors, maintenance personnel, engineers, external integrators, and other outside entities involved in expected ICS operations. Vendor maintained assets may include physical devices, software, and operational equipment. Initial access techniques may also leverage outside devices, such as radios, controllers, or removable media, to remotely interfere with and possibly infect OT operations.": "对手试图进入你的ICS环境。\n\n初始接入包括对手作为进入矢量在ICS环境中获得初始立足点的技术. 这些技术包括损害业务技术资产、OT网络中的信息技术资源以及外部远程服务和网站。 它们还可以针对第三方实体和享有特权的用户。 特别是,这些初始接入立足点可包括在信息技术和OT环境中具有接入和特权的设备和通信机制。 OT环境中的信息技术资源也有可能受到与企业信息技术系统相同的攻击。 受信任的第三方可能包括供应商、维修人员、工程师、外部综合人员以及参与预期的科技中心业务的其他外部实体。 供应商维护的资产可包括实物设备、软件和业务设备。 初始接入技术还可以利用无线电、控制器或可移动介质等外部设备,远程干扰并可能感染OT操作.",
    "Impact": "影响",
    "The adversary is trying to manipulate, interrupt, or destroy your ICS systems, data, and their surrounding environment.\n\nImpact consists of techniques that adversaries use to disrupt, compromise, destroy, and manipulate the integrity and availability of control system operations, processes, devices, and data. These techniques encompass the influence and effects resulting from adversarial efforts to attack the ICS environment or that tangentially impact it. Impact techniques can result in more instantaneous disruption to control processes and the operator, or may result in more long term damage or loss to the ICS environment and related operations. The adversary may leverage [Impair Process Control](https://attack.mitre.org/tactics/TA0106) techniques, which often manifest in more self-revealing impacts on operations, or [Impair Process Control](https://attack.mitre.org/tactics/TA0106) techniques to hinder safeguards and alarms in order to follow through with and provide cover for Impact. In some scenarios, control system processes can appear to function as expected, but may have been altered to benefit the adversary’s goal over the course of a longer duration. These techniques might be used by adversaries to follow through on their end goal or to provide cover for a confidentiality breach.\n\n[Loss of Productivity and Revenue](https://attack.mitre.org/techniques/T0828), [Theft of Operational Information](https://attack.mitre.org/techniques/T0882), and [Damage to Property](https://attack.mitre.org/techniques/T0879) are meant to encompass some of the more granular goals of adversaries in targeted and untargeted attacks. These techniques in and of themselves are not necessarily detectable, but the associated adversary behavior can potentially be mitigated and/or detected.": "对手试图操纵、中断或破坏你的ICS系统、数据及其周围环境。\n\n影响包括对手用来干扰、破坏、破坏和操纵控制系统操作、过程、装置和数据的完整性和可用性的技术。 这些技术包括攻击科技中心环境的对抗性努力所产生的影响和效果,或对其产生微小影响。 撞击技术可能导致控制过程和操作者更瞬间中断,或可能对ICS环境和相关操作造成更长期的破坏或损失. 对手可以利用[Impair 程序控制](https://sattack.mitre.org/tractics/TA0106)技术,这些技术往往表现为对行动产生更多的自我启示影响,或[Impair 程序控制](https://sattack.mitre.org/tractics/TA0106)技术阻碍保障措施和警报,以便跟踪和掩护影响。 在某些情况下,控制系统程序似乎可以按预期运作,但可能在较长的时间内加以改变,以有利于对手的目标。 这些技术可能被对手用来完成最终目标或为违反保密规定提供掩护。\n\n[生产力和收入的损失](https://judge.mitre.org/techniques/T0828), [行动信息盗窃](https://sattack.mitre.org/techniques/T0882)和[财产损失](https://sattack.mitre.org/techniques/T0879)意在包括目标明确和不目标明确的攻击中对手的一些更突出的目标。 这些技术本身不一定能被察觉,但相关的对手行为有可能得到缓解和/或发现.",
    "Persistence": "持久性",
    "The adversary is trying to maintain their foothold in your ICS environment.\n\nPersistence consists of techniques that adversaries use to maintain access to ICS systems and devices across restarts, changed credentials, and other interruptions that could cut off their access. Techniques used for persistence include any access, action, or configuration changes that allow them to secure their ongoing activity and keep their foothold on systems. This may include replacing or hijacking legitimate code, firmware, and other project files, or adding startup code and downloading programs onto devices.": "对手正试图在你的ICS环境中保持立足点.\n\n持久性包括对手通过重启、更改证书和其他可能中断其访问的中断来维持对ICS系统和设备的访问的技术。 用于持久性的技术包括任何访问、行动或配置变化,以使其能够确保正在进行的活动,并保持对系统的立足点。 这可能包括替换或劫持合法代码,固件,以及其他项目文件,或者在设备上添加启动代码和下载程序.",
    "Execution": "执行",
    "The adversary is trying to run code or manipulate system functions, parameters, and data in an unauthorized way.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system, device, or other asset. This execution may also rely on unknowing end users or the manipulation of device operating modes to run. Adversaries may infect remote targets with programmed executables or malicious project files that operate according to specified behavior and may alter expected device behavior in subtle ways. Commands for execution may also be issued from command-line interfaces, APIs, GUIs, or other available interfaces. Techniques that run malicious code may also be paired with techniques from other tactics, particularly to aid network [Discovery](https://attack.mitre.org/tactics/TA0102) and [Collection](https://attack.mitre.org/tactics/TA0100), impact operations, and inhibit response functions.": "对手试图以未经授权的方式运行代码或操纵系统功能,参数和数据.\n\n执行技术导致对手控制的代码在本地或远程系统、设备或其他资产上运行。 这种执行也可能依赖于未知的终端用户或设备操作模式的操纵来运行. 逆行者可能会用编程可执行文件或恶意项目文件感染远程目标,这些文件按照指定的行为进行操作,并可能以微妙的方式改变预期的设备行为. 执行的命令也可以从命令行接口,API,GUI或其他可用的接口中发布. 操作恶意密码的技术也可以与其他战术的技术结合,特别是用于援助网络[Discovery](https://sattack.mitre.org/tactics/TA0102)和[Collection](https://sattack.mitre.org/tactics/TA0100)的操作,并抑制反应功能.",
    "Command and Control": "指挥与控制",
    "The adversary is trying to communicate with and control compromised systems, controllers, and platforms with access to your ICS environment.\n\nCommand and Control consists of techniques that adversaries use to communicate with and send commands to compromised systems, devices, controllers, and platforms with specialized applications used in ICS environments. Examples of these specialized communication devices include human machine interfaces (HMIs), data historians, SCADA servers, and engineering workstations (EWS). Adversaries often seek to use commonly available resources and mimic expected network traffic to avoid detection and suspicion. For instance, commonly used ports and protocols in ICS environments, and even expected IT resources, depending on the target network. Command and Control may be established to varying degrees of stealth, often depending on the victim’s network structure and defenses.": "对手试图与已损坏的系统、控制器和平台进行通信,并控制这些系统、控制器和平台进入你的ICS环境。\n\n指挥与控制包括对手用来与已损坏的系统、设备、控制器和平台通信并发送命令的技术,这些系统、设备、控制器和平台在ICS环境中有专门的应用。 这些专业通信设备的例子包括人机接口(HMIS),数据史学家,SCADA服务器,以及工程工作站(EWS). 爱好者往往寻求利用共同的现有资源,模仿预期的网络流量,以避免发现和怀疑. 例如,ICS环境中常用的端口和协议,甚至预计信息技术资源,取决于目标网络。 指挥和控制的建立可能具有不同程度的隐蔽性,往往取决于受害者的网络结构和防御.",
    "Collection": "收藏",
    "The adversary is trying to gather data of interest and domain knowledge on your ICS environment to inform their goal.\n\nCollection consists of techniques adversaries use to gather domain knowledge and obtain contextual feedback in an ICS environment. This tactic is often performed as part of [Discovery](https://attack.mitre.org/tactics/TA0102), to compile data on control systems and targets of interest that may be used to follow through on the adversary’s objective. Examples of these techniques include observing operation states, capturing screenshots, identifying unique device roles, and gathering system and diagram schematics. Collection of this data can play a key role in planning, executing, and even revising an ICS-targeted attack. Methods of collection depend on the categories of data being targeted, which can include protocol specific, device specific, and process specific configurations and functionality. Information collected may pertain to a combination of system, supervisory, device, and network related data, which conceptually fall under high, medium, and low levels of plan operations. For example, information repositories on plant data at a high level or device specific programs at a low level. Sensitive floor plans, vendor device manuals, and other references may also be at risk and exposed on the internet or otherwise publicly accessible.": "对手试图收集你所关注的 数据 和你的ICS环境的域内知识 以告知他们的目标。\n\n收集包括对手在ICS环境中用于收集域知识并获取背景反馈的技术. 这种战术常常是作为[发现]的一部分(https://sattack.mitre.org/tactics/TA0102)执行的,目的是汇编有关控制系统和利益目标的数据,以便贯彻对手的目标。 这些技术的例子包括观测操作状态,捕捉截图,确定独特的设备角色,以及收集系统和图表图. 收集这种数据可在规划、执行、甚至修订针对科技中心的攻击方面发挥关键作用。 收集方法取决于所针对的数据类别,这可以包括特定协议、特定设备以及处理特定配置和功能。 所收集的信息可能涉及系统、监督、装置和网络相关数据的组合,在概念上属于计划业务的高、中、低水平。 例如,高水平的植物数据信息存储库或低水平的设备特定程序. 敏感的地板图、供应商设备手册和其他参考资料也可能面临风险,在互联网上或以其他方式公开.",
    "Evasion": "撤离",
    "The adversary is trying to avoid security defenses.\n\nEvasion consists of techniques that adversaries use to avoid technical defenses throughout their campaign. Techniques used for evasion include removal of indicators of compromise, spoofing communications, and exploiting software vulnerabilities. Adversaries may also leverage and abuse trusted devices and processes to hide their activity, possibly by masquerading as master devices or native software. Methods of defense evasion for this purpose are often more passive in nature.": "对手试图避开安全防御.\n\n撤退包括对手在整个战役中用来避开技术防御的技术. 用于逃避的技术包括取消妥协指标、窃取通信以及利用软件的脆弱性。 爱好者还可能利用和滥用可信赖的设备和流程来隐藏其活动,可能通过伪装为主设备或本土软件. 为此目的逃避防卫的方法往往更为被动.",
    "Impair Process Control": "缺陷过程控制",
    "The adversary is trying to manipulate, disable, or damage physical control processes.\n\nImpair Process Control consists of techniques that adversaries use to disrupt control logic and cause determinantal effects to processes being controlled in the target environment. Targets of interest may include active procedures or parameters that manipulate the physical environment. These techniques can also include prevention or manipulation of reporting elements and control logic. If an adversary has modified process functionality, then they may also obfuscate the results, which are often self-revealing in their impact on the outcome of a product or the environment. The direct physical control these techniques exert may also threaten the safety of operators and downstream users, which can prompt response mechanisms. Adversaries may follow up with or use [Inhibit Response Function](https://attack.mitre.org/tactics/TA0107) techniques in tandem, to assist with the successful abuse of control processes to result in [Impact](https://attack.mitre.org/tactics/TA0105).": "对手试图操纵,禁用或破坏物理控制程序.\n\n缺陷过程控制包括对手用来破坏控制逻辑并对目标环境中被控制的过程造成决定性影响的技术. 感兴趣的目标可包括操纵自然环境的积极程序或参数。 这些技术还可包括预防或操纵报告要素和控制逻辑。 如果对手修改了工艺功能,那么他们也可能混淆结果,结果往往在对产品或环境结果的影响中自我揭示。 这些技术的直接实际控制还可能威胁到操作者和下游用户的安全,而下游用户可以迅速建立反应机制。 对抗者可采用或协同使用[Inhibit response 功能(https://sattack.mitre.org/tractics/TA0107)技术,协助成功滥用控制程序产生[impact](https://sattack.mitre.org/tractics/TA0105).",
    "Use intrusion detection signatures to block traffic at network boundaries.": "使用入侵检测签名阻断网络边界的流量.",
    "Use network appliances to filter ingress or egress traffic and perform protocol-based filtering. Configure software on endpoints to filter network traffic.": "使用网络设备过滤入侵或入侵流量,并进行基于协议的过滤. 配置端点上的软件来过滤网络流量.",
    "Take and store data backups from end user systems and critical servers. Ensure backup and storage systems are hardened and kept separate from the corporate network to prevent compromise.": "从终端用户系统和关键服务器中获取并存储数据备份. 确保将备份和储存系统加固,并与公司网络分开,以防止妥协.",
    "Architect sections of the network to isolate critical systems, functions, or resources. Use physical and logical segmentation to prevent access to potentially sensitive systems and information. Use a DMZ to contain any internet-facing services that should not be exposed from the internal network. Configure separate virtual private cloud (VPC) instances to isolate critical cloud systems.": "网络的架构部分,以隔离关键系统,功能,或资源. 使用物理和逻辑分解方法,防止接触潜在的敏感系统和信息。 使用一个DMZ,以包含任何不应从内部网络中曝光的互联网接口服务. 配置单独的虚拟私有云(VPC)实例以隔离临界云系统.",
    "Use signatures or heuristics to detect malicious software.": "使用签名或heuristics来检测恶意软件.",
    "Use two or more pieces of evidence to authenticate to a system; such as username and password in addition to a token from a physical smart card or token generator.": "使用两件或多件证据来认证一个系统;例如用户名和密码,以及物理智能卡或信使生成器的令牌.",
    "Implement configuration changes to software (other than the operating system) to mitigate security risks associated to how the software operates.": "对软件(操作系统除外)实施配置改变,以减轻与软件操作方式相关的安全风险.",
    "Restrict execution of code to a virtual environment on or in transit to an endpoint system.": "将代码的执行限制在虚拟环境上或中途进入端点系统.",
    "Perform audits or scans of systems, permissions, insecure software, insecure configurations, etc. to identify potential weaknesses.": "对系统,权限,不安全软件,不安全配置等进行审核或扫描,找出潜在的弱点.",
    "Configure Active Directory to prevent use of certain techniques; use SID Filtering, etc.": "配置活动目录以防止使用某些技术;使用SID过滤等.",
    "Perform regular software updates to mitigate exploitation risk.": "定期更新软件,以减轻开采风险.",
    "Protect sensitive information with strong encryption.": "以强大的加密保护敏感信息.",
    "Leafminer": "叶子",
    "[Leafminer](https://attack.mitre.org/groups/G0077) is an Iranian threat group that has targeted government organizations and business entities in the Middle East since at least early 2017. (Citation: Symantec Leafminer July 2018)": "[Leafminer](https://sattack.mitre.org/groups/G0077)是伊朗的一个威胁集团,从至少2017年初开始就针对中东的政府组织和企业实体. (简体中文:Symantec Leafminer 2018年7月)",
    "Raspite": "喷气"
}